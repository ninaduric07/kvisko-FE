{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport { executeAsync, getKeyHash } from \"../../core/utils/common\";\nimport { isDefined, isPlainObject, isFunction } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport ArrayStore from \"../../data/array_store\";\nimport { applyBatch } from \"../../data/array_utils\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nexport default modules.Controller.inherit(function () {\n  function cloneItems(items, groupCount) {\n    if (items) {\n      items = items.slice(0);\n      if (groupCount) {\n        for (var i = 0; i < items.length; i++) {\n          items[i] = extend({\n            key: items[i].key\n          }, items[i]);\n          items[i].items = cloneItems(items[i].items, groupCount - 1);\n        }\n      }\n    }\n    return items;\n  }\n  function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\n    var operationTypes = {\n      reload: true,\n      fullReload: true\n    };\n    if (lastLoadOptions) {\n      operationTypes = {\n        sorting: !gridCoreUtils.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\n        grouping: !gridCoreUtils.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\n        groupExpanding: !gridCoreUtils.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\n        filtering: !gridCoreUtils.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\n        pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\n        skip: loadOptions.skip !== lastLoadOptions.skip,\n        take: loadOptions.take !== lastLoadOptions.take,\n        pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\n        fullReload: isFullReload,\n        reload: false,\n        paging: false\n      };\n      operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\n      operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take;\n    }\n    return operationTypes;\n  }\n  function getPageDataFromCache(options, updatePaging) {\n    var groupCount = gridCoreUtils.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\n    var items = [];\n    if (fillItemsFromCache(items, options, groupCount)) {\n      return items;\n    } else if (updatePaging) {\n      !function (cacheItemsFromBegin, options, groupCount) {\n        var cacheItemBeginCount = cacheItemsFromBegin.length;\n        var {\n          storeLoadOptions: storeLoadOptions\n        } = options;\n        if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\n          var cacheItemsFromEnd = [];\n          fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\n          var cacheItemEndCount = cacheItemsFromEnd.length;\n          if (cacheItemBeginCount || cacheItemEndCount) {\n            var _options$skip2, _options$take2;\n            options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\n            options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take;\n          }\n          if (cacheItemBeginCount) {\n            storeLoadOptions.skip += cacheItemBeginCount;\n            storeLoadOptions.take -= cacheItemBeginCount;\n            options.cachedDataPartBegin = cacheItemsFromBegin;\n          }\n          if (cacheItemEndCount) {\n            storeLoadOptions.take -= cacheItemEndCount;\n            options.cachedDataPartEnd = cacheItemsFromEnd.reverse();\n          }\n        }\n      }(items, options, groupCount);\n    }\n  }\n  function fillItemsFromCache(items, options, groupCount, fromEnd) {\n    var _ref, _options$take, _options$cachedData;\n    var {\n      storeLoadOptions: storeLoadOptions\n    } = options;\n    var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\n    var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\n    if (take && cachedItems) {\n      var _ref2, _options$skip;\n      var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\n      for (var i = 0; i < take; i++) {\n        var localIndex = fromEnd ? take - 1 - i : i;\n        var cacheItemIndex = localIndex + skip;\n        var cacheItem = cachedItems[cacheItemIndex];\n        if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\n          return true;\n        }\n        var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\n        if (item) {\n          items.push(item);\n        } else {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  function getItemFromCache(options, cacheItem, groupCount, index, take) {\n    if (groupCount && cacheItem) {\n      var skips = 0 === index && options.skips || [];\n      var takes = index === take - 1 && options.takes || [];\n      return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\n        if (groupCount && cacheItem) {\n          var result = _extends({}, cacheItem);\n          var skip = skips[0] || 0;\n          var take = takes[0];\n          var items = cacheItem.items;\n          if (items) {\n            if (void 0 === take && !items[skip]) {\n              return;\n            }\n            result.items = [];\n            if (skips.length) {\n              result.isContinuation = true;\n            }\n            if (takes.length) {\n              result.isContinuationOnNextPage = true;\n            }\n            for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\n              var childCacheItem = items[i + skip];\n              var isLast = i + 1 === take;\n              var item = getGroupItemFromCache(childCacheItem, groupCount - 1, 0 === i ? skips.slice(1) : [], isLast ? takes.slice(1) : []);\n              if (void 0 !== item) {\n                result.items.push(item);\n              } else {\n                return;\n              }\n            }\n          }\n          return result;\n        }\n        return cacheItem;\n      }(cacheItem, groupCount, skips, takes);\n    } else {\n      return cacheItem;\n    }\n  }\n  function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\n    if (groupCount && loadedItem) {\n      var result = _extends({}, loadedItem);\n      delete result.isContinuation;\n      delete result.isContinuationOnNextPage;\n      var skip = skips[0] || 0;\n      if (loadedItem.items) {\n        result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\n        loadedItem.items.forEach((item, index) => {\n          var globalIndex = index + skip;\n          var childSkips = 0 === index ? skips.slice(1) : [];\n          result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips);\n        });\n      }\n      return result;\n    }\n    return loadedItem;\n  }\n  var members = {\n    init: function (dataSource, remoteOperations) {\n      var that = this;\n      that._dataSource = dataSource;\n      that._remoteOperations = remoteOperations || {};\n      that._isLastPage = !dataSource.isLastPage();\n      that._hasLastPage = false;\n      that._currentTotalCount = 0;\n      that._cachedData = {\n        items: {}\n      };\n      that._lastOperationTypes = {};\n      that._eventsStrategy = dataSource._eventsStrategy;\n      that._totalCountCorrection = 0;\n      that._isLoadingAll = false;\n      that.changed = Callbacks();\n      that.loadingChanged = Callbacks();\n      that.loadError = Callbacks();\n      that.customizeStoreLoadOptions = Callbacks();\n      that.changing = Callbacks();\n      that.pushed = Callbacks();\n      that._dataChangedHandler = that._handleDataChanged.bind(that);\n      that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\n      that._dataLoadedHandler = that._handleDataLoaded.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._loadErrorHandler = that._handleLoadError.bind(that);\n      that._pushHandler = that._handlePush.bind(that);\n      that._changingHandler = that._handleChanging.bind(that);\n      dataSource.on(\"changed\", that._dataChangedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"loadError\", that._loadErrorHandler);\n      dataSource.on(\"changing\", that._changingHandler);\n      dataSource.store().on(\"beforePush\", that._pushHandler);\n      each(dataSource, function (memberName, member) {\n        if (!that[memberName] && isFunction(member)) {\n          that[memberName] = function () {\n            return this._dataSource[memberName].apply(this._dataSource, arguments);\n          };\n        }\n      });\n    },\n    remoteOperations: function () {\n      return this._remoteOperations;\n    },\n    dispose: function (isSharedDataSource) {\n      var dataSource = this._dataSource;\n      var store = dataSource.store();\n      dataSource.off(\"changed\", this._dataChangedHandler);\n      dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\n      dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\n      dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\n      dataSource.off(\"loadError\", this._loadErrorHandler);\n      dataSource.off(\"changing\", this._changingHandler);\n      store && store.off(\"beforePush\", this._pushHandler);\n      if (!isSharedDataSource) {\n        dataSource.dispose();\n      }\n    },\n    refresh: function (options, operationTypes) {\n      var dataSource = this._dataSource;\n      if (operationTypes.reload) {\n        this.resetCurrentTotalCount();\n        this._isLastPage = !dataSource.paginate();\n        this._hasLastPage = this._isLastPage;\n      }\n    },\n    resetCurrentTotalCount: function () {\n      this._currentTotalCount = 0;\n      this._totalCountCorrection = 0;\n    },\n    resetCache: function () {\n      this._cachedStoreData = void 0;\n      this._cachedPagingData = void 0;\n    },\n    resetPagesCache: function () {\n      this._cachedData = {\n        items: {}\n      };\n    },\n    _needClearStoreDataCache: function () {\n      var remoteOperations = this.remoteOperations();\n      var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\n      var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\n      return !isLocalOperations;\n    },\n    push: function (changes, fromStore) {\n      var store = this.store();\n      if (this._needClearStoreDataCache()) {\n        this._cachedStoreData = void 0;\n      }\n      this._cachedPagingData = void 0;\n      this.resetPagesCache(true);\n      if (this._cachedStoreData) {\n        applyBatch({\n          keyInfo: store,\n          data: this._cachedStoreData,\n          changes: changes\n        });\n      }\n      if (!fromStore) {\n        this._applyBatch(changes);\n      }\n      this.pushed.fire(changes);\n    },\n    getDataIndexGetter: function () {\n      if (!this._dataIndexGetter) {\n        var indexByKey;\n        var storeData;\n        var store = this.store();\n        this._dataIndexGetter = data => {\n          var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\n          if (!indexByKey || isCacheUpdated) {\n            storeData = this._cachedStoreData || [];\n            indexByKey = {};\n            for (var i = 0; i < storeData.length; i++) {\n              indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i;\n            }\n          }\n          return indexByKey[getKeyHash(store.keyOf(data))];\n        };\n      }\n      return this._dataIndexGetter;\n    },\n    _getKeyInfo: function () {\n      return this.store();\n    },\n    _needToCopyDataObject: () => true,\n    _applyBatch: function (changes, fromStore) {\n      var keyInfo = this._getKeyInfo();\n      var dataSource = this._dataSource;\n      var groupCount = gridCoreUtils.normalizeSortingInfo(this.group()).length;\n      var isReshapeMode = \"reshape\" === this.option(\"editing.refreshMode\");\n      var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\n      changes = changes.filter(function (change) {\n        return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index;\n      });\n      var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\n      var oldItemCount = getItemCount();\n      applyBatch({\n        keyInfo: keyInfo,\n        data: this._items,\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true,\n        skipCopying: !this._needToCopyDataObject()\n      });\n      applyBatch({\n        keyInfo: keyInfo,\n        data: dataSource.items(),\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true,\n        skipCopying: !this._needToCopyDataObject()\n      });\n      var needUpdateTotalCountCorrection = this._currentTotalCount > 0 || (fromStore || !isReshapeMode) && isVirtualMode;\n      if (needUpdateTotalCountCorrection) {\n        this._totalCountCorrection += getItemCount() - oldItemCount;\n      }\n      changes.splice(0, changes.length);\n    },\n    _handlePush: function (_ref5) {\n      var {\n        changes: changes\n      } = _ref5;\n      this.push(changes, true);\n    },\n    _handleChanging: function (e) {\n      this.changing.fire(e);\n      this._applyBatch(e.changes, true);\n    },\n    _needCleanCacheByOperation: function (operationType, remoteOperations) {\n      var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\n      var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\n      var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\n      return currentOperationTypes.some(operationType => remoteOperations[operationType]);\n    },\n    _customizeRemoteOperations: function (options, operationTypes) {\n      var cachedStoreData = this._cachedStoreData;\n      var cachedPagingData = this._cachedPagingData;\n      var cachedData = this._cachedData;\n      if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\n        options.remoteOperations = {\n          filtering: options.remoteOperations.filtering,\n          summary: options.remoteOperations.summary\n        };\n      }\n      if (operationTypes.fullReload) {\n        cachedStoreData = void 0;\n        cachedPagingData = void 0;\n        cachedData = {\n          items: {}\n        };\n      } else {\n        if (operationTypes.reload) {\n          cachedPagingData = void 0;\n          cachedData = {\n            items: {}\n          };\n        } else if (operationTypes.groupExpanding) {\n          cachedData = {\n            items: {}\n          };\n        }\n        each(operationTypes, (operationType, value) => {\n          if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\n            cachedStoreData = void 0;\n            cachedPagingData = void 0;\n          }\n        });\n      }\n      if (cachedPagingData) {\n        options.remoteOperations.paging = false;\n      }\n      options.cachedStoreData = cachedStoreData;\n      options.cachedPagingData = cachedPagingData;\n      options.cachedData = cachedData;\n      if (!options.isCustomLoading) {\n        this._cachedStoreData = cachedStoreData;\n        this._cachedPagingData = cachedPagingData;\n        this._cachedData = cachedData;\n      }\n    },\n    _handleCustomizeStoreLoadOptions(options) {\n      var _options$data;\n      this._handleDataLoading(options);\n      if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\n        options.data = getPageDataFromCache(options, true) || options.cachedStoreData;\n      }\n    },\n    _handleDataLoading: function (options) {\n      var dataSource = this._dataSource;\n      var lastLoadOptions = this._lastLoadOptions;\n      this.customizeStoreLoadOptions.fire(options);\n      options.delay = this.option(\"loadingTimeout\");\n      options.originalStoreLoadOptions = options.storeLoadOptions;\n      options.remoteOperations = extend({}, this.remoteOperations());\n      var isFullReload = !this.isLoaded() && !this._isRefreshing;\n      if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\n        options.delay = void 0;\n      }\n      var loadOptions = extend({\n        pageIndex: this.pageIndex(),\n        pageSize: this.pageSize()\n      }, options.storeLoadOptions);\n      var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\n      this._customizeRemoteOperations(options, operationTypes);\n      if (!options.isCustomLoading) {\n        var isRefreshing = this._isRefreshing;\n        options.pageIndex = dataSource.pageIndex();\n        options.lastLoadOptions = loadOptions;\n        options.operationTypes = operationTypes;\n        this._loadingOperationTypes = operationTypes;\n        this._isRefreshing = true;\n        when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\n          if (this._lastOperationId === options.operationId) {\n            this._isRefreshed = true;\n            this.load().always(() => {\n              this._isRefreshed = false;\n            });\n          }\n        }).fail(() => {\n          dataSource.cancel(options.operationId);\n        }).always(() => {\n          this._isRefreshing = false;\n        });\n        dataSource.cancel(this._lastOperationId);\n        this._lastOperationId = options.operationId;\n        if (this._isRefreshing) {\n          dataSource.cancel(this._lastOperationId);\n        }\n      }\n      this._handleDataLoadingCore(options);\n    },\n    _handleDataLoadingCore: function (options) {\n      var remoteOperations = options.remoteOperations;\n      options.loadOptions = {};\n      var cachedExtra = options.cachedData.extra;\n      var localLoadOptionNames = {\n        filter: !remoteOperations.filtering,\n        sort: !remoteOperations.sorting,\n        group: !remoteOperations.grouping,\n        summary: !remoteOperations.summary,\n        skip: !remoteOperations.paging,\n        take: !remoteOperations.paging,\n        requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\n      };\n      each(options.storeLoadOptions, function (optionName, optionValue) {\n        if (localLoadOptionNames[optionName]) {\n          options.loadOptions[optionName] = optionValue;\n          delete options.storeLoadOptions[optionName];\n        }\n      });\n      if (cachedExtra) {\n        options.extra = cachedExtra;\n      }\n    },\n    _handleDataLoaded: function (options) {\n      var loadOptions = options.loadOptions;\n      var localPaging = options.remoteOperations && !options.remoteOperations.paging;\n      var cachedData = options.cachedData;\n      var storeLoadOptions = options.storeLoadOptions;\n      var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\n      var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\n      var needPagingCache = needCache && localPaging;\n      var needStoreCache = needPagingCache && !options.isCustomLoading;\n      if (!loadOptions) {\n        this._dataSource.cancel(options.operationId);\n        return;\n      }\n      if (localPaging) {\n        options.skip = loadOptions.skip;\n        options.take = loadOptions.take;\n        delete loadOptions.skip;\n        delete loadOptions.take;\n      }\n      if (loadOptions.group) {\n        loadOptions.group = options.group || loadOptions.group;\n      }\n      var groupCount = gridCoreUtils.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\n      if (options.cachedDataPartBegin) {\n        options.data = options.cachedDataPartBegin.concat(options.data);\n      }\n      if (options.cachedDataPartEnd) {\n        options.data = options.data.concat(options.cachedDataPartEnd);\n      }\n      if (!needPageCache || !getPageDataFromCache(options)) {\n        var _options$extra$totalC, _options$extra;\n        if (needPagingCache && options.cachedPagingData) {\n          options.data = cloneItems(options.cachedPagingData, groupCount);\n        } else {\n          if (needStoreCache) {\n            if (!this._cachedStoreData) {\n              this._cachedStoreData = cloneItems(options.data, gridCoreUtils.normalizeSortingInfo(storeLoadOptions.group).length);\n            } else if (options.mergeStoreLoadData) {\n              options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data);\n            }\n          }\n          new ArrayStore(options.data).load(loadOptions).done(data => {\n            options.data = data;\n            if (needStoreCache) {\n              this._cachedPagingData = cloneItems(options.data, groupCount);\n            }\n          }).fail(error => {\n            options.data = new Deferred().reject(error);\n          });\n        }\n        if (loadOptions.requireTotalCount && localPaging) {\n          options.extra = isPlainObject(options.extra) ? options.extra : {};\n          options.extra.totalCount = options.data.length;\n        }\n        if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\n          options.extra.totalCount = -1;\n        }\n        if (!loadOptions.data && (storeLoadOptions.requireTotalCount || (null !== (_options$extra$totalC = null === (_options$extra = options.extra) || void 0 === _options$extra ? void 0 : _options$extra.totalCount) && void 0 !== _options$extra$totalC ? _options$extra$totalC : -1) >= 0)) {\n          this._totalCountCorrection = 0;\n        }\n        this._handleDataLoadedCore(options);\n        if (needPageCache) {\n          cachedData.extra = cachedData.extra || extend({}, options.extra);\n          when(options.data).done(data => {\n            !function (options, data, groupCount) {\n              var _ref3, _options$skip3, _ref4, _options$take3;\n              var {\n                storeLoadOptions: storeLoadOptions\n              } = options;\n              var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\n              var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\n              for (var i = 0; i < take; i++) {\n                var globalIndex = i + skip;\n                var cacheItems = options.cachedData.items;\n                var skips = 0 === i && options.skips || [];\n                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips);\n              }\n            }(options, data, groupCount);\n          });\n        }\n      }\n      when(options.data).done(() => {\n        if (options.lastLoadOptions) {\n          this._lastLoadOptions = options.lastLoadOptions;\n          Object.keys(options.operationTypes).forEach(operationType => {\n            this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType];\n          });\n        }\n      });\n      options.storeLoadOptions = options.originalStoreLoadOptions;\n    },\n    _handleDataLoadedCore: function (options) {\n      if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\n        if (void 0 !== options.skip) {\n          options.data = options.data.slice(options.skip);\n        }\n        if (void 0 !== options.take) {\n          options.data = options.data.slice(0, options.take);\n        }\n      }\n    },\n    _handleLoadingChanged: function (isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleLoadError: function (error) {\n      this.loadError.fire(error);\n      this.changed.fire({\n        changeType: \"loadError\",\n        error: error\n      });\n    },\n    _loadPageSize: function () {\n      return this.pageSize();\n    },\n    _handleDataChanged: function (args) {\n      var currentTotalCount;\n      var dataSource = this._dataSource;\n      var isLoading = false;\n      var isDataLoading = !args || isDefined(args.changeType);\n      var itemsCount = this.itemsCount();\n      if (isDataLoading) {\n        this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\n        if (this._isLastPage) {\n          this._hasLastPage = true;\n        }\n      }\n      if (dataSource.totalCount() >= 0) {\n        if (dataSource.pageIndex() >= this.pageCount()) {\n          dataSource.pageIndex(this.pageCount() - 1);\n          this.pageIndex(dataSource.pageIndex());\n          this.resetPagesCache();\n          dataSource.load();\n          isLoading = true;\n        }\n      } else if (isDataLoading) {\n        currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\n        if (currentTotalCount > this._currentTotalCount) {\n          this._currentTotalCount = currentTotalCount;\n          if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\n            this._totalCountCorrection = 0;\n          }\n        }\n        if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\n          dataSource.pageIndex(this.pageCount() - 1);\n          if (\"infinite\" !== this.option(\"scrolling.mode\")) {\n            dataSource.load();\n            isLoading = true;\n          }\n        }\n      }\n      if (!isLoading) {\n        this._operationTypes = this._lastOperationTypes;\n        this._lastOperationTypes = {};\n        this.component._optionCache = {};\n        this.changed.fire(args);\n        this.component._optionCache = void 0;\n      }\n    },\n    _scheduleCustomLoadCallbacks: function (deferred) {\n      var that = this;\n      that._isCustomLoading = true;\n      deferred.always(function () {\n        that._isCustomLoading = false;\n      });\n    },\n    loadingOperationTypes: function () {\n      return this._loadingOperationTypes;\n    },\n    operationTypes: function () {\n      return this._operationTypes;\n    },\n    lastLoadOptions: function () {\n      return this._lastLoadOptions || {};\n    },\n    isLastPage: function () {\n      return this._isLastPage;\n    },\n    _dataSourceTotalCount: function () {\n      return this._dataSource.totalCount();\n    },\n    totalCount: function () {\n      return parseInt((this._currentTotalCount || this._dataSourceTotalCount()) + this._totalCountCorrection);\n    },\n    totalCountCorrection: function () {\n      return this._totalCountCorrection;\n    },\n    itemsCount: function () {\n      return this._dataSource.items().length;\n    },\n    totalItemsCount: function () {\n      return this.totalCount();\n    },\n    pageSize: function () {\n      var dataSource = this._dataSource;\n      if (!arguments.length && !dataSource.paginate()) {\n        return 0;\n      }\n      return dataSource.pageSize.apply(dataSource, arguments);\n    },\n    pageCount: function () {\n      var count = this.totalItemsCount() - this._totalCountCorrection;\n      var pageSize = this.pageSize();\n      if (pageSize && count > 0) {\n        return Math.max(1, Math.ceil(count / pageSize));\n      }\n      return 1;\n    },\n    hasKnownLastPage: function () {\n      return this._hasLastPage || this._dataSource.totalCount() >= 0;\n    },\n    loadFromStore: function (loadOptions, store) {\n      var dataSource = this._dataSource;\n      var d = new Deferred();\n      if (!dataSource) {\n        return;\n      }\n      store = store || dataSource.store();\n      store.load(loadOptions).done(function (data, extra) {\n        if (data && !Array.isArray(data) && Array.isArray(data.data)) {\n          extra = data;\n          data = data.data;\n        }\n        d.resolve(data, extra);\n      }).fail(d.reject);\n      return d;\n    },\n    isCustomLoading: function () {\n      return !!this._isCustomLoading;\n    },\n    load: function (options) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new Deferred();\n      if (options) {\n        var store = dataSource.store();\n        var dataSourceLoadOptions = dataSource.loadOptions();\n        var loadResult = {\n          storeLoadOptions: options,\n          isCustomLoading: true\n        };\n        each(store._customLoadOptions() || [], function (_, optionName) {\n          if (!(optionName in loadResult.storeLoadOptions)) {\n            loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName];\n          }\n        });\n        this._isLoadingAll = options.isLoadingAll;\n        that._scheduleCustomLoadCallbacks(d);\n        dataSource._scheduleLoadCallbacks(d);\n        that._handleCustomizeStoreLoadOptions(loadResult);\n        !function (action, timeout) {\n          if (isDefined(timeout)) {\n            executeAsync(action, timeout);\n          } else {\n            action();\n          }\n        }(function () {\n          if (!dataSource.store()) {\n            return d.reject(\"canceled\");\n          }\n          when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done(function (data, extra) {\n            loadResult.data = data;\n            loadResult.extra = extra || {};\n            that._handleDataLoaded(loadResult);\n            if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\n              loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions);\n            }\n            when(loadResult.data, loadResult.extra.totalCount).done(function (data, totalCount) {\n              loadResult.extra.totalCount = totalCount;\n              d.resolve(data, loadResult.extra);\n            }).fail(d.reject);\n          }).fail(d.reject);\n        }, that.option(\"loadingTimeout\"));\n        return d.fail(function () {\n          that._eventsStrategy.fireEvent(\"loadError\", arguments);\n        }).always(() => {\n          this._isLoadingAll = false;\n        }).promise();\n      } else {\n        return dataSource.load();\n      }\n    },\n    reload: function (full) {\n      return full ? this._dataSource.reload() : this._dataSource.load();\n    },\n    getCachedStoreData: function () {\n      return this._cachedStoreData;\n    }\n  };\n  return members;\n}());","map":{"version":3,"names":["_extends","Callbacks","modules","gridCoreUtils","executeAsync","getKeyHash","isDefined","isPlainObject","isFunction","each","extend","ArrayStore","applyBatch","when","Deferred","Controller","inherit","cloneItems","items","groupCount","slice","i","length","key","calculateOperationTypes","loadOptions","lastLoadOptions","isFullReload","operationTypes","reload","fullReload","sorting","equalSortParameters","sort","grouping","group","groupExpanding","groupExpand","filtering","equalFilterParameters","filter","pageIndex","skip","take","pageSize","paging","getPageDataFromCache","options","updatePaging","normalizeSortingInfo","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","cacheItemEndCount","_options$skip2","_options$take2","cachedDataPartBegin","cachedDataPartEnd","reverse","fromEnd","_ref","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","item","getItemFromCache","push","index","skips","takes","getGroupItemFromCache","result","isContinuation","isContinuationOnNextPage","childCacheItem","isLast","getCacheItem","loadedItem","forEach","globalIndex","childSkips","members","init","dataSource","remoteOperations","that","_dataSource","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","changed","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_handleDataChanged","bind","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","on","store","memberName","member","apply","arguments","dispose","isSharedDataSource","off","refresh","resetCurrentTotalCount","paginate","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","Object","keys","every","operationName","changes","fromStore","keyInfo","data","_applyBatch","fire","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","keyOf","_getKeyInfo","_needToCopyDataObject","isReshapeMode","option","isVirtualMode","change","type","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","skipCopying","needUpdateTotalCountCorrection","splice","_ref5","e","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","indexOf","currentOperationTypes","some","_customizeRemoteOperations","cachedStoreData","cachedPagingData","summary","value","isCustomLoading","_options$data","_handleDataLoading","delay","originalStoreLoadOptions","isLoaded","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","done","_lastOperationId","operationId","load","always","fail","cancel","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","requireTotalCount","optionName","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","concat","_options$extra$totalC","_options$extra","mergeStoreLoadData","error","reject","totalCount","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","Array","isArray","isLoading","changeType","_loadPageSize","args","currentTotalCount","isDataLoading","pageCount","_operationTypes","component","_optionCache","_scheduleCustomLoadCallbacks","deferred","_isCustomLoading","loadingOperationTypes","_dataSourceTotalCount","parseInt","totalCountCorrection","totalItemsCount","count","Math","max","ceil","hasKnownLastPage","loadFromStore","d","resolve","dataSourceLoadOptions","loadResult","_customLoadOptions","_","isLoadingAll","_scheduleLoadCallbacks","action","timeout","fireEvent","promise","full","getCachedStoreData"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default modules.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCoreUtils.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCoreUtils.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCoreUtils.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCoreUtils.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload,\r\n                reload: false,\r\n                paging: false\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCoreUtils.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var isLast = i + 1 === take;\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, 0 === i ? skips.slice(1) : [], isLast ? takes.slice(1) : []);\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    var members = {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _needToCopyDataObject: () => true,\r\n        _applyBatch: function(changes, fromStore) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCoreUtils.normalizeSortingInfo(this.group()).length;\r\n            var isReshapeMode = \"reshape\" === this.option(\"editing.refreshMode\");\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true,\r\n                skipCopying: !this._needToCopyDataObject()\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true,\r\n                skipCopying: !this._needToCopyDataObject()\r\n            });\r\n            var needUpdateTotalCountCorrection = this._currentTotalCount > 0 || (fromStore || !isReshapeMode) && isVirtualMode;\r\n            if (needUpdateTotalCountCorrection) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes, true)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering,\r\n                    summary: options.remoteOperations.summary\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCoreUtils.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                var _options$extra$totalC, _options$extra;\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCoreUtils.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                if (!loadOptions.data && (storeLoadOptions.requireTotalCount || (null !== (_options$extra$totalC = null === (_options$extra = options.extra) || void 0 === _options$extra ? void 0 : _options$extra.totalCount) && void 0 !== _options$extra$totalC ? _options$extra$totalC : -1) >= 0)) {\r\n                    this._totalCountCorrection = 0\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        _dataSourceTotalCount: function() {\r\n            return this._dataSource.totalCount()\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSourceTotalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    };\r\n    return members\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}