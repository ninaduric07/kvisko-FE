{"ast":null,"code":"import { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\nconst areObjectsEqual = (firstObject, secondObject) => {\n  const bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n  if (!bothAreObjects) {\n    return firstObject === secondObject;\n  }\n  const firstObjectKeys = Object.keys(firstObject);\n  const secondObjectKeys = Object.keys(secondObject);\n  if (firstObjectKeys.length !== secondObjectKeys.length) {\n    return false;\n  }\n  const hasDifferentElement = firstObjectKeys.some(key => firstObject[key] !== secondObject[key]);\n  return !hasDifferentElement;\n};\nexport class BaseInfernoComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this._pendingContext = this.context;\n  }\n  componentWillReceiveProps(_, context) {\n    this._pendingContext = context !== null && context !== void 0 ? context : {};\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return !areObjectsEqual(this.props, nextProps) || !areObjectsEqual(this.state, nextState) || !areObjectsEqual(this.context, this._pendingContext);\n  }\n}\nexport class InfernoComponent extends BaseInfernoComponent {\n  constructor() {\n    super(...arguments);\n    this._effects = [];\n  }\n  createEffects() {\n    return [];\n  }\n  updateEffects() {}\n  componentWillMount() {\n    InfernoEffectHost.lock();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  componentWillUpdate(_nextProps, _nextState, _context) {\n    InfernoEffectHost.lock();\n  }\n  componentDidMount() {\n    InfernoEffectHost.callbacks.push(() => {\n      this._effects = this.createEffects();\n    });\n    InfernoEffectHost.callEffects();\n  }\n  componentDidUpdate() {\n    InfernoEffectHost.callbacks.push(() => this.updateEffects());\n    InfernoEffectHost.callEffects();\n  }\n  destroyEffects() {\n    this._effects.forEach(e => e.dispose());\n  }\n  componentWillUnmount() {\n    this.destroyEffects();\n  }\n}\nexport class InfernoWrapperComponent extends InfernoComponent {\n  constructor() {\n    super(...arguments);\n    this.vDomElement = null;\n  }\n  vDomUpdateClasses() {\n    const el = this.vDomElement;\n    const currentClasses = el.className.length ? el.className.split(' ') : [];\n    const addedClasses = currentClasses.filter(className => el.dxClasses.previous.indexOf(className) < 0);\n    const removedClasses = el.dxClasses.previous.filter(className => currentClasses.indexOf(className) < 0);\n    addedClasses.forEach(value => {\n      const indexInRemoved = el.dxClasses.removed.indexOf(value);\n      if (indexInRemoved > -1) {\n        el.dxClasses.removed.splice(indexInRemoved, 1);\n      } else {\n        el.dxClasses.added.push(value);\n      }\n    });\n    removedClasses.forEach(value => {\n      const indexInAdded = el.dxClasses.added.indexOf(value);\n      if (indexInAdded > -1) {\n        el.dxClasses.added.splice(indexInAdded, 1);\n      } else {\n        el.dxClasses.removed.push(value);\n      }\n    });\n  }\n  componentDidMount() {\n    const el = findDOMfromVNode(this.$LI, true);\n    this.vDomElement = el;\n    super.componentDidMount();\n    el.dxClasses = el.dxClasses || {\n      removed: [],\n      added: [],\n      previous: []\n    };\n    el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ') : [];\n  }\n  componentDidUpdate() {\n    super.componentDidUpdate();\n    const el = this.vDomElement;\n    if (el !== null) {\n      el.dxClasses.added.forEach(className => el.classList.add(className));\n      el.dxClasses.removed.forEach(className => el.classList.remove(className));\n      el.dxClasses.previous = el.className.length ? el.className.split(' ') : [];\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = super.shouldComponentUpdate(nextProps, nextState);\n    if (shouldUpdate) {\n      this.vDomUpdateClasses();\n    }\n    return shouldUpdate;\n  }\n}","map":{"version":3,"names":["Component","findDOMfromVNode","InfernoEffectHost","areObjectsEqual","firstObject","secondObject","bothAreObjects","Object","firstObjectKeys","keys","secondObjectKeys","length","hasDifferentElement","some","key","BaseInfernoComponent","constructor","arguments","_pendingContext","context","componentWillReceiveProps","_","shouldComponentUpdate","nextProps","nextState","props","state","InfernoComponent","_effects","createEffects","updateEffects","componentWillMount","lock","componentWillUpdate","_nextProps","_nextState","_context","componentDidMount","callbacks","push","callEffects","componentDidUpdate","destroyEffects","forEach","e","dispose","componentWillUnmount","InfernoWrapperComponent","vDomElement","vDomUpdateClasses","el","currentClasses","className","split","addedClasses","filter","dxClasses","previous","indexOf","removedClasses","value","indexInRemoved","removed","splice","added","indexInAdded","$LI","classList","add","remove","shouldUpdate"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/@devextreme/runtime/esm/inferno/base_component.js"],"sourcesContent":["import { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\nconst areObjectsEqual = (firstObject, secondObject) => {\n    const bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n    if (!bothAreObjects) {\n        return firstObject === secondObject;\n    }\n    const firstObjectKeys = Object.keys(firstObject);\n    const secondObjectKeys = Object.keys(secondObject);\n    if (firstObjectKeys.length !== secondObjectKeys.length) {\n        return false;\n    }\n    const hasDifferentElement = firstObjectKeys.some((key) => firstObject[key] !== secondObject[key]);\n    return !hasDifferentElement;\n};\nexport class BaseInfernoComponent extends Component {\n    constructor() {\n        super(...arguments);\n        this._pendingContext = this.context;\n    }\n    componentWillReceiveProps(_, context) {\n        this._pendingContext = context !== null && context !== void 0 ? context : {};\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (!areObjectsEqual(this.props, nextProps)\n            || !areObjectsEqual(this.state, nextState)\n            || !areObjectsEqual(this.context, this._pendingContext));\n    }\n}\nexport class InfernoComponent extends BaseInfernoComponent {\n    constructor() {\n        super(...arguments);\n        this._effects = [];\n    }\n    createEffects() {\n        return [];\n    }\n    updateEffects() { }\n    componentWillMount() {\n        InfernoEffectHost.lock();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentWillUpdate(_nextProps, _nextState, _context) {\n        InfernoEffectHost.lock();\n    }\n    componentDidMount() {\n        InfernoEffectHost.callbacks.push(() => { this._effects = this.createEffects(); });\n        InfernoEffectHost.callEffects();\n    }\n    componentDidUpdate() {\n        InfernoEffectHost.callbacks.push(() => this.updateEffects());\n        InfernoEffectHost.callEffects();\n    }\n    destroyEffects() {\n        this._effects.forEach((e) => e.dispose());\n    }\n    componentWillUnmount() {\n        this.destroyEffects();\n    }\n}\nexport class InfernoWrapperComponent extends InfernoComponent {\n    constructor() {\n        super(...arguments);\n        this.vDomElement = null;\n    }\n    vDomUpdateClasses() {\n        const el = this.vDomElement;\n        const currentClasses = el.className.length\n            ? el.className.split(' ')\n            : [];\n        const addedClasses = currentClasses.filter((className) => el.dxClasses.previous.indexOf(className) < 0);\n        const removedClasses = el.dxClasses.previous.filter((className) => currentClasses.indexOf(className) < 0);\n        addedClasses.forEach((value) => {\n            const indexInRemoved = el.dxClasses.removed.indexOf(value);\n            if (indexInRemoved > -1) {\n                el.dxClasses.removed.splice(indexInRemoved, 1);\n            }\n            else {\n                el.dxClasses.added.push(value);\n            }\n        });\n        removedClasses.forEach((value) => {\n            const indexInAdded = el.dxClasses.added.indexOf(value);\n            if (indexInAdded > -1) {\n                el.dxClasses.added.splice(indexInAdded, 1);\n            }\n            else {\n                el.dxClasses.removed.push(value);\n            }\n        });\n    }\n    componentDidMount() {\n        const el = findDOMfromVNode(this.$LI, true);\n        this.vDomElement = el;\n        super.componentDidMount();\n        el.dxClasses = el.dxClasses || {\n            removed: [], added: [], previous: [],\n        };\n        el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ')\n            : [];\n    }\n    componentDidUpdate() {\n        super.componentDidUpdate();\n        const el = this.vDomElement;\n        if (el !== null) {\n            el.dxClasses.added.forEach((className) => el.classList.add(className));\n            el.dxClasses.removed.forEach((className) => el.classList.remove(className));\n            el.dxClasses.previous = el.className.length\n                ? el.className.split(' ')\n                : [];\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = super.shouldComponentUpdate(nextProps, nextState);\n        if (shouldUpdate) {\n            this.vDomUpdateClasses();\n        }\n        return shouldUpdate;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}