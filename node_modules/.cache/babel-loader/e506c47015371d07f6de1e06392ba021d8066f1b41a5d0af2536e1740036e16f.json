{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getOuterWidth, getOuterHeight, getInnerWidth, getInnerHeight, getWidth, getHeight } from \"../core/utils/size\";\nimport { locate, move } from \"../animation/translator\";\nimport registerComponent from \"../core/component_registrator\";\nimport DOMComponent from \"../core/dom_component\";\nimport $ from \"../core/renderer\";\nimport { pairToObject } from \"../core/utils/common\";\nimport { extend } from \"../core/utils/extend\";\nimport { each } from \"../core/utils/iterator\";\nimport { fitIntoRange, inRange } from \"../core/utils/math\";\nimport { isPlainObject, isFunction, isWindow } from \"../core/utils/type\";\nimport { hasWindow } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../events/drag\";\nimport { addNamespace } from \"../events/utils/index\";\nimport { triggerResizeEvent } from \"../events/visibility_change\";\nvar RESIZABLE = \"dxResizable\";\nvar RESIZABLE_CLASS = \"dx-resizable\";\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\nvar SIDE_BORDER_WIDTH_STYLES = {\n  left: \"borderLeftWidth\",\n  top: \"borderTopWidth\",\n  right: \"borderRightWidth\",\n  bottom: \"borderBottomWidth\"\n};\nvar Resizable = DOMComponent.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      handles: \"all\",\n      step: \"1\",\n      stepPrecision: \"simple\",\n      area: void 0,\n      minWidth: 30,\n      maxWidth: 1 / 0,\n      minHeight: 30,\n      maxHeight: 1 / 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      roundStepValue: true,\n      keepAspectRatio: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this.$element().addClass(RESIZABLE_CLASS);\n  },\n  _initMarkup: function () {\n    this.callBase();\n    this._renderHandles();\n  },\n  _render: function () {\n    this.callBase();\n    this._renderActions();\n  },\n  _renderActions: function () {\n    this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\n    this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\n    this._resizeAction = this._createActionByOption(\"onResize\");\n  },\n  _renderHandles: function () {\n    this._handles = [];\n    var handles = this.option(\"handles\");\n    if (\"none\" === handles || !handles) {\n      return;\n    }\n    var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\n    var activeHandlesMap = {};\n    each(directions, (index, handleName) => {\n      activeHandlesMap[handleName] = true;\n      this._renderHandle(handleName);\n    });\n    activeHandlesMap.bottom && activeHandlesMap.right && this._renderHandle(\"corner-bottom-right\");\n    activeHandlesMap.bottom && activeHandlesMap.left && this._renderHandle(\"corner-bottom-left\");\n    activeHandlesMap.top && activeHandlesMap.right && this._renderHandle(\"corner-top-right\");\n    activeHandlesMap.top && activeHandlesMap.left && this._renderHandle(\"corner-top-left\");\n    this._attachEventHandlers();\n  },\n  _renderHandle: function (handleName) {\n    var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\n    this._handles.push($handle);\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n    var handlers = {};\n    handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\n    handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\n    handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\n    this._handles.forEach(handleElement => {\n      eventsEngine.on(handleElement, handlers, {\n        direction: \"both\",\n        immediate: true\n      });\n    });\n  },\n  _detachEventHandlers: function () {\n    this._handles.forEach(handleElement => {\n      eventsEngine.off(handleElement);\n    });\n  },\n  _toggleEventHandlers: function (shouldAttachEvents) {\n    shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers();\n  },\n  _getElementSize: function () {\n    var $element = this.$element();\n    return \"border-box\" === $element.css(\"boxSizing\") ? {\n      width: getOuterWidth($element),\n      height: getOuterHeight($element)\n    } : {\n      width: getWidth($element),\n      height: getHeight($element)\n    };\n  },\n  _dragStartHandler: function (e) {\n    var $element = this.$element();\n    if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n    this._toggleResizingClass(true);\n    this._movingSides = this._getMovingSides(e);\n    this._elementLocation = locate($element);\n    this._elementSize = this._getElementSize();\n    this._renderDragOffsets(e);\n    this._resizeStartAction({\n      event: e,\n      width: this._elementSize.width,\n      height: this._elementSize.height,\n      handles: this._movingSides\n    });\n    e.targetElements = null;\n  },\n  _toggleResizingClass: function (value) {\n    this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value);\n  },\n  _renderDragOffsets: function (e) {\n    var area = this._getArea();\n    if (!area) {\n      return;\n    }\n    var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\n    var handleWidth = getOuterWidth($handle);\n    var handleHeight = getOuterHeight($handle);\n    var handleOffset = $handle.offset();\n    var areaOffset = area.offset;\n    var scrollOffset = this._getAreaScrollOffset();\n    e.maxLeftOffset = this._leftMaxOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\n    e.maxRightOffset = this._rightMaxOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\n    e.maxTopOffset = this._topMaxOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\n    e.maxBottomOffset = this._bottomMaxOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY;\n  },\n  _getBorderWidth: function ($element, direction) {\n    if (isWindow($element.get(0))) {\n      return 0;\n    }\n    var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\n    return parseInt(borderWidth) || 0;\n  },\n  _proportionate: function (direction, value) {\n    var size = this._elementSize;\n    var factor = \"x\" === direction ? size.width / size.height : size.height / size.width;\n    return value * factor;\n  },\n  _getProportionalDelta: function (_ref) {\n    var {\n      x: x,\n      y: y\n    } = _ref;\n    var proportionalY = this._proportionate(\"y\", x);\n    if (proportionalY >= y) {\n      return {\n        x: x,\n        y: proportionalY\n      };\n    }\n    var proportionalX = this._proportionate(\"x\", y);\n    if (proportionalX >= x) {\n      return {\n        x: proportionalX,\n        y: y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n  _getDirectionName: function (axis) {\n    var sides = this._movingSides;\n    if (\"x\" === axis) {\n      return sides.left ? \"left\" : \"right\";\n    } else {\n      return sides.top ? \"top\" : \"bottom\";\n    }\n  },\n  _fitIntoArea: function (axis, value) {\n    var _this;\n    var directionName = this._getDirectionName(axis);\n    return Math.min(value, null !== (_this = this[\"_\".concat(directionName, \"MaxOffset\")]) && void 0 !== _this ? _this : 1 / 0);\n  },\n  _fitDeltaProportionally: function (delta) {\n    var fittedDelta = _extends({}, delta);\n    var size = this._elementSize;\n    var {\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    } = this.option();\n    var getWidth = () => size.width + fittedDelta.x;\n    var getHeight = () => size.height + fittedDelta.y;\n    var isInArea = axis => fittedDelta[axis] === this._fitIntoArea(axis, fittedDelta[axis]);\n    var isFittedX = () => inRange(getWidth(), minWidth, maxWidth) && isInArea(\"x\");\n    var isFittedY = () => inRange(getHeight(), minHeight, maxHeight) && isInArea(\"y\");\n    if (!isFittedX()) {\n      var x = this._fitIntoArea(\"x\", fitIntoRange(getWidth(), minWidth, maxWidth) - size.width);\n      fittedDelta = {\n        x: x,\n        y: this._proportionate(\"y\", x)\n      };\n    }\n    if (!isFittedY()) {\n      var y = this._fitIntoArea(\"y\", fitIntoRange(getHeight(), minHeight, maxHeight) - size.height);\n      fittedDelta = {\n        x: this._proportionate(\"x\", y),\n        y: y\n      };\n    }\n    return isFittedX() && isFittedY() ? fittedDelta : {\n      x: 0,\n      y: 0\n    };\n  },\n  _fitDelta: function (_ref2) {\n    var {\n      x: x,\n      y: y\n    } = _ref2;\n    var size = this._elementSize;\n    var {\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    } = this.option();\n    return {\n      x: fitIntoRange(size.width + x, minWidth, maxWidth) - size.width,\n      y: fitIntoRange(size.height + y, minHeight, maxHeight) - size.height\n    };\n  },\n  _getDeltaByOffset: function (offset) {\n    var sides = this._movingSides;\n    var shouldKeepAspectRatio = this._isCornerHandler(sides) && this.option(\"keepAspectRatio\");\n    var delta = {\n      x: offset.x * (sides.left ? -1 : 1),\n      y: offset.y * (sides.top ? -1 : 1)\n    };\n    if (shouldKeepAspectRatio) {\n      var proportionalDelta = this._getProportionalDelta(delta);\n      var fittedProportionalDelta = this._fitDeltaProportionally(proportionalDelta);\n      delta = fittedProportionalDelta;\n    } else {\n      var fittedDelta = this._fitDelta(delta);\n      var roundedFittedDelta = this._roundByStep(fittedDelta);\n      delta = roundedFittedDelta;\n    }\n    return delta;\n  },\n  _updatePosition: function (delta, _ref3) {\n    var {\n      width: width,\n      height: height\n    } = _ref3;\n    var location = this._elementLocation;\n    var sides = this._movingSides;\n    var $element = this.$element();\n    var elementRect = this._getElementSize();\n    var offsetTop = delta.y * (sides.top ? -1 : 1) - ((elementRect.height || height) - height);\n    var offsetLeft = delta.x * (sides.left ? -1 : 1) - ((elementRect.width || width) - width);\n    move($element, {\n      top: location.top + (sides.top ? offsetTop : 0),\n      left: location.left + (sides.left ? offsetLeft : 0)\n    });\n  },\n  _dragHandler: function (e) {\n    var offset = this._getOffset(e);\n    var delta = this._getDeltaByOffset(offset);\n    var dimensions = this._updateDimensions(delta);\n    this._updatePosition(delta, dimensions);\n    this._triggerResizeAction(e, dimensions);\n  },\n  _updateDimensions: function (delta) {\n    var isAbsoluteSize = size => \"px\" === size.substring(size.length - 2);\n    var isStepPrecisionStrict = \"strict\" === this.option(\"stepPrecision\");\n    var size = this._elementSize;\n    var width = size.width + delta.x;\n    var height = size.height + delta.y;\n    var elementStyle = this.$element().get(0).style;\n    var shouldRenderWidth = delta.x || isStepPrecisionStrict || isAbsoluteSize(elementStyle.width);\n    var shouldRenderHeight = delta.y || isStepPrecisionStrict || isAbsoluteSize(elementStyle.height);\n    if (shouldRenderWidth) {\n      this.option({\n        width: width\n      });\n    }\n    if (shouldRenderHeight) {\n      this.option({\n        height: height\n      });\n    }\n    return {\n      width: shouldRenderWidth ? width : size.width,\n      height: shouldRenderHeight ? height : size.height\n    };\n  },\n  _triggerResizeAction: function (e, _ref4) {\n    var {\n      width: width,\n      height: height\n    } = _ref4;\n    this._resizeAction({\n      event: e,\n      width: this.option(\"width\") || width,\n      height: this.option(\"height\") || height,\n      handles: this._movingSides\n    });\n    triggerResizeEvent(this.$element());\n  },\n  _isCornerHandler: sides => 0 === Object.values(sides).reduce((xor, value) => xor ^ value, 0),\n  _getOffset: function (e) {\n    var offset = e.offset;\n    var sides = this._movingSides;\n    if (!sides.left && !sides.right) {\n      offset.x = 0;\n    }\n    if (!sides.top && !sides.bottom) {\n      offset.y = 0;\n    }\n    return offset;\n  },\n  _roundByStep: function (delta) {\n    return \"strict\" === this.option(\"stepPrecision\") ? this._roundStrict(delta) : this._roundNotStrict(delta);\n  },\n  _getSteps: function () {\n    return pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\n  },\n  _roundNotStrict: function (delta) {\n    var steps = this._getSteps();\n    return {\n      x: delta.x - delta.x % steps.h,\n      y: delta.y - delta.y % steps.v\n    };\n  },\n  _roundStrict: function (delta) {\n    var sides = this._movingSides;\n    var offset = {\n      x: delta.x * (sides.left ? -1 : 1),\n      y: delta.y * (sides.top ? -1 : 1)\n    };\n    var steps = this._getSteps();\n    var location = this._elementLocation;\n    var size = this._elementSize;\n    var xPos = sides.left ? location.left : location.left + size.width;\n    var yPos = sides.top ? location.top : location.top + size.height;\n    var newXShift = (xPos + offset.x) % steps.h;\n    var newYShift = (yPos + offset.y) % steps.v;\n    var sign = Math.sign || (x => {\n      x = +x;\n      if (0 === x || isNaN(x)) {\n        return x;\n      }\n      return x > 0 ? 1 : -1;\n    });\n    var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\n    var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\n    var newOffsetX = offset.x - newXShift;\n    var newOffsetY = offset.y - newYShift;\n    if (newXShift > separatorOffset(steps.h, offset.x)) {\n      newOffsetX += steps.h;\n    }\n    if (newYShift > separatorOffset(steps.v, offset.y)) {\n      newOffsetY += steps.v;\n    }\n    var roundedOffset_x = (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\n      roundedOffset_y = (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0;\n    return {\n      x: roundedOffset_x * (sides.left ? -1 : 1),\n      y: roundedOffset_y * (sides.top ? -1 : 1)\n    };\n  },\n  _getMovingSides: function (e) {\n    var $target = $(e.target);\n    var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\n    var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\n    var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\n    var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\n    return {\n      top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\n      left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\n      bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\n      right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\n    };\n  },\n  _getArea: function () {\n    var area = this.option(\"area\");\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n    if (isPlainObject(area)) {\n      return this._getAreaFromObject(area);\n    }\n    return this._getAreaFromElement(area);\n  },\n  _getAreaScrollOffset: function () {\n    var area = this.option(\"area\");\n    var isElement = !isFunction(area) && !isPlainObject(area);\n    var scrollOffset = {\n      scrollY: 0,\n      scrollX: 0\n    };\n    if (isElement) {\n      var areaElement = $(area)[0];\n      if (isWindow(areaElement)) {\n        scrollOffset.scrollX = areaElement.pageXOffset;\n        scrollOffset.scrollY = areaElement.pageYOffset;\n      }\n    }\n    return scrollOffset;\n  },\n  _getAreaFromObject: function (area) {\n    var result = {\n      width: area.right - area.left,\n      height: area.bottom - area.top,\n      offset: {\n        left: area.left,\n        top: area.top\n      }\n    };\n    this._correctAreaGeometry(result);\n    return result;\n  },\n  _getAreaFromElement: function (area) {\n    var $area = $(area);\n    var result;\n    if ($area.length) {\n      result = {\n        width: getInnerWidth($area),\n        height: getInnerHeight($area),\n        offset: extend({\n          top: 0,\n          left: 0\n        }, isWindow($area[0]) ? {} : $area.offset())\n      };\n      this._correctAreaGeometry(result, $area);\n    }\n    return result;\n  },\n  _correctAreaGeometry: function (result, $area) {\n    var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\n    var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\n    result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\n    result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\n    result.width -= getOuterWidth(this.$element()) - getInnerWidth(this.$element());\n    result.height -= getOuterHeight(this.$element()) - getInnerHeight(this.$element());\n  },\n  _dragEndHandler: function (e) {\n    var $element = this.$element();\n    this._resizeEndAction({\n      event: e,\n      width: getOuterWidth($element),\n      height: getOuterHeight($element),\n      handles: this._movingSides\n    });\n    this._toggleResizingClass(false);\n  },\n  _renderWidth: function (width) {\n    this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")));\n  },\n  _renderHeight: function (height) {\n    this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")));\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"disabled\":\n        this._toggleEventHandlers(!args.value);\n        this.callBase(args);\n        break;\n      case \"handles\":\n        this._invalidate();\n        break;\n      case \"minWidth\":\n      case \"maxWidth\":\n        hasWindow() && this._renderWidth(getOuterWidth(this.$element()));\n        break;\n      case \"minHeight\":\n      case \"maxHeight\":\n        hasWindow() && this._renderHeight(getOuterHeight(this.$element()));\n        break;\n      case \"onResize\":\n      case \"onResizeStart\":\n      case \"onResizeEnd\":\n        this._renderActions();\n        break;\n      case \"area\":\n      case \"stepPrecision\":\n      case \"step\":\n      case \"roundStepValue\":\n      case \"keepAspectRatio\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function () {\n    this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove();\n  },\n  _useTemplates: function () {\n    return false;\n  }\n});\nregisterComponent(RESIZABLE, Resizable);\nexport default Resizable;","map":{"version":3,"names":["_extends","getOuterWidth","getOuterHeight","getInnerWidth","getInnerHeight","getWidth","getHeight","locate","move","registerComponent","DOMComponent","$","pairToObject","extend","each","fitIntoRange","inRange","isPlainObject","isFunction","isWindow","hasWindow","eventsEngine","start","dragEventStart","dragEventMove","end","dragEventEnd","addNamespace","triggerResizeEvent","RESIZABLE","RESIZABLE_CLASS","RESIZABLE_RESIZING_CLASS","RESIZABLE_HANDLE_CLASS","RESIZABLE_HANDLE_TOP_CLASS","RESIZABLE_HANDLE_BOTTOM_CLASS","RESIZABLE_HANDLE_LEFT_CLASS","RESIZABLE_HANDLE_RIGHT_CLASS","RESIZABLE_HANDLE_CORNER_CLASS","DRAGSTART_START_EVENT_NAME","DRAGSTART_EVENT_NAME","DRAGSTART_END_EVENT_NAME","SIDE_BORDER_WIDTH_STYLES","left","top","right","bottom","Resizable","inherit","_getDefaultOptions","callBase","handles","step","stepPrecision","area","minWidth","maxWidth","minHeight","maxHeight","onResizeStart","onResize","onResizeEnd","roundStepValue","keepAspectRatio","_init","$element","addClass","_initMarkup","_renderHandles","_render","_renderActions","_resizeStartAction","_createActionByOption","_resizeEndAction","_resizeAction","_handles","option","directions","split","activeHandlesMap","index","handleName","_renderHandle","_attachEventHandlers","$handle","appendTo","push","handlers","_dragStartHandler","bind","_dragHandler","_dragEndHandler","forEach","handleElement","on","direction","immediate","_detachEventHandlers","off","_toggleEventHandlers","shouldAttachEvents","_getElementSize","css","width","height","e","is","cancel","_toggleResizingClass","_movingSides","_getMovingSides","_elementLocation","_elementSize","_renderDragOffsets","event","targetElements","value","toggleClass","_getArea","target","closest","handleWidth","handleHeight","handleOffset","offset","areaOffset","scrollOffset","_getAreaScrollOffset","maxLeftOffset","_leftMaxOffset","scrollX","maxRightOffset","_rightMaxOffset","maxTopOffset","_topMaxOffset","scrollY","maxBottomOffset","_bottomMaxOffset","_getBorderWidth","get","borderWidth","parseInt","_proportionate","size","factor","_getProportionalDelta","_ref","x","y","proportionalY","proportionalX","_getDirectionName","axis","sides","_fitIntoArea","_this","directionName","Math","min","concat","_fitDeltaProportionally","delta","fittedDelta","isInArea","isFittedX","isFittedY","_fitDelta","_ref2","_getDeltaByOffset","shouldKeepAspectRatio","_isCornerHandler","proportionalDelta","fittedProportionalDelta","roundedFittedDelta","_roundByStep","_updatePosition","_ref3","location","elementRect","offsetTop","offsetLeft","_getOffset","dimensions","_updateDimensions","_triggerResizeAction","isAbsoluteSize","substring","length","isStepPrecisionStrict","elementStyle","style","shouldRenderWidth","shouldRenderHeight","_ref4","Object","values","reduce","xor","_roundStrict","_roundNotStrict","_getSteps","steps","h","v","xPos","yPos","newXShift","newYShift","sign","isNaN","separatorOffset","isSmallOffset","abs","newOffsetX","newOffsetY","roundedOffset_x","roundedOffset_y","$target","hasCornerTopLeftClass","hasClass","hasCornerTopRightClass","hasCornerBottomLeftClass","hasCornerBottomRightClass","call","_getAreaFromObject","_getAreaFromElement","isElement","areaElement","pageXOffset","pageYOffset","result","_correctAreaGeometry","$area","areaBorderLeft","areaBorderTop","_renderWidth","_renderHeight","_optionChanged","args","name","_invalidate","_clean","find","remove","_useTemplates"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/resizable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight,\r\n    getInnerWidth,\r\n    getInnerHeight,\r\n    getWidth,\r\n    getHeight\r\n} from \"../core/utils/size\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    pairToObject\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    fitIntoRange,\r\n    inRange\r\n} from \"../core/utils/math\";\r\nimport {\r\n    isPlainObject,\r\n    isFunction,\r\n    isWindow\r\n} from \"../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../events/drag\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../events/visibility_change\";\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true,\r\n            keepAspectRatio: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        this._handles = [];\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles || !handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        var activeHandlesMap = {};\r\n        each(directions, (index, handleName) => {\r\n            activeHandlesMap[handleName] = true;\r\n            this._renderHandle(handleName)\r\n        });\r\n        activeHandlesMap.bottom && activeHandlesMap.right && this._renderHandle(\"corner-bottom-right\");\r\n        activeHandlesMap.bottom && activeHandlesMap.left && this._renderHandle(\"corner-bottom-left\");\r\n        activeHandlesMap.top && activeHandlesMap.right && this._renderHandle(\"corner-top-right\");\r\n        activeHandlesMap.top && activeHandlesMap.left && this._renderHandle(\"corner-top-left\");\r\n        this._attachEventHandlers()\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\r\n        this._handles.push($handle)\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.on(handleElement, handlers, {\r\n                direction: \"both\",\r\n                immediate: true\r\n            })\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.off(handleElement)\r\n        })\r\n    },\r\n    _toggleEventHandlers: function(shouldAttachEvents) {\r\n        shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers()\r\n    },\r\n    _getElementSize: function() {\r\n        var $element = this.$element();\r\n        return \"border-box\" === $element.css(\"boxSizing\") ? {\r\n            width: getOuterWidth($element),\r\n            height: getOuterHeight($element)\r\n        } : {\r\n            width: getWidth($element),\r\n            height: getHeight($element)\r\n        }\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = locate($element);\r\n        this._elementSize = this._getElementSize();\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = getOuterWidth($handle);\r\n        var handleHeight = getOuterHeight($handle);\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = this._leftMaxOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = this._rightMaxOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = this._topMaxOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = this._bottomMaxOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if (isWindow($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _proportionate: function(direction, value) {\r\n        var size = this._elementSize;\r\n        var factor = \"x\" === direction ? size.width / size.height : size.height / size.width;\r\n        return value * factor\r\n    },\r\n    _getProportionalDelta: function(_ref) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = _ref;\r\n        var proportionalY = this._proportionate(\"y\", x);\r\n        if (proportionalY >= y) {\r\n            return {\r\n                x: x,\r\n                y: proportionalY\r\n            }\r\n        }\r\n        var proportionalX = this._proportionate(\"x\", y);\r\n        if (proportionalX >= x) {\r\n            return {\r\n                x: proportionalX,\r\n                y: y\r\n            }\r\n        }\r\n        return {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    },\r\n    _getDirectionName: function(axis) {\r\n        var sides = this._movingSides;\r\n        if (\"x\" === axis) {\r\n            return sides.left ? \"left\" : \"right\"\r\n        } else {\r\n            return sides.top ? \"top\" : \"bottom\"\r\n        }\r\n    },\r\n    _fitIntoArea: function(axis, value) {\r\n        var _this;\r\n        var directionName = this._getDirectionName(axis);\r\n        return Math.min(value, null !== (_this = this[\"_\".concat(directionName, \"MaxOffset\")]) && void 0 !== _this ? _this : 1 / 0)\r\n    },\r\n    _fitDeltaProportionally: function(delta) {\r\n        var fittedDelta = _extends({}, delta);\r\n        var size = this._elementSize;\r\n        var {\r\n            minWidth: minWidth,\r\n            minHeight: minHeight,\r\n            maxWidth: maxWidth,\r\n            maxHeight: maxHeight\r\n        } = this.option();\r\n        var getWidth = () => size.width + fittedDelta.x;\r\n        var getHeight = () => size.height + fittedDelta.y;\r\n        var isInArea = axis => fittedDelta[axis] === this._fitIntoArea(axis, fittedDelta[axis]);\r\n        var isFittedX = () => inRange(getWidth(), minWidth, maxWidth) && isInArea(\"x\");\r\n        var isFittedY = () => inRange(getHeight(), minHeight, maxHeight) && isInArea(\"y\");\r\n        if (!isFittedX()) {\r\n            var x = this._fitIntoArea(\"x\", fitIntoRange(getWidth(), minWidth, maxWidth) - size.width);\r\n            fittedDelta = {\r\n                x: x,\r\n                y: this._proportionate(\"y\", x)\r\n            }\r\n        }\r\n        if (!isFittedY()) {\r\n            var y = this._fitIntoArea(\"y\", fitIntoRange(getHeight(), minHeight, maxHeight) - size.height);\r\n            fittedDelta = {\r\n                x: this._proportionate(\"x\", y),\r\n                y: y\r\n            }\r\n        }\r\n        return isFittedX() && isFittedY() ? fittedDelta : {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    },\r\n    _fitDelta: function(_ref2) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = _ref2;\r\n        var size = this._elementSize;\r\n        var {\r\n            minWidth: minWidth,\r\n            minHeight: minHeight,\r\n            maxWidth: maxWidth,\r\n            maxHeight: maxHeight\r\n        } = this.option();\r\n        return {\r\n            x: fitIntoRange(size.width + x, minWidth, maxWidth) - size.width,\r\n            y: fitIntoRange(size.height + y, minHeight, maxHeight) - size.height\r\n        }\r\n    },\r\n    _getDeltaByOffset: function(offset) {\r\n        var sides = this._movingSides;\r\n        var shouldKeepAspectRatio = this._isCornerHandler(sides) && this.option(\"keepAspectRatio\");\r\n        var delta = {\r\n            x: offset.x * (sides.left ? -1 : 1),\r\n            y: offset.y * (sides.top ? -1 : 1)\r\n        };\r\n        if (shouldKeepAspectRatio) {\r\n            var proportionalDelta = this._getProportionalDelta(delta);\r\n            var fittedProportionalDelta = this._fitDeltaProportionally(proportionalDelta);\r\n            delta = fittedProportionalDelta\r\n        } else {\r\n            var fittedDelta = this._fitDelta(delta);\r\n            var roundedFittedDelta = this._roundByStep(fittedDelta);\r\n            delta = roundedFittedDelta\r\n        }\r\n        return delta\r\n    },\r\n    _updatePosition: function(delta, _ref3) {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = _ref3;\r\n        var location = this._elementLocation;\r\n        var sides = this._movingSides;\r\n        var $element = this.$element();\r\n        var elementRect = this._getElementSize();\r\n        var offsetTop = delta.y * (sides.top ? -1 : 1) - ((elementRect.height || height) - height);\r\n        var offsetLeft = delta.x * (sides.left ? -1 : 1) - ((elementRect.width || width) - width);\r\n        move($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        })\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = this._getOffset(e);\r\n        var delta = this._getDeltaByOffset(offset);\r\n        var dimensions = this._updateDimensions(delta);\r\n        this._updatePosition(delta, dimensions);\r\n        this._triggerResizeAction(e, dimensions)\r\n    },\r\n    _updateDimensions: function(delta) {\r\n        var isAbsoluteSize = size => \"px\" === size.substring(size.length - 2);\r\n        var isStepPrecisionStrict = \"strict\" === this.option(\"stepPrecision\");\r\n        var size = this._elementSize;\r\n        var width = size.width + delta.x;\r\n        var height = size.height + delta.y;\r\n        var elementStyle = this.$element().get(0).style;\r\n        var shouldRenderWidth = delta.x || isStepPrecisionStrict || isAbsoluteSize(elementStyle.width);\r\n        var shouldRenderHeight = delta.y || isStepPrecisionStrict || isAbsoluteSize(elementStyle.height);\r\n        if (shouldRenderWidth) {\r\n            this.option({\r\n                width: width\r\n            })\r\n        }\r\n        if (shouldRenderHeight) {\r\n            this.option({\r\n                height: height\r\n            })\r\n        }\r\n        return {\r\n            width: shouldRenderWidth ? width : size.width,\r\n            height: shouldRenderHeight ? height : size.height\r\n        }\r\n    },\r\n    _triggerResizeAction: function(e, _ref4) {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = _ref4;\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        triggerResizeEvent(this.$element())\r\n    },\r\n    _isCornerHandler: sides => 0 === Object.values(sides).reduce((xor, value) => xor ^ value, 0),\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var sides = this._movingSides;\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return offset\r\n    },\r\n    _roundByStep: function(delta) {\r\n        return \"strict\" === this.option(\"stepPrecision\") ? this._roundStrict(delta) : this._roundNotStrict(delta)\r\n    },\r\n    _getSteps: function() {\r\n        return pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"))\r\n    },\r\n    _roundNotStrict: function(delta) {\r\n        var steps = this._getSteps();\r\n        return {\r\n            x: delta.x - delta.x % steps.h,\r\n            y: delta.y - delta.y % steps.v\r\n        }\r\n    },\r\n    _roundStrict: function(delta) {\r\n        var sides = this._movingSides;\r\n        var offset = {\r\n            x: delta.x * (sides.left ? -1 : 1),\r\n            y: delta.y * (sides.top ? -1 : 1)\r\n        };\r\n        var steps = this._getSteps();\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || (x => {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        });\r\n        var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\r\n        var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        var roundedOffset_x = (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            roundedOffset_y = (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0;\r\n        return {\r\n            x: roundedOffset_x * (sides.left ? -1 : 1),\r\n            y: roundedOffset_y * (sides.top ? -1 : 1)\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = $(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if (isPlainObject(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !isFunction(area) && !isPlainObject(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = $(area)[0];\r\n            if (isWindow(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = $(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: getInnerWidth($area),\r\n                height: getInnerHeight($area),\r\n                offset: extend({\r\n                    top: 0,\r\n                    left: 0\r\n                }, isWindow($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= getOuterWidth(this.$element()) - getInnerWidth(this.$element());\r\n        result.height -= getOuterHeight(this.$element()) - getInnerHeight(this.$element())\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: getOuterWidth($element),\r\n            height: getOuterHeight($element),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleEventHandlers(!args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                hasWindow() && this._renderWidth(getOuterWidth(this.$element()));\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                hasWindow() && this._renderHeight(getOuterHeight(this.$element()));\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n            case \"keepAspectRatio\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\nregisterComponent(RESIZABLE, Resizable);\r\nexport default Resizable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}