{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninad\\\\OneDrive\\\\Radna povr\\u0161ina\\\\zavrsni\\\\client\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport useSession from \"../../hooks/useSession\";\nimport { Box } from \"@mui/material\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const navigateTo = useNavigate();\n  const session = false;\n  var username = '';\n  const userOptions = [{\n    label: 'Profil',\n    onClick: () => navigateTo('/profil')\n  }, {\n    label: 'Logout'\n    //onClick: () => handleLogout(),\n  }];\n\n  const anonOptions = [{\n    label: session.name,\n    onClick: () => navigateTo('/login')\n  }, {\n    label: 'Register',\n    onClick: () => navigateTo('/register')\n  }];\n  let currentOptions = anonOptions;\n  axios.get('http://localhost:5000/session').then(res => {\n    if (res.data.valid) {\n      currentOptions = userOptions;\n      session = true;\n      username = res.data[0].username;\n    }\n  });\n  //if (session.admin == '0') {\n  //if (session.admin == '1') currentOptions = adminOptions;\n  //    currentOptions = userOptions;\n  //}\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"large\",\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        sx: {\n          mr: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"QuizMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), session == true && /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Pozdrav, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: currentOptions[0].onClick,\n        children: [currentOptions[0].label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: currentOptions[1].onClick,\n        children: currentOptions[1].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"ymtrZ8G6aCOC+j9g/5vfaOOqM8M=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useNavigate","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","useSession","Box","axios","jsxDEV","_jsxDEV","Header","_s","navigateTo","session","username","userOptions","label","onClick","anonOptions","name","currentOptions","get","then","res","data","valid","position","children","size","edge","color","sx","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","flexGrow","_c","$RefreshReg$"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/src/components/Header/Header.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// importing material UI components\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport useSession from \"../../hooks/useSession\";\r\nimport { Box } from \"@mui/material\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function Header() {\r\n    const navigateTo = useNavigate();\r\n    const session = false;\r\n    var username = '';\r\n\r\n\r\n\r\n    const userOptions = [\r\n        {\r\n            label: 'Profil',\r\n            onClick: () => navigateTo('/profil'),\r\n        },\r\n        {\r\n            label: 'Logout',\r\n            //onClick: () => handleLogout(),\r\n        },\r\n    ];\r\n\r\n    const anonOptions = [\r\n        {\r\n            label: session.name,\r\n            onClick: () => navigateTo('/login'),\r\n        },\r\n        {\r\n            label: 'Register',\r\n            onClick: () => navigateTo('/register'),\r\n        },\r\n    ];\r\n\r\n    let currentOptions = anonOptions;\r\n    axios.get('http://localhost:5000/session').then( res => { \r\n        if(res.data.valid) {\r\n            currentOptions = userOptions;\r\n            session = true;\r\n            username = res.data[0].username;\r\n        }\r\n    })\r\n    //if (session.admin == '0') {\r\n        //if (session.admin == '1') currentOptions = adminOptions;\r\n    //    currentOptions = userOptions;\r\n    //}\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                {/*Inside the IconButton, we \r\n           can render various icons*/}\r\n                <IconButton\r\n                    size=\"large\"\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    sx={{ mr: 2 }}\r\n                >\r\n                    {/*This is a simple Menu \r\n             Icon wrapped in Icon */}\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                {/* The Typography component applies \r\n           default font weights and sizes */}\r\n\r\n                <Typography variant=\"h6\"\r\n                    component=\"div\" sx={{ flexGrow: 1 }}>\r\n                    QuizMe\r\n                </Typography>\r\n                <Box flexGrow='1'></Box>\r\n                {session == true &&\r\n                    <Typography>Pozdrav, {username}</Typography>\r\n                }\r\n                <Button color=\"inherit\" onClick={currentOptions[0].onClick}>{currentOptions[0].label} </Button>\r\n                <Button color=\"inherit\" onClick={currentOptions[1].onClick}>{currentOptions[1].label}</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}