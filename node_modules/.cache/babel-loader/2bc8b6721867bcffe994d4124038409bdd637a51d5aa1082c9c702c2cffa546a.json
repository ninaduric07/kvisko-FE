{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/selection/selection.strategy.standard.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getKeyHash } from \"../../core/utils/common\";\nimport { isDefined, isObject } from \"../../core/utils/type\";\nimport { removeDuplicates, getUniqueValues } from \"../../core/utils/array\";\nimport { isKeysEqual } from \"../../core/utils/array_compare\";\nimport dataQuery from \"../../data/query\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport { SelectionFilterCreator } from \"../../core/utils/selection_filter\";\nimport errors from \"../widget/ui.errors\";\nimport SelectionStrategy from \"./selection.strategy\";\nexport default SelectionStrategy.inherit({\n  ctor: function (options) {\n    this.callBase(options);\n    this._initSelectedItemKeyHash();\n  },\n  _initSelectedItemKeyHash: function () {\n    this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {});\n  },\n  getSelectedItemKeys: function () {\n    return this.options.selectedItemKeys.slice(0);\n  },\n  getSelectedItems: function () {\n    return this.options.selectedItems.slice(0);\n  },\n  _preserveSelectionUpdate: function (items, isDeselect) {\n    var keyOf = this.options.keyOf;\n    var keyIndicesToRemoveMap;\n    var keyIndex;\n    var i;\n    if (!keyOf) {\n      return;\n    }\n    var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\n    if (isBatchDeselect) {\n      keyIndicesToRemoveMap = {};\n    }\n    for (i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n      if (isDeselect) {\n        keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap, null === item || void 0 === item ? void 0 : item.disabled);\n        if (keyIndicesToRemoveMap && keyIndex >= 0) {\n          keyIndicesToRemoveMap[keyIndex] = true;\n        }\n      } else {\n        this.addSelectedItem(key, item);\n      }\n    }\n    if (isBatchDeselect) {\n      this._batchRemoveSelectedItems(keyIndicesToRemoveMap);\n    }\n  },\n  _batchRemoveSelectedItems: function (keyIndicesToRemoveMap) {\n    var selectedItemKeys = this.options.selectedItemKeys.slice(0);\n    var selectedItems = this.options.selectedItems.slice(0);\n    this.options.selectedItemKeys.length = 0;\n    this.options.selectedItems.length = 0;\n    for (var i = 0; i < selectedItemKeys.length; i++) {\n      if (!keyIndicesToRemoveMap[i]) {\n        this.options.selectedItemKeys.push(selectedItemKeys[i]);\n        this.options.selectedItems.push(selectedItems[i]);\n      }\n    }\n    this._initSelectedItemKeyHash();\n    this.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n  },\n  _loadSelectedItemsCore: function (keys, isDeselect, isSelectAll, filter) {\n    var deferred = new Deferred();\n    var key = this.options.key();\n    if (!keys.length && !isSelectAll) {\n      deferred.resolve([]);\n      return deferred;\n    }\n    if (isSelectAll && isDeselect && !filter) {\n      deferred.resolve(this.getSelectedItems());\n      return deferred;\n    }\n    var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\n    var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\n    var deselectedItems = [];\n    if (isDeselect) {\n      var selectedItems = this.options.selectedItems;\n      deselectedItems = combinedFilter && keys.length !== selectedItems.length ? dataQuery(selectedItems).filter(combinedFilter).toArray() : selectedItems.slice(0);\n    }\n    var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\n    var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\n    filteredItems = filteredItems.filter(localFilter);\n    if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\n      deferred.resolve(filteredItems);\n    } else {\n      deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll);\n    }\n    return deferred;\n  },\n  _replaceSelectionUpdate: function (items) {\n    var internalKeys = [];\n    var keyOf = this.options.keyOf;\n    if (!keyOf) {\n      return;\n    }\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n      internalKeys.push(key);\n    }\n    this.setSelectedItems(internalKeys, items);\n  },\n  _warnOnIncorrectKeys: function (keys) {\n    var allowNullValue = this.options.allowNullValue;\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\n        errors.log(\"W1002\", key);\n      }\n    }\n  },\n  _isMultiSelectEnabled: function () {\n    var mode = this.options.mode;\n    return \"all\" === mode || \"multiple\" === mode;\n  },\n  _requestInProgress: function () {\n    var _this$_lastLoadDeferr;\n    return \"pending\" === (null === (_this$_lastLoadDeferr = this._lastLoadDeferred) || void 0 === _this$_lastLoadDeferr ? void 0 : _this$_lastLoadDeferr.state());\n  },\n  _concatRequestsItems: function (keys, isDeselect, oldRequestItems, updatedKeys) {\n    var selectedItems;\n    var deselectedItems = isDeselect ? keys : [];\n    if (updatedKeys) {\n      selectedItems = updatedKeys;\n    } else {\n      selectedItems = removeDuplicates(keys, this.options.selectedItemKeys);\n    }\n    return {\n      addedItems: oldRequestItems.added.concat(selectedItems),\n      removedItems: oldRequestItems.removed.concat(deselectedItems),\n      keys: keys\n    };\n  },\n  _collectLastRequestData: function (keys, isDeselect, isSelectAll, updatedKeys) {\n    var isDeselectAll = isDeselect && isSelectAll;\n    var oldRequestItems = {\n      added: [],\n      removed: []\n    };\n    var multiSelectEnabled = this._isMultiSelectEnabled();\n    var lastRequestData = multiSelectEnabled ? this._lastRequestData : {};\n    if (multiSelectEnabled) {\n      if (this._shouldMergeWithLastRequest) {\n        if (isDeselectAll) {\n          this._lastLoadDeferred.reject();\n          lastRequestData = {};\n        } else if (!isKeysEqual(keys, this.options.selectedItemKeys)) {\n          oldRequestItems.added = lastRequestData.addedItems;\n          oldRequestItems.removed = lastRequestData.removedItems;\n          if (!isDeselect) {\n            this._lastLoadDeferred.reject();\n          }\n        }\n      }\n      lastRequestData = this._concatRequestsItems(keys, isDeselect, oldRequestItems, this._shouldMergeWithLastRequest ? void 0 : updatedKeys);\n    }\n    return lastRequestData;\n  },\n  _updateKeysByLastRequestData: function (keys, isDeselect, isSelectAll) {\n    var currentKeys = keys;\n    if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !isDeselect && !isSelectAll) {\n      var _this$_lastRequestDat, _this$_lastRequestDat2;\n      currentKeys = removeDuplicates(keys.concat(null === (_this$_lastRequestDat = this._lastRequestData) || void 0 === _this$_lastRequestDat ? void 0 : _this$_lastRequestDat.addedItems), null === (_this$_lastRequestDat2 = this._lastRequestData) || void 0 === _this$_lastRequestDat2 ? void 0 : _this$_lastRequestDat2.removedItems);\n      currentKeys = getUniqueValues(currentKeys);\n    }\n    return currentKeys;\n  },\n  _loadSelectedItems: function (keys, isDeselect, isSelectAll, updatedKeys) {\n    var that = this;\n    var deferred = new Deferred();\n    var filter = that.options.filter();\n    this._shouldMergeWithLastRequest = this._requestInProgress();\n    this._lastRequestData = this._collectLastRequestData(keys, isDeselect, isSelectAll, updatedKeys);\n    when(that._lastLoadDeferred).always(function () {\n      var currentKeys = that._updateKeysByLastRequestData(keys, isDeselect, isSelectAll);\n      that._shouldMergeWithLastRequest = false;\n      that._loadSelectedItemsCore(currentKeys, isDeselect, isSelectAll, filter).done(deferred.resolve).fail(deferred.reject);\n    });\n    that._lastLoadDeferred = deferred;\n    return deferred;\n  },\n  selectedItemKeys: function (keys, preserve, isDeselect, isSelectAll, updatedKeys) {\n    var that = this;\n    var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll, updatedKeys);\n    deferred.done(function (items) {\n      if (preserve) {\n        that._preserveSelectionUpdate(items, isDeselect);\n      } else {\n        that._replaceSelectionUpdate(items);\n      }\n      that.onSelectionChanged();\n    });\n    return deferred;\n  },\n  addSelectedItem: function (key, itemData) {\n    if (isDefined(itemData) && !this.options.ignoreDisabledItems && itemData.disabled) {\n      if (-1 === this.options.disabledItemKeys.indexOf(key)) {\n        this.options.disabledItemKeys.push(key);\n      }\n      return;\n    }\n    var keyHash = this._getKeyHash(key);\n    if (-1 === this._indexOfSelectedItemKey(keyHash)) {\n      if (!isObject(keyHash) && this.options.keyHashIndices) {\n        this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length];\n      }\n      this.options.selectedItemKeys.push(key);\n      this.options.addedItemKeys.push(key);\n      this.options.addedItems.push(itemData);\n      this.options.selectedItems.push(itemData);\n    }\n  },\n  _getSelectedIndexByKey: function (key, ignoreIndicesMap) {\n    var selectedItemKeys = this.options.selectedItemKeys;\n    for (var index = 0; index < selectedItemKeys.length; index++) {\n      if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\n        return index;\n      }\n    }\n    return -1;\n  },\n  _getSelectedIndexByHash: function (key, ignoreIndicesMap) {\n    var indices = this.options.keyHashIndices[key];\n    if (indices && indices.length > 1 && ignoreIndicesMap) {\n      indices = indices.filter(function (index) {\n        return !ignoreIndicesMap[index];\n      });\n    }\n    return indices && indices[0] >= 0 ? indices[0] : -1;\n  },\n  _indexOfSelectedItemKey: function (key, ignoreIndicesMap) {\n    var selectedIndex;\n    if (this.options.equalByReference) {\n      selectedIndex = this.options.selectedItemKeys.indexOf(key);\n    } else if (isObject(key)) {\n      selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap);\n    } else {\n      selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap);\n    }\n    return selectedIndex;\n  },\n  _shiftSelectedKeyIndices: function (keyIndex) {\n    for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\n      var currentKey = this.options.selectedItemKeys[currentKeyIndex];\n      var currentKeyHash = getKeyHash(currentKey);\n      var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\n      if (!currentKeyIndices) {\n        continue;\n      }\n      for (var i = 0; i < currentKeyIndices.length; i++) {\n        if (currentKeyIndices[i] > keyIndex) {\n          currentKeyIndices[i]--;\n        }\n      }\n    }\n  },\n  removeSelectedItem: function (key, keyIndicesToRemoveMap, isDisabled) {\n    if (!this.options.ignoreDisabledItems && isDisabled) {\n      return;\n    }\n    var keyHash = this._getKeyHash(key);\n    var isBatchDeselect = !!keyIndicesToRemoveMap;\n    var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\n    if (keyIndex < 0) {\n      return keyIndex;\n    }\n    this.options.removedItemKeys.push(key);\n    this.options.removedItems.push(this.options.selectedItems[keyIndex]);\n    if (isBatchDeselect) {\n      return keyIndex;\n    }\n    this.options.selectedItemKeys.splice(keyIndex, 1);\n    this.options.selectedItems.splice(keyIndex, 1);\n    if (isObject(keyHash) || !this.options.keyHashIndices) {\n      return keyIndex;\n    }\n    var keyIndices = this.options.keyHashIndices[keyHash];\n    if (!keyIndices) {\n      return keyIndex;\n    }\n    keyIndices.shift();\n    if (!keyIndices.length) {\n      delete this.options.keyHashIndices[keyHash];\n    }\n    this._shiftSelectedKeyIndices(keyIndex);\n    return keyIndex;\n  },\n  _updateAddedItemKeys: function (keys, items) {\n    for (var i = 0; i < keys.length; i++) {\n      if (!this.isItemKeySelected(keys[i])) {\n        this.options.addedItemKeys.push(keys[i]);\n        this.options.addedItems.push(items[i]);\n      }\n    }\n  },\n  _updateRemovedItemKeys: function (keys, oldSelectedKeys, oldSelectedItems) {\n    for (var i = 0; i < oldSelectedKeys.length; i++) {\n      if (!this.isItemKeySelected(oldSelectedKeys[i])) {\n        this.options.removedItemKeys.push(oldSelectedKeys[i]);\n        this.options.removedItems.push(oldSelectedItems[i]);\n      }\n    }\n  },\n  _isItemSelectionInProgress: function (key, checkPending) {\n    var shouldCheckPending = checkPending && this._lastRequestData && this._requestInProgress();\n    if (shouldCheckPending) {\n      var _this$_lastRequestDat3;\n      var addedItems = null !== (_this$_lastRequestDat3 = this._lastRequestData.addedItems) && void 0 !== _this$_lastRequestDat3 ? _this$_lastRequestDat3 : [];\n      return addedItems.includes(key);\n    } else {\n      return false;\n    }\n  },\n  _getKeyHash: function (key) {\n    return this.options.equalByReference ? key : getKeyHash(key);\n  },\n  setSelectedItems: function (keys, items) {\n    this._updateAddedItemKeys(keys, items);\n    var oldSelectedKeys = this.options.selectedItemKeys;\n    var oldSelectedItems = this.options.selectedItems;\n    if (!this.options.equalByReference) {\n      this._initSelectedItemKeyHash();\n      this.updateSelectedItemKeyHash(keys);\n    }\n    this._setOption(\"selectedItemKeys\", keys);\n    this._setOption(\"selectedItems\", items);\n    this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems);\n  },\n  isItemDataSelected: function (itemData) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    var key = this.options.keyOf(itemData);\n    return this.isItemKeySelected(key, options);\n  },\n  isItemKeySelected: function (key) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    var result = this._isItemSelectionInProgress(key, options.checkPending);\n    if (!result) {\n      var keyHash = this._getKeyHash(key);\n      var index = this._indexOfSelectedItemKey(keyHash);\n      result = -1 !== index;\n    }\n    return result;\n  },\n  getSelectAllState: function (visibleOnly) {\n    if (visibleOnly) {\n      return this._getVisibleSelectAllState();\n    } else {\n      return this._getFullSelectAllState();\n    }\n  }\n});","map":{"version":3,"names":["getKeyHash","isDefined","isObject","removeDuplicates","getUniqueValues","isKeysEqual","dataQuery","Deferred","when","SelectionFilterCreator","errors","SelectionStrategy","inherit","ctor","options","callBase","_initSelectedItemKeyHash","_setOption","equalByReference","getSelectedItemKeys","selectedItemKeys","slice","getSelectedItems","selectedItems","_preserveSelectionUpdate","items","isDeselect","keyOf","keyIndicesToRemoveMap","keyIndex","i","isBatchDeselect","length","item","key","removeSelectedItem","disabled","addSelectedItem","_batchRemoveSelectedItems","push","updateSelectedItemKeyHash","_loadSelectedItemsCore","keys","isSelectAll","filter","deferred","resolve","selectionFilterCreator","combinedFilter","getCombinedFilter","deselectedItems","toArray","filteredItems","plainItems","isSelectableItem","map","getItemData","localFilter","getLocalFilter","equalKeys","bind","_loadFilteredData","_replaceSelectionUpdate","internalKeys","setSelectedItems","_warnOnIncorrectKeys","allowNullValue","isItemKeySelected","log","_isMultiSelectEnabled","mode","_requestInProgress","_this$_lastLoadDeferr","_lastLoadDeferred","state","_concatRequestsItems","oldRequestItems","updatedKeys","addedItems","added","concat","removedItems","removed","_collectLastRequestData","isDeselectAll","multiSelectEnabled","lastRequestData","_lastRequestData","_shouldMergeWithLastRequest","reject","_updateKeysByLastRequestData","currentKeys","_this$_lastRequestDat","_this$_lastRequestDat2","_loadSelectedItems","that","always","done","fail","preserve","onSelectionChanged","itemData","ignoreDisabledItems","disabledItemKeys","indexOf","keyHash","_getKeyHash","_indexOfSelectedItemKey","keyHashIndices","addedItemKeys","_getSelectedIndexByKey","ignoreIndicesMap","index","_getSelectedIndexByHash","indices","selectedIndex","_shiftSelectedKeyIndices","currentKeyIndex","currentKey","currentKeyHash","currentKeyIndices","isDisabled","removedItemKeys","splice","keyIndices","shift","_updateAddedItemKeys","_updateRemovedItemKeys","oldSelectedKeys","oldSelectedItems","_isItemSelectionInProgress","checkPending","shouldCheckPending","_this$_lastRequestDat3","includes","isItemDataSelected","arguments","result","getSelectAllState","visibleOnly","_getVisibleSelectAllState","_getFullSelectAllState"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/selection/selection.strategy.standard.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/selection/selection.strategy.standard.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    removeDuplicates,\r\n    getUniqueValues\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isKeysEqual\r\n} from \"../../core/utils/array_compare\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    SelectionFilterCreator\r\n} from \"../../core/utils/selection_filter\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport SelectionStrategy from \"./selection.strategy\";\r\nexport default SelectionStrategy.inherit({\r\n    ctor: function(options) {\r\n        this.callBase(options);\r\n        this._initSelectedItemKeyHash()\r\n    },\r\n    _initSelectedItemKeyHash: function() {\r\n        this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {})\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this.options.selectedItemKeys.slice(0)\r\n    },\r\n    getSelectedItems: function() {\r\n        return this.options.selectedItems.slice(0)\r\n    },\r\n    _preserveSelectionUpdate: function(items, isDeselect) {\r\n        var keyOf = this.options.keyOf;\r\n        var keyIndicesToRemoveMap;\r\n        var keyIndex;\r\n        var i;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\r\n        if (isBatchDeselect) {\r\n            keyIndicesToRemoveMap = {}\r\n        }\r\n        for (i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            if (isDeselect) {\r\n                keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap, null === item || void 0 === item ? void 0 : item.disabled);\r\n                if (keyIndicesToRemoveMap && keyIndex >= 0) {\r\n                    keyIndicesToRemoveMap[keyIndex] = true\r\n                }\r\n            } else {\r\n                this.addSelectedItem(key, item)\r\n            }\r\n        }\r\n        if (isBatchDeselect) {\r\n            this._batchRemoveSelectedItems(keyIndicesToRemoveMap)\r\n        }\r\n    },\r\n    _batchRemoveSelectedItems: function(keyIndicesToRemoveMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys.slice(0);\r\n        var selectedItems = this.options.selectedItems.slice(0);\r\n        this.options.selectedItemKeys.length = 0;\r\n        this.options.selectedItems.length = 0;\r\n        for (var i = 0; i < selectedItemKeys.length; i++) {\r\n            if (!keyIndicesToRemoveMap[i]) {\r\n                this.options.selectedItemKeys.push(selectedItemKeys[i]);\r\n                this.options.selectedItems.push(selectedItems[i])\r\n            }\r\n        }\r\n        this._initSelectedItemKeyHash();\r\n        this.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n    },\r\n    _loadSelectedItemsCore: function(keys, isDeselect, isSelectAll, filter) {\r\n        var deferred = new Deferred;\r\n        var key = this.options.key();\r\n        if (!keys.length && !isSelectAll) {\r\n            deferred.resolve([]);\r\n            return deferred\r\n        }\r\n        if (isSelectAll && isDeselect && !filter) {\r\n            deferred.resolve(this.getSelectedItems());\r\n            return deferred\r\n        }\r\n        var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\r\n        var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\r\n        var deselectedItems = [];\r\n        if (isDeselect) {\r\n            var selectedItems = this.options.selectedItems;\r\n            deselectedItems = combinedFilter && keys.length !== selectedItems.length ? dataQuery(selectedItems).filter(combinedFilter).toArray() : selectedItems.slice(0)\r\n        }\r\n        var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\r\n        var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\r\n        filteredItems = filteredItems.filter(localFilter);\r\n        if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\r\n            deferred.resolve(filteredItems)\r\n        } else {\r\n            deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll)\r\n        }\r\n        return deferred\r\n    },\r\n    _replaceSelectionUpdate: function(items) {\r\n        var internalKeys = [];\r\n        var keyOf = this.options.keyOf;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            internalKeys.push(key)\r\n        }\r\n        this.setSelectedItems(internalKeys, items)\r\n    },\r\n    _warnOnIncorrectKeys: function(keys) {\r\n        var allowNullValue = this.options.allowNullValue;\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\r\n                errors.log(\"W1002\", key)\r\n            }\r\n        }\r\n    },\r\n    _isMultiSelectEnabled: function() {\r\n        var mode = this.options.mode;\r\n        return \"all\" === mode || \"multiple\" === mode\r\n    },\r\n    _requestInProgress: function() {\r\n        var _this$_lastLoadDeferr;\r\n        return \"pending\" === (null === (_this$_lastLoadDeferr = this._lastLoadDeferred) || void 0 === _this$_lastLoadDeferr ? void 0 : _this$_lastLoadDeferr.state())\r\n    },\r\n    _concatRequestsItems: function(keys, isDeselect, oldRequestItems, updatedKeys) {\r\n        var selectedItems;\r\n        var deselectedItems = isDeselect ? keys : [];\r\n        if (updatedKeys) {\r\n            selectedItems = updatedKeys\r\n        } else {\r\n            selectedItems = removeDuplicates(keys, this.options.selectedItemKeys)\r\n        }\r\n        return {\r\n            addedItems: oldRequestItems.added.concat(selectedItems),\r\n            removedItems: oldRequestItems.removed.concat(deselectedItems),\r\n            keys: keys\r\n        }\r\n    },\r\n    _collectLastRequestData: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var isDeselectAll = isDeselect && isSelectAll;\r\n        var oldRequestItems = {\r\n            added: [],\r\n            removed: []\r\n        };\r\n        var multiSelectEnabled = this._isMultiSelectEnabled();\r\n        var lastRequestData = multiSelectEnabled ? this._lastRequestData : {};\r\n        if (multiSelectEnabled) {\r\n            if (this._shouldMergeWithLastRequest) {\r\n                if (isDeselectAll) {\r\n                    this._lastLoadDeferred.reject();\r\n                    lastRequestData = {}\r\n                } else if (!isKeysEqual(keys, this.options.selectedItemKeys)) {\r\n                    oldRequestItems.added = lastRequestData.addedItems;\r\n                    oldRequestItems.removed = lastRequestData.removedItems;\r\n                    if (!isDeselect) {\r\n                        this._lastLoadDeferred.reject()\r\n                    }\r\n                }\r\n            }\r\n            lastRequestData = this._concatRequestsItems(keys, isDeselect, oldRequestItems, this._shouldMergeWithLastRequest ? void 0 : updatedKeys)\r\n        }\r\n        return lastRequestData\r\n    },\r\n    _updateKeysByLastRequestData: function(keys, isDeselect, isSelectAll) {\r\n        var currentKeys = keys;\r\n        if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !isDeselect && !isSelectAll) {\r\n            var _this$_lastRequestDat, _this$_lastRequestDat2;\r\n            currentKeys = removeDuplicates(keys.concat(null === (_this$_lastRequestDat = this._lastRequestData) || void 0 === _this$_lastRequestDat ? void 0 : _this$_lastRequestDat.addedItems), null === (_this$_lastRequestDat2 = this._lastRequestData) || void 0 === _this$_lastRequestDat2 ? void 0 : _this$_lastRequestDat2.removedItems);\r\n            currentKeys = getUniqueValues(currentKeys)\r\n        }\r\n        return currentKeys\r\n    },\r\n    _loadSelectedItems: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        var filter = that.options.filter();\r\n        this._shouldMergeWithLastRequest = this._requestInProgress();\r\n        this._lastRequestData = this._collectLastRequestData(keys, isDeselect, isSelectAll, updatedKeys);\r\n        when(that._lastLoadDeferred).always((function() {\r\n            var currentKeys = that._updateKeysByLastRequestData(keys, isDeselect, isSelectAll);\r\n            that._shouldMergeWithLastRequest = false;\r\n            that._loadSelectedItemsCore(currentKeys, isDeselect, isSelectAll, filter).done(deferred.resolve).fail(deferred.reject)\r\n        }));\r\n        that._lastLoadDeferred = deferred;\r\n        return deferred\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll, updatedKeys);\r\n        deferred.done((function(items) {\r\n            if (preserve) {\r\n                that._preserveSelectionUpdate(items, isDeselect)\r\n            } else {\r\n                that._replaceSelectionUpdate(items)\r\n            }\r\n            that.onSelectionChanged()\r\n        }));\r\n        return deferred\r\n    },\r\n    addSelectedItem: function(key, itemData) {\r\n        if (isDefined(itemData) && !this.options.ignoreDisabledItems && itemData.disabled) {\r\n            if (-1 === this.options.disabledItemKeys.indexOf(key)) {\r\n                this.options.disabledItemKeys.push(key)\r\n            }\r\n            return\r\n        }\r\n        var keyHash = this._getKeyHash(key);\r\n        if (-1 === this._indexOfSelectedItemKey(keyHash)) {\r\n            if (!isObject(keyHash) && this.options.keyHashIndices) {\r\n                this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length]\r\n            }\r\n            this.options.selectedItemKeys.push(key);\r\n            this.options.addedItemKeys.push(key);\r\n            this.options.addedItems.push(itemData);\r\n            this.options.selectedItems.push(itemData)\r\n        }\r\n    },\r\n    _getSelectedIndexByKey: function(key, ignoreIndicesMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys;\r\n        for (var index = 0; index < selectedItemKeys.length; index++) {\r\n            if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    _getSelectedIndexByHash: function(key, ignoreIndicesMap) {\r\n        var indices = this.options.keyHashIndices[key];\r\n        if (indices && indices.length > 1 && ignoreIndicesMap) {\r\n            indices = indices.filter((function(index) {\r\n                return !ignoreIndicesMap[index]\r\n            }))\r\n        }\r\n        return indices && indices[0] >= 0 ? indices[0] : -1\r\n    },\r\n    _indexOfSelectedItemKey: function(key, ignoreIndicesMap) {\r\n        var selectedIndex;\r\n        if (this.options.equalByReference) {\r\n            selectedIndex = this.options.selectedItemKeys.indexOf(key)\r\n        } else if (isObject(key)) {\r\n            selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap)\r\n        } else {\r\n            selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap)\r\n        }\r\n        return selectedIndex\r\n    },\r\n    _shiftSelectedKeyIndices: function(keyIndex) {\r\n        for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\r\n            var currentKey = this.options.selectedItemKeys[currentKeyIndex];\r\n            var currentKeyHash = getKeyHash(currentKey);\r\n            var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\r\n            if (!currentKeyIndices) {\r\n                continue\r\n            }\r\n            for (var i = 0; i < currentKeyIndices.length; i++) {\r\n                if (currentKeyIndices[i] > keyIndex) {\r\n                    currentKeyIndices[i]--\r\n                }\r\n            }\r\n        }\r\n    },\r\n    removeSelectedItem: function(key, keyIndicesToRemoveMap, isDisabled) {\r\n        if (!this.options.ignoreDisabledItems && isDisabled) {\r\n            return\r\n        }\r\n        var keyHash = this._getKeyHash(key);\r\n        var isBatchDeselect = !!keyIndicesToRemoveMap;\r\n        var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\r\n        if (keyIndex < 0) {\r\n            return keyIndex\r\n        }\r\n        this.options.removedItemKeys.push(key);\r\n        this.options.removedItems.push(this.options.selectedItems[keyIndex]);\r\n        if (isBatchDeselect) {\r\n            return keyIndex\r\n        }\r\n        this.options.selectedItemKeys.splice(keyIndex, 1);\r\n        this.options.selectedItems.splice(keyIndex, 1);\r\n        if (isObject(keyHash) || !this.options.keyHashIndices) {\r\n            return keyIndex\r\n        }\r\n        var keyIndices = this.options.keyHashIndices[keyHash];\r\n        if (!keyIndices) {\r\n            return keyIndex\r\n        }\r\n        keyIndices.shift();\r\n        if (!keyIndices.length) {\r\n            delete this.options.keyHashIndices[keyHash]\r\n        }\r\n        this._shiftSelectedKeyIndices(keyIndex);\r\n        return keyIndex\r\n    },\r\n    _updateAddedItemKeys: function(keys, items) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!this.isItemKeySelected(keys[i])) {\r\n                this.options.addedItemKeys.push(keys[i]);\r\n                this.options.addedItems.push(items[i])\r\n            }\r\n        }\r\n    },\r\n    _updateRemovedItemKeys: function(keys, oldSelectedKeys, oldSelectedItems) {\r\n        for (var i = 0; i < oldSelectedKeys.length; i++) {\r\n            if (!this.isItemKeySelected(oldSelectedKeys[i])) {\r\n                this.options.removedItemKeys.push(oldSelectedKeys[i]);\r\n                this.options.removedItems.push(oldSelectedItems[i])\r\n            }\r\n        }\r\n    },\r\n    _isItemSelectionInProgress: function(key, checkPending) {\r\n        var shouldCheckPending = checkPending && this._lastRequestData && this._requestInProgress();\r\n        if (shouldCheckPending) {\r\n            var _this$_lastRequestDat3;\r\n            var addedItems = null !== (_this$_lastRequestDat3 = this._lastRequestData.addedItems) && void 0 !== _this$_lastRequestDat3 ? _this$_lastRequestDat3 : [];\r\n            return addedItems.includes(key)\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    _getKeyHash: function(key) {\r\n        return this.options.equalByReference ? key : getKeyHash(key)\r\n    },\r\n    setSelectedItems: function(keys, items) {\r\n        this._updateAddedItemKeys(keys, items);\r\n        var oldSelectedKeys = this.options.selectedItemKeys;\r\n        var oldSelectedItems = this.options.selectedItems;\r\n        if (!this.options.equalByReference) {\r\n            this._initSelectedItemKeyHash();\r\n            this.updateSelectedItemKeyHash(keys)\r\n        }\r\n        this._setOption(\"selectedItemKeys\", keys);\r\n        this._setOption(\"selectedItems\", items);\r\n        this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems)\r\n    },\r\n    isItemDataSelected: function(itemData) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var key = this.options.keyOf(itemData);\r\n        return this.isItemKeySelected(key, options)\r\n    },\r\n    isItemKeySelected: function(key) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var result = this._isItemSelectionInProgress(key, options.checkPending);\r\n        if (!result) {\r\n            var keyHash = this._getKeyHash(key);\r\n            var index = this._indexOfSelectedItemKey(keyHash);\r\n            result = -1 !== index\r\n        }\r\n        return result\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        if (visibleOnly) {\r\n            return this._getVisibleSelectAllState()\r\n        } else {\r\n            return this._getFullSelectAllState()\r\n        }\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}