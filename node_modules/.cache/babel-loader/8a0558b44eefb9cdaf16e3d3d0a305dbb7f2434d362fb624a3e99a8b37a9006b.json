{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/extend.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isPlainObject } from \"./type\";\nexport var extendFromObject = function (target, source, overrideExistingValues) {\n  target = target || {};\n  for (var prop in source) {\n    if (Object.prototype.hasOwnProperty.call(source, prop)) {\n      var value = source[prop];\n      if (!(prop in target) || overrideExistingValues) {\n        target[prop] = value;\n      }\n    }\n  }\n  return target;\n};\nexport var extend = function extend(target) {\n  target = target || {};\n  var i = 1;\n  var deep = false;\n  if (\"boolean\" === typeof target) {\n    deep = target;\n    target = arguments[1] || {};\n    i++;\n  }\n  for (; i < arguments.length; i++) {\n    var source = arguments[i];\n    if (null == source) {\n      continue;\n    }\n    for (var key in source) {\n      var targetValue = target[key];\n      var sourceValue = source[key];\n      var sourceValueIsArray = false;\n      var clone = void 0;\n      if (\"__proto__\" === key || \"constructor\" === key || target === sourceValue) {\n        continue;\n      }\n      if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\n        if (sourceValueIsArray) {\n          clone = targetValue && Array.isArray(targetValue) ? targetValue : [];\n        } else {\n          clone = targetValue && isPlainObject(targetValue) ? targetValue : {};\n        }\n        target[key] = extend(deep, clone, sourceValue);\n      } else if (void 0 !== sourceValue) {\n        target[key] = sourceValue;\n      }\n    }\n  }\n  return target;\n};","map":{"version":3,"names":["isPlainObject","extendFromObject","target","source","overrideExistingValues","prop","Object","prototype","hasOwnProperty","call","value","extend","i","deep","arguments","length","key","targetValue","sourceValue","sourceValueIsArray","clone","Array","isArray"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/utils/extend.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/extend.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isPlainObject\r\n} from \"./type\";\r\nexport var extendFromObject = function(target, source, overrideExistingValues) {\r\n    target = target || {};\r\n    for (var prop in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n            var value = source[prop];\r\n            if (!(prop in target) || overrideExistingValues) {\r\n                target[prop] = value\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\nexport var extend = function extend(target) {\r\n    target = target || {};\r\n    var i = 1;\r\n    var deep = false;\r\n    if (\"boolean\" === typeof target) {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n        i++\r\n    }\r\n    for (; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n        if (null == source) {\r\n            continue\r\n        }\r\n        for (var key in source) {\r\n            var targetValue = target[key];\r\n            var sourceValue = source[key];\r\n            var sourceValueIsArray = false;\r\n            var clone = void 0;\r\n            if (\"__proto__\" === key || \"constructor\" === key || target === sourceValue) {\r\n                continue\r\n            }\r\n            if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\r\n                if (sourceValueIsArray) {\r\n                    clone = targetValue && Array.isArray(targetValue) ? targetValue : []\r\n                } else {\r\n                    clone = targetValue && isPlainObject(targetValue) ? targetValue : {}\r\n                }\r\n                target[key] = extend(deep, clone, sourceValue)\r\n            } else if (void 0 !== sourceValue) {\r\n                target[key] = sourceValue\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aAAa,QACV,QAAQ;AACf,OAAO,IAAIC,gBAAgB,GAAG,SAAAA,CAASC,MAAM,EAAEC,MAAM,EAAEC,sBAAsB,EAAE;EAC3EF,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,KAAK,IAAIG,IAAI,IAAIF,MAAM,EAAE;IACrB,IAAIG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,MAAM,EAAEE,IAAI,CAAC,EAAE;MACpD,IAAIK,KAAK,GAAGP,MAAM,CAACE,IAAI,CAAC;MACxB,IAAI,EAAEA,IAAI,IAAIH,MAAM,CAAC,IAAIE,sBAAsB,EAAE;QAC7CF,MAAM,CAACG,IAAI,CAAC,GAAGK,KAAK;MACxB;IACJ;EACJ;EACA,OAAOR,MAAM;AACjB,CAAC;AACD,OAAO,IAAIS,MAAM,GAAG,SAASA,MAAMA,CAACT,MAAM,EAAE;EACxCA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,IAAIU,CAAC,GAAG,CAAC;EACT,IAAIC,IAAI,GAAG,KAAK;EAChB,IAAI,SAAS,KAAK,OAAOX,MAAM,EAAE;IAC7BW,IAAI,GAAGX,MAAM;IACbA,MAAM,GAAGY,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3BF,CAAC,EAAE;EACP;EACA,OAAOA,CAAC,GAAGE,SAAS,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;IAC9B,IAAIT,MAAM,GAAGW,SAAS,CAACF,CAAC,CAAC;IACzB,IAAI,IAAI,IAAIT,MAAM,EAAE;MAChB;IACJ;IACA,KAAK,IAAIa,GAAG,IAAIb,MAAM,EAAE;MACpB,IAAIc,WAAW,GAAGf,MAAM,CAACc,GAAG,CAAC;MAC7B,IAAIE,WAAW,GAAGf,MAAM,CAACa,GAAG,CAAC;MAC7B,IAAIG,kBAAkB,GAAG,KAAK;MAC9B,IAAIC,KAAK,GAAG,KAAK,CAAC;MAClB,IAAI,WAAW,KAAKJ,GAAG,IAAI,aAAa,KAAKA,GAAG,IAAId,MAAM,KAAKgB,WAAW,EAAE;QACxE;MACJ;MACA,IAAIL,IAAI,IAAIK,WAAW,KAAKlB,aAAa,CAACkB,WAAW,CAAC,KAAKC,kBAAkB,GAAGE,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,CAAC,CAAC,EAAE;QAC1G,IAAIC,kBAAkB,EAAE;UACpBC,KAAK,GAAGH,WAAW,IAAII,KAAK,CAACC,OAAO,CAACL,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE;QACxE,CAAC,MAAM;UACHG,KAAK,GAAGH,WAAW,IAAIjB,aAAa,CAACiB,WAAW,CAAC,GAAGA,WAAW,GAAG,CAAC,CAAC;QACxE;QACAf,MAAM,CAACc,GAAG,CAAC,GAAGL,MAAM,CAACE,IAAI,EAAEO,KAAK,EAAEF,WAAW,CAAC;MAClD,CAAC,MAAM,IAAI,KAAK,CAAC,KAAKA,WAAW,EAAE;QAC/BhB,MAAM,CAACc,GAAG,CAAC,GAAGE,WAAW;MAC7B;IACJ;EACJ;EACA,OAAOhB,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}