{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/state_storing/module_core.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../../../events/core/events_engine\";\nimport { getWindow } from \"../../../../core/utils/window\";\nimport errors from \"../../../../ui/widget/ui.errors\";\nimport { sessionStorage } from \"../../../../core/utils/storage\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport { each } from \"../../../../core/utils/iterator\";\nimport { isDefined, isPlainObject, isEmptyObject } from \"../../../../core/utils/type\";\nimport { fromPromise } from \"../../../../core/utils/deferred\";\nimport modules from \"../modules\";\nconst DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\nconst parseDates = function (state) {\n  if (!state) {\n    return;\n  }\n  each(state, (key, value) => {\n    if (isPlainObject(value) || Array.isArray(value)) {\n      parseDates(value);\n    } else if (\"string\" === typeof value) {\n      const date = DATE_REGEX.exec(value);\n      if (date) {\n        state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]));\n      }\n    }\n  });\n};\nconst StateStoringController = modules.ViewController.inherit(function () {\n  const getStorage = function (options) {\n    const storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\n    if (!storage) {\n      throw new Error(\"E1007\");\n    }\n    return storage;\n  };\n  const getUniqueStorageKey = function (options) {\n    return isDefined(options.storageKey) ? options.storageKey : \"storage\";\n  };\n  return {\n    _loadState() {\n      const options = this.option(\"stateStoring\");\n      if (\"custom\" === options.type) {\n        return options.customLoad && options.customLoad();\n      }\n      try {\n        return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)));\n      } catch (e) {\n        errors.log(e.message);\n      }\n    },\n    _saveState(state) {\n      const options = this.option(\"stateStoring\");\n      if (\"custom\" === options.type) {\n        options.customSave && options.customSave(state);\n        return;\n      }\n      try {\n        getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state));\n      } catch (e) {\n        errors.log(e.message);\n      }\n    },\n    publicMethods: () => [\"state\"],\n    isEnabled() {\n      return this.option(\"stateStoring.enabled\");\n    },\n    init() {\n      const that = this;\n      that._state = {};\n      that._isLoaded = false;\n      that._isLoading = false;\n      that._windowUnloadHandler = function () {\n        if (void 0 !== that._savingTimeoutID) {\n          that._saveState(that.state());\n        }\n      };\n      eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\n      return that;\n    },\n    isLoaded() {\n      return this._isLoaded;\n    },\n    isLoading() {\n      return this._isLoading;\n    },\n    load() {\n      this._isLoading = true;\n      const loadResult = fromPromise(this._loadState());\n      loadResult.always(() => {\n        this._isLoaded = true;\n        this._isLoading = false;\n      }).done(state => {\n        if (null !== state && !isEmptyObject(state)) {\n          this.state(state);\n        }\n      });\n      return loadResult;\n    },\n    state(state) {\n      const that = this;\n      if (!arguments.length) {\n        return extend(true, {}, that._state);\n      }\n      that._state = extend({}, state);\n      parseDates(that._state);\n    },\n    save() {\n      const that = this;\n      clearTimeout(that._savingTimeoutID);\n      that._savingTimeoutID = setTimeout(() => {\n        that._saveState(that.state());\n        that._savingTimeoutID = void 0;\n      }, that.option(\"stateStoring.savingTimeout\"));\n    },\n    optionChanged(args) {\n      const that = this;\n      switch (args.name) {\n        case \"stateStoring\":\n          if (that.isEnabled() && !that.isLoading()) {\n            that.load();\n          }\n          args.handled = true;\n          break;\n        default:\n          that.callBase(args);\n      }\n    },\n    dispose() {\n      clearTimeout(this._savingTimeoutID);\n      eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler);\n    }\n  };\n}());\nexport default {\n  StateStoringController: StateStoringController\n};","map":{"version":3,"names":["eventsEngine","getWindow","errors","sessionStorage","extend","each","isDefined","isPlainObject","isEmptyObject","fromPromise","modules","DATE_REGEX","parseDates","state","key","value","Array","isArray","date","exec","Date","UTC","StateStoringController","ViewController","inherit","getStorage","options","storage","type","localStorage","Error","getUniqueStorageKey","storageKey","_loadState","option","customLoad","JSON","parse","getItem","e","log","message","_saveState","customSave","setItem","stringify","publicMethods","isEnabled","init","that","_state","_isLoaded","_isLoading","_windowUnloadHandler","_savingTimeoutID","on","isLoaded","isLoading","load","loadResult","always","done","arguments","length","save","clearTimeout","setTimeout","optionChanged","args","name","handled","callBase","dispose","off"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/__internal/grids/grid_core/state_storing/module_core.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/state_storing/module_core.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../../../core/utils/window\";\r\nimport errors from \"../../../../ui/widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../../../core/utils/deferred\";\r\nimport modules from \"../modules\";\r\nconst DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nconst parseDates = function(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (key, value) => {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            const date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    })\r\n};\r\nconst StateStoringController = modules.ViewController.inherit(function() {\r\n    const getStorage = function(options) {\r\n        const storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    const getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState() {\r\n            const options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState(state) {\r\n            const options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: () => [\"state\"],\r\n        isEnabled() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init() {\r\n            const that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading() {\r\n            return this._isLoading\r\n        },\r\n        load() {\r\n            this._isLoading = true;\r\n            const loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state(state) {\r\n            const that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            }\r\n            that._state = extend({}, state);\r\n            parseDates(that._state)\r\n        },\r\n        save() {\r\n            const that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout(() => {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }, that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged(args) {\r\n            const that = this;\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (that.isEnabled() && !that.isLoading()) {\r\n                        that.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    that.callBase(args)\r\n            }\r\n        },\r\n        dispose() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\nexport default {\r\n    StateStoringController: StateStoringController\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}