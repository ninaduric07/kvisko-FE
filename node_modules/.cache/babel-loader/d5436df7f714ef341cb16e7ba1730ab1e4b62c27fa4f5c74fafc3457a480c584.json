{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { PageSizeSmall } from \"./small\";\nimport { PageSizeLarge } from \"./large\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nimport messageLocalization from \"../../../../localization/message\";\nimport { PAGER_PAGE_SIZES_CLASS } from \"../common/consts\";\nexport var viewFunction = _ref => {\n  var {\n    htmlRef: htmlRef,\n    normalizedPageSizes: normalizedPageSizes,\n    props: {\n      isLargeDisplayMode: isLargeDisplayMode,\n      pageSize: pageSize,\n      pageSizeChange: pageSizeChange\n    }\n  } = _ref;\n  return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\n    pageSizes: normalizedPageSizes,\n    pageSize: pageSize,\n    pageSizeChange: pageSizeChange\n  }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\n    parentRef: htmlRef,\n    pageSizes: normalizedPageSizes,\n    pageSize: pageSize,\n    pageSizeChange: pageSizeChange\n  })], 0, null, null, htmlRef);\n};\nfunction getAllText() {\n  return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")();\n}\nvar PageSizeSelectorProps = {\n  isLargeDisplayMode: true\n};\nvar PageSizeSelectorPropsType = {\n  get pageSize() {\n    return InternalPagerProps.pageSize;\n  },\n  get pageSizes() {\n    return InternalPagerProps.pageSizes;\n  },\n  get isLargeDisplayMode() {\n    return PageSizeSelectorProps.isLargeDisplayMode;\n  }\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class PageSizeSelector extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.htmlRef = infernoCreateRef();\n    this.__getterCache = {};\n    this.setRootElementRef = this.setRootElementRef.bind(this);\n  }\n  createEffects() {\n    return [new InfernoEffect(this.setRootElementRef, [])];\n  }\n  setRootElementRef() {\n    var {\n      rootElementRef: rootElementRef\n    } = this.props;\n    if (rootElementRef) {\n      rootElementRef.current = this.htmlRef.current;\n    }\n  }\n  get normalizedPageSizes() {\n    if (void 0 !== this.__getterCache.normalizedPageSizes) {\n      return this.__getterCache.normalizedPageSizes;\n    }\n    return this.__getterCache.normalizedPageSizes = (() => {\n      var {\n        pageSizes: pageSizes\n      } = this.props;\n      return pageSizes.map(p => \"all\" === p || 0 === p ? {\n        text: getAllText(),\n        value: 0\n      } : {\n        text: String(p),\n        value: p\n      });\n    })();\n  }\n  get restAttributes() {\n    var _this$props = this.props,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    return restProps;\n  }\n  componentWillUpdate(nextProps, nextState, context) {\n    super.componentWillUpdate();\n    if (this.props.pageSizes !== nextProps.pageSizes) {\n      this.__getterCache.normalizedPageSizes = void 0;\n    }\n  }\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      htmlRef: this.htmlRef,\n      normalizedPageSizes: this.normalizedPageSizes,\n      restAttributes: this.restAttributes\n    });\n  }\n}\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","createComponentVNode","InfernoEffect","InfernoComponent","PageSizeSmall","PageSizeLarge","InternalPagerProps","messageLocalization","PAGER_PAGE_SIZES_CLASS","viewFunction","_ref","htmlRef","normalizedPageSizes","props","isLargeDisplayMode","pageSize","pageSizeChange","pageSizes","parentRef","getAllText","getFormatter","PageSizeSelectorProps","PageSizeSelectorPropsType","createRef","infernoCreateRef","PageSizeSelector","constructor","state","__getterCache","setRootElementRef","bind","createEffects","rootElementRef","current","map","p","text","value","String","restAttributes","_this$props","restProps","componentWillUpdate","nextProps","nextState","context","render","defaultProps"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}