{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth, getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { isMaterial, waitWebFont } from \"../themes\";\nimport { isPlainObject, isDefined } from \"../../core/utils/type\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport fx from \"../../animation/fx\";\nimport { TOOLBAR_CLASS } from \"./constants\";\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\nvar TEXT_BUTTON_MODE = \"text\";\nvar DEFAULT_BUTTON_TYPE = \"default\";\nvar DEFAULT_DROPDOWNBUTTON_STYLING_MODE = \"contained\";\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\nvar ANIMATION_TIMEOUT = 15;\nclass ToolbarBase extends AsyncCollectionWidget {\n  _getSynchronizableOptionsForCreateComponent() {\n    return super._getSynchronizableOptionsForCreateComponent().filter(item => \"disabled\" !== item);\n  }\n  _initTemplates() {\n    super._initTemplates();\n    var template = new BindableTemplate(function ($container, data, rawModel) {\n      if (isPlainObject(data)) {\n        var {\n          text: text,\n          html: html,\n          widget: widget\n        } = data;\n        if (text) {\n          $container.text(text).wrapInner(\"<div>\");\n        }\n        if (html) {\n          $container.html(html);\n        }\n        if (\"dxDropDownButton\" === widget) {\n          var _data$options;\n          data.options = null !== (_data$options = data.options) && void 0 !== _data$options ? _data$options : {};\n          if (!isDefined(data.options.stylingMode)) {\n            data.options.stylingMode = this.option(\"useFlatButtons\") ? TEXT_BUTTON_MODE : DEFAULT_DROPDOWNBUTTON_STYLING_MODE;\n          }\n        }\n        if (\"dxButton\" === widget) {\n          if (this.option(\"useFlatButtons\")) {\n            var _data$options2, _data$options$styling;\n            data.options = null !== (_data$options2 = data.options) && void 0 !== _data$options2 ? _data$options2 : {};\n            data.options.stylingMode = null !== (_data$options$styling = data.options.stylingMode) && void 0 !== _data$options$styling ? _data$options$styling : TEXT_BUTTON_MODE;\n          }\n          if (this.option(\"useDefaultButtons\")) {\n            var _data$options3, _data$options$type;\n            data.options = null !== (_data$options3 = data.options) && void 0 !== _data$options3 ? _data$options3 : {};\n            data.options.type = null !== (_data$options$type = data.options.type) && void 0 !== _data$options$type ? _data$options$type : DEFAULT_BUTTON_TYPE;\n          }\n        }\n      } else {\n        $container.text(String(data));\n      }\n      this._getTemplate(\"dx-polymorph-widget\").render({\n        container: $container,\n        model: rawModel,\n        parent: this\n      });\n    }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\n    this._templateManager.addDefaultTemplates({\n      item: template,\n      menuItem: template\n    });\n  }\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      renderAs: \"topToolbar\",\n      grouped: false,\n      useFlatButtons: false,\n      useDefaultButtons: false\n    });\n  }\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        useFlatButtons: true\n      }\n    }]);\n  }\n  _itemContainer() {\n    return this._$toolbarItemsContainer.find([\".\".concat(TOOLBAR_BEFORE_CLASS), \".\".concat(TOOLBAR_CENTER_CLASS), \".\".concat(TOOLBAR_AFTER_CLASS)].join(\",\"));\n  }\n  _itemClass() {\n    return TOOLBAR_ITEM_CLASS;\n  }\n  _itemDataKey() {\n    return TOOLBAR_ITEM_DATA_KEY;\n  }\n  _dimensionChanged() {\n    if (this._disposed) {\n      return;\n    }\n    this._arrangeItems();\n    this._applyCompactMode();\n  }\n  _initMarkup() {\n    this._renderToolbar();\n    this._renderSections();\n    super._initMarkup();\n  }\n  _render() {\n    super._render();\n    this._renderItemsAsync();\n    this._updateDimensionsInMaterial();\n  }\n  _postProcessRenderItems() {\n    this._arrangeItems();\n  }\n  _renderToolbar() {\n    this.$element().addClass(TOOLBAR_CLASS);\n    this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element());\n    this.setAria(\"role\", \"toolbar\");\n  }\n  _renderSections() {\n    var $container = this._$toolbarItemsContainer;\n    each([\"before\", \"center\", \"after\"], (_, section) => {\n      var sectionClass = \"dx-toolbar-\".concat(section);\n      var $section = $container.find(\".\".concat(sectionClass));\n      if (!$section.length) {\n        this[\"_$\".concat(section, \"Section\")] = $(\"<div>\").addClass(sectionClass).appendTo($container);\n      }\n    });\n  }\n  _arrangeItems(elementWidth) {\n    var _elementWidth;\n    elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : getWidth(this.$element());\n    this._$centerSection.css({\n      margin: \"0 auto\",\n      float: \"none\"\n    });\n    var beforeRect = getBoundingRect(this._$beforeSection.get(0));\n    var afterRect = getBoundingRect(this._$afterSection.get(0));\n    this._alignCenterSection(beforeRect, afterRect, elementWidth);\n    var $label = this._$toolbarItemsContainer.find(\".\".concat(TOOLBAR_LABEL_CLASS)).eq(0);\n    var $section = $label.parent();\n    if (!$label.length) {\n      return;\n    }\n    var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\n    var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\n    var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\n    var elemsAtSectionWidth = 0;\n    $section.children().not(\".\".concat(TOOLBAR_LABEL_CLASS)).each(function () {\n      elemsAtSectionWidth += getOuterWidth(this);\n    });\n    var freeSpace = elementWidth - elemsAtSectionWidth;\n    var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\n    if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\n      this._alignSection(this._$beforeSection, sectionMaxWidth);\n    } else {\n      var labelPaddings = getOuterWidth($label) - getWidth($label);\n      $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings);\n    }\n  }\n  _alignCenterSection(beforeRect, afterRect, elementWidth) {\n    this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\n    var isRTL = this.option(\"rtlEnabled\");\n    var leftRect = isRTL ? afterRect : beforeRect;\n    var rightRect = isRTL ? beforeRect : afterRect;\n    var centerRect = getBoundingRect(this._$centerSection.get(0));\n    if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\n      this._$centerSection.css({\n        marginLeft: leftRect.width,\n        marginRight: rightRect.width,\n        float: leftRect.width > rightRect.width ? \"none\" : \"right\"\n      });\n    }\n  }\n  _alignSection($section, maxWidth) {\n    var $labels = $section.find(\".\".concat(TOOLBAR_LABEL_CLASS));\n    var labels = $labels.toArray();\n    maxWidth -= this._getCurrentLabelsPaddings(labels);\n    var currentWidth = this._getCurrentLabelsWidth(labels);\n    var difference = Math.abs(currentWidth - maxWidth);\n    if (maxWidth < currentWidth) {\n      labels = labels.reverse();\n      this._alignSectionLabels(labels, difference, false);\n    } else {\n      this._alignSectionLabels(labels, difference, true);\n    }\n  }\n  _alignSectionLabels(labels, difference, expanding) {\n    var getRealLabelWidth = function (label) {\n      return getBoundingRect(label).width;\n    };\n    for (var i = 0; i < labels.length; i++) {\n      var $label = $(labels[i]);\n      var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\n      var labelMaxWidth = void 0;\n      if (expanding) {\n        $label.css(\"maxWidth\", \"inherit\");\n      }\n      var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\n      if (possibleLabelWidth < difference) {\n        labelMaxWidth = expanding ? possibleLabelWidth : 0;\n        difference -= possibleLabelWidth;\n      } else {\n        labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\n        $label.css(\"maxWidth\", labelMaxWidth);\n        break;\n      }\n      $label.css(\"maxWidth\", labelMaxWidth);\n    }\n  }\n  _applyCompactMode() {\n    var $element = this.$element();\n    $element.removeClass(TOOLBAR_COMPACT_CLASS);\n    if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\n      $element.addClass(TOOLBAR_COMPACT_CLASS);\n    }\n  }\n  _getCurrentLabelsWidth(labels) {\n    var width = 0;\n    labels.forEach(function (label, index) {\n      width += getOuterWidth(label);\n    });\n    return width;\n  }\n  _getCurrentLabelsPaddings(labels) {\n    var padding = 0;\n    labels.forEach(function (label, index) {\n      padding += getOuterWidth(label) - getWidth(label);\n    });\n    return padding;\n  }\n  _renderItem(index, item, itemContainer, $after) {\n    var _item$location, _item$text;\n    var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : \"center\";\n    var container = null !== itemContainer && void 0 !== itemContainer ? itemContainer : this[\"_$\".concat(location, \"Section\")];\n    var itemHasText = !!(null !== (_item$text = item.text) && void 0 !== _item$text ? _item$text : item.html);\n    var itemElement = super._renderItem(index, item, container, $after);\n    itemElement.toggleClass(TOOLBAR_BUTTON_CLASS, !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\n    return itemElement;\n  }\n  _renderGroupedItems() {\n    each(this.option(\"items\"), (groupIndex, group) => {\n      var _group$location;\n      var groupItems = group.items;\n      var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\n      var location = null !== (_group$location = group.location) && void 0 !== _group$location ? _group$location : \"center\";\n      if (!groupItems || !groupItems.length) {\n        return;\n      }\n      each(groupItems, (itemIndex, item) => {\n        this._renderItem(itemIndex, item, $container, null);\n      });\n      this._$toolbarItemsContainer.find(\".dx-toolbar-\".concat(location)).append($container);\n    });\n  }\n  _renderItems(items) {\n    var grouped = this.option(\"grouped\") && items.length && items[0].items;\n    grouped ? this._renderGroupedItems() : super._renderItems(items);\n  }\n  _getToolbarItems() {\n    var _this$option;\n    return null !== (_this$option = this.option(\"items\")) && void 0 !== _this$option ? _this$option : [];\n  }\n  _renderContentImpl() {\n    var items = this._getToolbarItems();\n    this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\n    if (this._renderedItemsCount) {\n      this._renderItems(items.slice(this._renderedItemsCount));\n    } else {\n      this._renderItems(items);\n    }\n    this._applyCompactMode();\n  }\n  _renderEmptyMessage() {}\n  _clean() {\n    this._$toolbarItemsContainer.children().empty();\n    this.$element().empty();\n    delete this._$beforeSection;\n    delete this._$centerSection;\n    delete this._$afterSection;\n  }\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._arrangeItems();\n    }\n  }\n  _isVisible() {\n    return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0;\n  }\n  _getIndexByItem(item) {\n    return this._getToolbarItems().indexOf(item);\n  }\n  _itemOptionChanged(item, property, value) {\n    super._itemOptionChanged.apply(this, [item, property, value]);\n    this._arrangeItems();\n  }\n  _optionChanged(_ref) {\n    var {\n      name: name,\n      value: value\n    } = _ref;\n    switch (name) {\n      case \"width\":\n        super._optionChanged.apply(this, arguments);\n        this._dimensionChanged();\n        break;\n      case \"renderAs\":\n      case \"useFlatButtons\":\n      case \"useDefaultButtons\":\n        this._invalidate();\n        break;\n      case \"compactMode\":\n        this._applyCompactMode();\n        break;\n      case \"grouped\":\n        break;\n      default:\n        super._optionChanged.apply(this, arguments);\n    }\n  }\n  _dispose() {\n    super._dispose();\n    clearTimeout(this._waitParentAnimationTimeout);\n  }\n  _updateDimensionsInMaterial() {\n    if (isMaterial()) {\n      Promise.all([(() => new Promise(resolve => {\n        var check = () => {\n          var readyToResolve = true;\n          this.$element().parents().each((_, parent) => {\n            if (fx.isAnimating($(parent))) {\n              readyToResolve = false;\n              return false;\n            }\n          });\n          if (readyToResolve) {\n            resolve();\n          }\n          return readyToResolve;\n        };\n        var runCheck = () => {\n          clearTimeout(this._waitParentAnimationTimeout);\n          this._waitParentAnimationTimeout = setTimeout(() => check() || runCheck(), ANIMATION_TIMEOUT);\n        };\n        runCheck();\n      }))(), (() => {\n        var $labels = this.$element().find(\".\".concat(TOOLBAR_LABEL_CLASS));\n        var promises = [];\n        $labels.each((_, label) => {\n          var text = $(label).text();\n          var fontWeight = $(label).css(\"fontWeight\");\n          promises.push(waitWebFont(text, fontWeight));\n        });\n        return Promise.all(promises);\n      })()]).then(() => {\n        this._dimensionChanged();\n      });\n    }\n  }\n}\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\nexport default ToolbarBase;","map":{"version":3,"names":["getWidth","getOuterWidth","getHeight","$","isMaterial","waitWebFont","isPlainObject","isDefined","registerComponent","extend","each","getBoundingRect","AsyncCollectionWidget","BindableTemplate","fx","TOOLBAR_CLASS","TOOLBAR_BEFORE_CLASS","TOOLBAR_CENTER_CLASS","TOOLBAR_AFTER_CLASS","TOOLBAR_MINI_CLASS","TOOLBAR_ITEM_CLASS","TOOLBAR_LABEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ITEMS_CONTAINER_CLASS","TOOLBAR_GROUP_CLASS","TOOLBAR_COMPACT_CLASS","TEXT_BUTTON_MODE","DEFAULT_BUTTON_TYPE","DEFAULT_DROPDOWNBUTTON_STYLING_MODE","TOOLBAR_ITEM_DATA_KEY","ANIMATION_TIMEOUT","ToolbarBase","_getSynchronizableOptionsForCreateComponent","filter","item","_initTemplates","template","$container","data","rawModel","text","html","widget","wrapInner","_data$options","options","stylingMode","option","_data$options2","_data$options$styling","_data$options3","_data$options$type","type","String","_getTemplate","render","container","model","parent","bind","_templateManager","addDefaultTemplates","menuItem","_getDefaultOptions","renderAs","grouped","useFlatButtons","useDefaultButtons","_defaultOptionsRules","concat","device","_itemContainer","_$toolbarItemsContainer","find","join","_itemClass","_itemDataKey","_dimensionChanged","_disposed","_arrangeItems","_applyCompactMode","_initMarkup","_renderToolbar","_renderSections","_render","_renderItemsAsync","_updateDimensionsInMaterial","_postProcessRenderItems","$element","addClass","appendTo","setAria","_","section","sectionClass","$section","length","elementWidth","_elementWidth","_$centerSection","css","margin","float","beforeRect","_$beforeSection","get","afterRect","_$afterSection","_alignCenterSection","$label","eq","labelOffset","width","position","left","widthBeforeSection","hasClass","widthAfterSection","elemsAtSectionWidth","children","not","freeSpace","sectionMaxWidth","Math","max","_alignSection","labelPaddings","isRTL","leftRect","rightRect","centerRect","right","marginLeft","marginRight","maxWidth","$labels","labels","toArray","_getCurrentLabelsPaddings","currentWidth","_getCurrentLabelsWidth","difference","abs","reverse","_alignSectionLabels","expanding","getRealLabelWidth","label","i","currentLabelWidth","ceil","labelMaxWidth","possibleLabelWidth","removeClass","_getSummaryItemsWidth","itemElements","forEach","index","padding","_renderItem","itemContainer","$after","_item$location","_item$text","location","itemHasText","itemElement","toggleClass","cssClass","_renderGroupedItems","groupIndex","group","_group$location","groupItems","items","itemIndex","append","_renderItems","_getToolbarItems","_this$option","_renderContentImpl","_renderedItemsCount","slice","_renderEmptyMessage","_clean","empty","_visibilityChanged","visible","_isVisible","_getIndexByItem","indexOf","_itemOptionChanged","property","value","apply","_optionChanged","_ref","name","arguments","_invalidate","_dispose","clearTimeout","_waitParentAnimationTimeout","Promise","all","resolve","check","readyToResolve","parents","isAnimating","runCheck","setTimeout","promises","fontWeight","push","then"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/toolbar/ui.toolbar.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isMaterial,\r\n    waitWebFont\r\n} from \"../themes\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    TOOLBAR_CLASS\r\n} from \"./constants\";\r\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\r\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\r\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\r\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\r\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\r\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\r\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\r\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\r\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\r\nvar TEXT_BUTTON_MODE = \"text\";\r\nvar DEFAULT_BUTTON_TYPE = \"default\";\r\nvar DEFAULT_DROPDOWNBUTTON_STYLING_MODE = \"contained\";\r\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\r\nvar ANIMATION_TIMEOUT = 15;\r\nclass ToolbarBase extends AsyncCollectionWidget {\r\n    _getSynchronizableOptionsForCreateComponent() {\r\n        return super._getSynchronizableOptionsForCreateComponent().filter(item => \"disabled\" !== item)\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        var template = new BindableTemplate(function($container, data, rawModel) {\r\n            if (isPlainObject(data)) {\r\n                var {\r\n                    text: text,\r\n                    html: html,\r\n                    widget: widget\r\n                } = data;\r\n                if (text) {\r\n                    $container.text(text).wrapInner(\"<div>\")\r\n                }\r\n                if (html) {\r\n                    $container.html(html)\r\n                }\r\n                if (\"dxDropDownButton\" === widget) {\r\n                    var _data$options;\r\n                    data.options = null !== (_data$options = data.options) && void 0 !== _data$options ? _data$options : {};\r\n                    if (!isDefined(data.options.stylingMode)) {\r\n                        data.options.stylingMode = this.option(\"useFlatButtons\") ? TEXT_BUTTON_MODE : DEFAULT_DROPDOWNBUTTON_STYLING_MODE\r\n                    }\r\n                }\r\n                if (\"dxButton\" === widget) {\r\n                    if (this.option(\"useFlatButtons\")) {\r\n                        var _data$options2, _data$options$styling;\r\n                        data.options = null !== (_data$options2 = data.options) && void 0 !== _data$options2 ? _data$options2 : {};\r\n                        data.options.stylingMode = null !== (_data$options$styling = data.options.stylingMode) && void 0 !== _data$options$styling ? _data$options$styling : TEXT_BUTTON_MODE\r\n                    }\r\n                    if (this.option(\"useDefaultButtons\")) {\r\n                        var _data$options3, _data$options$type;\r\n                        data.options = null !== (_data$options3 = data.options) && void 0 !== _data$options3 ? _data$options3 : {};\r\n                        data.options.type = null !== (_data$options$type = data.options.type) && void 0 !== _data$options$type ? _data$options$type : DEFAULT_BUTTON_TYPE\r\n                    }\r\n                }\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: rawModel,\r\n                parent: this\r\n            })\r\n        }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\r\n        this._templateManager.addDefaultTemplates({\r\n            item: template,\r\n            menuItem: template\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            renderAs: \"topToolbar\",\r\n            grouped: false,\r\n            useFlatButtons: false,\r\n            useDefaultButtons: false\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useFlatButtons: true\r\n            }\r\n        }])\r\n    }\r\n    _itemContainer() {\r\n        return this._$toolbarItemsContainer.find([\".\".concat(TOOLBAR_BEFORE_CLASS), \".\".concat(TOOLBAR_CENTER_CLASS), \".\".concat(TOOLBAR_AFTER_CLASS)].join(\",\"))\r\n    }\r\n    _itemClass() {\r\n        return TOOLBAR_ITEM_CLASS\r\n    }\r\n    _itemDataKey() {\r\n        return TOOLBAR_ITEM_DATA_KEY\r\n    }\r\n    _dimensionChanged() {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        this._arrangeItems();\r\n        this._applyCompactMode()\r\n    }\r\n    _initMarkup() {\r\n        this._renderToolbar();\r\n        this._renderSections();\r\n        super._initMarkup()\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._renderItemsAsync();\r\n        this._updateDimensionsInMaterial()\r\n    }\r\n    _postProcessRenderItems() {\r\n        this._arrangeItems()\r\n    }\r\n    _renderToolbar() {\r\n        this.$element().addClass(TOOLBAR_CLASS);\r\n        this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element());\r\n        this.setAria(\"role\", \"toolbar\")\r\n    }\r\n    _renderSections() {\r\n        var $container = this._$toolbarItemsContainer;\r\n        each([\"before\", \"center\", \"after\"], (_, section) => {\r\n            var sectionClass = \"dx-toolbar-\".concat(section);\r\n            var $section = $container.find(\".\".concat(sectionClass));\r\n            if (!$section.length) {\r\n                this[\"_$\".concat(section, \"Section\")] = $(\"<div>\").addClass(sectionClass).appendTo($container)\r\n            }\r\n        })\r\n    }\r\n    _arrangeItems(elementWidth) {\r\n        var _elementWidth;\r\n        elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : getWidth(this.$element());\r\n        this._$centerSection.css({\r\n            margin: \"0 auto\",\r\n            float: \"none\"\r\n        });\r\n        var beforeRect = getBoundingRect(this._$beforeSection.get(0));\r\n        var afterRect = getBoundingRect(this._$afterSection.get(0));\r\n        this._alignCenterSection(beforeRect, afterRect, elementWidth);\r\n        var $label = this._$toolbarItemsContainer.find(\".\".concat(TOOLBAR_LABEL_CLASS)).eq(0);\r\n        var $section = $label.parent();\r\n        if (!$label.length) {\r\n            return\r\n        }\r\n        var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\r\n        var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\r\n        var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\r\n        var elemsAtSectionWidth = 0;\r\n        $section.children().not(\".\".concat(TOOLBAR_LABEL_CLASS)).each((function() {\r\n            elemsAtSectionWidth += getOuterWidth(this)\r\n        }));\r\n        var freeSpace = elementWidth - elemsAtSectionWidth;\r\n        var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\r\n        if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\r\n            this._alignSection(this._$beforeSection, sectionMaxWidth)\r\n        } else {\r\n            var labelPaddings = getOuterWidth($label) - getWidth($label);\r\n            $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings)\r\n        }\r\n    }\r\n    _alignCenterSection(beforeRect, afterRect, elementWidth) {\r\n        this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var leftRect = isRTL ? afterRect : beforeRect;\r\n        var rightRect = isRTL ? beforeRect : afterRect;\r\n        var centerRect = getBoundingRect(this._$centerSection.get(0));\r\n        if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\r\n            this._$centerSection.css({\r\n                marginLeft: leftRect.width,\r\n                marginRight: rightRect.width,\r\n                float: leftRect.width > rightRect.width ? \"none\" : \"right\"\r\n            })\r\n        }\r\n    }\r\n    _alignSection($section, maxWidth) {\r\n        var $labels = $section.find(\".\".concat(TOOLBAR_LABEL_CLASS));\r\n        var labels = $labels.toArray();\r\n        maxWidth -= this._getCurrentLabelsPaddings(labels);\r\n        var currentWidth = this._getCurrentLabelsWidth(labels);\r\n        var difference = Math.abs(currentWidth - maxWidth);\r\n        if (maxWidth < currentWidth) {\r\n            labels = labels.reverse();\r\n            this._alignSectionLabels(labels, difference, false)\r\n        } else {\r\n            this._alignSectionLabels(labels, difference, true)\r\n        }\r\n    }\r\n    _alignSectionLabels(labels, difference, expanding) {\r\n        var getRealLabelWidth = function(label) {\r\n            return getBoundingRect(label).width\r\n        };\r\n        for (var i = 0; i < labels.length; i++) {\r\n            var $label = $(labels[i]);\r\n            var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\r\n            var labelMaxWidth = void 0;\r\n            if (expanding) {\r\n                $label.css(\"maxWidth\", \"inherit\")\r\n            }\r\n            var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\r\n            if (possibleLabelWidth < difference) {\r\n                labelMaxWidth = expanding ? possibleLabelWidth : 0;\r\n                difference -= possibleLabelWidth\r\n            } else {\r\n                labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\r\n                $label.css(\"maxWidth\", labelMaxWidth);\r\n                break\r\n            }\r\n            $label.css(\"maxWidth\", labelMaxWidth)\r\n        }\r\n    }\r\n    _applyCompactMode() {\r\n        var $element = this.$element();\r\n        $element.removeClass(TOOLBAR_COMPACT_CLASS);\r\n        if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\r\n            $element.addClass(TOOLBAR_COMPACT_CLASS)\r\n        }\r\n    }\r\n    _getCurrentLabelsWidth(labels) {\r\n        var width = 0;\r\n        labels.forEach((function(label, index) {\r\n            width += getOuterWidth(label)\r\n        }));\r\n        return width\r\n    }\r\n    _getCurrentLabelsPaddings(labels) {\r\n        var padding = 0;\r\n        labels.forEach((function(label, index) {\r\n            padding += getOuterWidth(label) - getWidth(label)\r\n        }));\r\n        return padding\r\n    }\r\n    _renderItem(index, item, itemContainer, $after) {\r\n        var _item$location, _item$text;\r\n        var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : \"center\";\r\n        var container = null !== itemContainer && void 0 !== itemContainer ? itemContainer : this[\"_$\".concat(location, \"Section\")];\r\n        var itemHasText = !!(null !== (_item$text = item.text) && void 0 !== _item$text ? _item$text : item.html);\r\n        var itemElement = super._renderItem(index, item, container, $after);\r\n        itemElement.toggleClass(TOOLBAR_BUTTON_CLASS, !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\r\n        return itemElement\r\n    }\r\n    _renderGroupedItems() {\r\n        each(this.option(\"items\"), (groupIndex, group) => {\r\n            var _group$location;\r\n            var groupItems = group.items;\r\n            var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\r\n            var location = null !== (_group$location = group.location) && void 0 !== _group$location ? _group$location : \"center\";\r\n            if (!groupItems || !groupItems.length) {\r\n                return\r\n            }\r\n            each(groupItems, (itemIndex, item) => {\r\n                this._renderItem(itemIndex, item, $container, null)\r\n            });\r\n            this._$toolbarItemsContainer.find(\".dx-toolbar-\".concat(location)).append($container)\r\n        })\r\n    }\r\n    _renderItems(items) {\r\n        var grouped = this.option(\"grouped\") && items.length && items[0].items;\r\n        grouped ? this._renderGroupedItems() : super._renderItems(items)\r\n    }\r\n    _getToolbarItems() {\r\n        var _this$option;\r\n        return null !== (_this$option = this.option(\"items\")) && void 0 !== _this$option ? _this$option : []\r\n    }\r\n    _renderContentImpl() {\r\n        var items = this._getToolbarItems();\r\n        this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\r\n        if (this._renderedItemsCount) {\r\n            this._renderItems(items.slice(this._renderedItemsCount))\r\n        } else {\r\n            this._renderItems(items)\r\n        }\r\n        this._applyCompactMode()\r\n    }\r\n    _renderEmptyMessage() {}\r\n    _clean() {\r\n        this._$toolbarItemsContainer.children().empty();\r\n        this.$element().empty();\r\n        delete this._$beforeSection;\r\n        delete this._$centerSection;\r\n        delete this._$afterSection\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._arrangeItems()\r\n        }\r\n    }\r\n    _isVisible() {\r\n        return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0\r\n    }\r\n    _getIndexByItem(item) {\r\n        return this._getToolbarItems().indexOf(item)\r\n    }\r\n    _itemOptionChanged(item, property, value) {\r\n        super._itemOptionChanged.apply(this, [item, property, value]);\r\n        this._arrangeItems()\r\n    }\r\n    _optionChanged(_ref) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref;\r\n        switch (name) {\r\n            case \"width\":\r\n                super._optionChanged.apply(this, arguments);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"renderAs\":\r\n            case \"useFlatButtons\":\r\n            case \"useDefaultButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"compactMode\":\r\n                this._applyCompactMode();\r\n                break;\r\n            case \"grouped\":\r\n                break;\r\n            default:\r\n                super._optionChanged.apply(this, arguments)\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        clearTimeout(this._waitParentAnimationTimeout)\r\n    }\r\n    _updateDimensionsInMaterial() {\r\n        if (isMaterial()) {\r\n            Promise.all([(() => new Promise(resolve => {\r\n                var check = () => {\r\n                    var readyToResolve = true;\r\n                    this.$element().parents().each((_, parent) => {\r\n                        if (fx.isAnimating($(parent))) {\r\n                            readyToResolve = false;\r\n                            return false\r\n                        }\r\n                    });\r\n                    if (readyToResolve) {\r\n                        resolve()\r\n                    }\r\n                    return readyToResolve\r\n                };\r\n                var runCheck = () => {\r\n                    clearTimeout(this._waitParentAnimationTimeout);\r\n                    this._waitParentAnimationTimeout = setTimeout(() => check() || runCheck(), ANIMATION_TIMEOUT)\r\n                };\r\n                runCheck()\r\n            }))(), (() => {\r\n                var $labels = this.$element().find(\".\".concat(TOOLBAR_LABEL_CLASS));\r\n                var promises = [];\r\n                $labels.each((_, label) => {\r\n                    var text = $(label).text();\r\n                    var fontWeight = $(label).css(\"fontWeight\");\r\n                    promises.push(waitWebFont(text, fontWeight))\r\n                });\r\n                return Promise.all(promises)\r\n            })()]).then(() => {\r\n                this._dimensionChanged()\r\n            })\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\r\nexport default ToolbarBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}