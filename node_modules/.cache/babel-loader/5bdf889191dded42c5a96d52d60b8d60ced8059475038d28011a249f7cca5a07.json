{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\nclass InputEventsMaskStrategy extends BaseMaskStrategy {\n  _getStrategyName() {\n    return \"inputEvents\";\n  }\n  getHandleEventNames() {\n    return [...super.getHandleEventNames(), \"beforeInput\"];\n  }\n  _beforeInputHandler() {\n    this._prevCaret = this.editorCaret();\n  }\n  _inputHandler(_ref) {\n    var {\n      originalEvent: originalEvent\n    } = _ref;\n    if (!originalEvent) {\n      return;\n    }\n    var {\n      inputType: inputType,\n      data: data\n    } = originalEvent;\n    var currentCaret = this.editorCaret();\n    if (inputType === DELETE_INPUT_TYPE) {\n      var length = this._prevCaret.end - this._prevCaret.start || 1;\n      this.editor.setBackwardDirection();\n      this._updateEditorMask({\n        start: currentCaret.start,\n        length: length,\n        text: this._getEmptyString(length)\n      });\n    } else {\n      var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\n      if (!currentCaret.end) {\n        return;\n      }\n      this._autoFillHandler(originalEvent);\n      this.editorCaret(currentCaret);\n      var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\n      var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\n      this.editor.setForwardDirection();\n      var hasValidChars = this._updateEditorMask({\n        start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\n        length: _length || newData.length,\n        text: newData\n      });\n      if (!hasValidChars) {\n        this.editorCaret(this._prevCaret);\n      }\n    }\n  }\n  _getEmptyString(length) {\n    return Array(length + 1).join(\" \");\n  }\n  _updateEditorMask(args) {\n    var textLength = args.text.length;\n    var updatedCharsCount = this.editor._handleChain(args);\n    if (this.editor.isForwardDirection()) {\n      var {\n        start: start,\n        end: end\n      } = this.editorCaret();\n      var correction = updatedCharsCount - textLength;\n      if (start <= updatedCharsCount && updatedCharsCount > 1) {\n        this.editorCaret({\n          start: start + correction,\n          end: end + correction\n        });\n      }\n      this.editor.isForwardDirection() && this.editor._adjustCaret();\n    }\n    this.editor._displayMask();\n    return !!updatedCharsCount;\n  }\n}\nexport default InputEventsMaskStrategy;","map":{"version":3,"names":["BaseMaskStrategy","DELETE_INPUT_TYPE","InputEventsMaskStrategy","_getStrategyName","getHandleEventNames","_beforeInputHandler","_prevCaret","editorCaret","_inputHandler","_ref","originalEvent","inputType","data","currentCaret","length","end","start","editor","setBackwardDirection","_updateEditorMask","text","_getEmptyString","_this$_prevCaret","_this$_prevCaret2","_this$_prevCaret3","_autoFillHandler","_length","newData","setForwardDirection","hasValidChars","Array","join","args","textLength","updatedCharsCount","_handleChain","isForwardDirection","correction","_adjustCaret","_displayMask"],"sources":["C:/Users/ninad/OneDrive/Radna povr≈°ina/zavrsni/client/node_modules/devextreme/esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\r\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\r\nclass InputEventsMaskStrategy extends BaseMaskStrategy {\r\n    _getStrategyName() {\r\n        return \"inputEvents\"\r\n    }\r\n    getHandleEventNames() {\r\n        return [...super.getHandleEventNames(), \"beforeInput\"]\r\n    }\r\n    _beforeInputHandler() {\r\n        this._prevCaret = this.editorCaret()\r\n    }\r\n    _inputHandler(_ref) {\r\n        var {\r\n            originalEvent: originalEvent\r\n        } = _ref;\r\n        if (!originalEvent) {\r\n            return\r\n        }\r\n        var {\r\n            inputType: inputType,\r\n            data: data\r\n        } = originalEvent;\r\n        var currentCaret = this.editorCaret();\r\n        if (inputType === DELETE_INPUT_TYPE) {\r\n            var length = this._prevCaret.end - this._prevCaret.start || 1;\r\n            this.editor.setBackwardDirection();\r\n            this._updateEditorMask({\r\n                start: currentCaret.start,\r\n                length: length,\r\n                text: this._getEmptyString(length)\r\n            })\r\n        } else {\r\n            var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\r\n            if (!currentCaret.end) {\r\n                return\r\n            }\r\n            this._autoFillHandler(originalEvent);\r\n            this.editorCaret(currentCaret);\r\n            var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\r\n            var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\r\n            this.editor.setForwardDirection();\r\n            var hasValidChars = this._updateEditorMask({\r\n                start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\r\n                length: _length || newData.length,\r\n                text: newData\r\n            });\r\n            if (!hasValidChars) {\r\n                this.editorCaret(this._prevCaret)\r\n            }\r\n        }\r\n    }\r\n    _getEmptyString(length) {\r\n        return Array(length + 1).join(\" \")\r\n    }\r\n    _updateEditorMask(args) {\r\n        var textLength = args.text.length;\r\n        var updatedCharsCount = this.editor._handleChain(args);\r\n        if (this.editor.isForwardDirection()) {\r\n            var {\r\n                start: start,\r\n                end: end\r\n            } = this.editorCaret();\r\n            var correction = updatedCharsCount - textLength;\r\n            if (start <= updatedCharsCount && updatedCharsCount > 1) {\r\n                this.editorCaret({\r\n                    start: start + correction,\r\n                    end: end + correction\r\n                })\r\n            }\r\n            this.editor.isForwardDirection() && this.editor._adjustCaret()\r\n        }\r\n        this.editor._displayMask();\r\n        return !!updatedCharsCount\r\n    }\r\n}\r\nexport default InputEventsMaskStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}