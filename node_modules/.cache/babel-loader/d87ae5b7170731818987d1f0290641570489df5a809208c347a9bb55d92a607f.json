{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/object.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isNumeric, isPlainObject, isObject } from \"./type\";\nimport variableWrapper from \"./variable_wrapper\";\nvar clone = function () {\n  function Clone() {}\n  return function (obj) {\n    Clone.prototype = obj;\n    return new Clone();\n  };\n}();\nvar orderEach = function (map, func) {\n  var keys = [];\n  var key;\n  var i;\n  for (key in map) {\n    if (Object.prototype.hasOwnProperty.call(map, key)) {\n      keys.push(key);\n    }\n  }\n  keys.sort(function (x, y) {\n    var isNumberX = isNumeric(x);\n    var isNumberY = isNumeric(y);\n    if (isNumberX && isNumberY) {\n      return x - y;\n    }\n    if (isNumberX && !isNumberY) {\n      return -1;\n    }\n    if (!isNumberX && isNumberY) {\n      return 1;\n    }\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  });\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    func(key, map[key]);\n  }\n};\nvar assignValueToProperty = function (target, property, value, assignByReference) {\n  if (!assignByReference && variableWrapper.isWrapped(target[property])) {\n    variableWrapper.assign(target[property], value);\n  } else {\n    target[property] = value;\n  }\n};\nvar deepExtendArraySafe = function deepExtendArraySafe(target, changes, extendComplexObject, assignByReference) {\n  var prevValue;\n  var newValue;\n  for (var name in changes) {\n    prevValue = target[name];\n    newValue = changes[name];\n    if (\"__proto__\" === name || \"constructor\" === name || target === newValue) {\n      continue;\n    }\n    if (isPlainObject(newValue)) {\n      var goDeeper = extendComplexObject ? isObject(prevValue) : isPlainObject(prevValue);\n      newValue = deepExtendArraySafe(goDeeper ? prevValue : {}, newValue, extendComplexObject, assignByReference);\n    }\n    if (void 0 !== newValue && prevValue !== newValue) {\n      assignValueToProperty(target, name, newValue, assignByReference);\n    }\n  }\n  return target;\n};\nexport { clone, orderEach, deepExtendArraySafe };","map":{"version":3,"names":["isNumeric","isPlainObject","isObject","variableWrapper","clone","Clone","obj","prototype","orderEach","map","func","keys","key","i","Object","hasOwnProperty","call","push","sort","x","y","isNumberX","isNumberY","length","assignValueToProperty","target","property","value","assignByReference","isWrapped","assign","deepExtendArraySafe","changes","extendComplexObject","prevValue","newValue","name","goDeeper"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/utils/object.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/object.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isNumeric,\r\n    isPlainObject,\r\n    isObject\r\n} from \"./type\";\r\nimport variableWrapper from \"./variable_wrapper\";\r\nvar clone = function() {\r\n    function Clone() {}\r\n    return function(obj) {\r\n        Clone.prototype = obj;\r\n        return new Clone\r\n    }\r\n}();\r\nvar orderEach = function(map, func) {\r\n    var keys = [];\r\n    var key;\r\n    var i;\r\n    for (key in map) {\r\n        if (Object.prototype.hasOwnProperty.call(map, key)) {\r\n            keys.push(key)\r\n        }\r\n    }\r\n    keys.sort((function(x, y) {\r\n        var isNumberX = isNumeric(x);\r\n        var isNumberY = isNumeric(y);\r\n        if (isNumberX && isNumberY) {\r\n            return x - y\r\n        }\r\n        if (isNumberX && !isNumberY) {\r\n            return -1\r\n        }\r\n        if (!isNumberX && isNumberY) {\r\n            return 1\r\n        }\r\n        if (x < y) {\r\n            return -1\r\n        }\r\n        if (x > y) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }));\r\n    for (i = 0; i < keys.length; i++) {\r\n        key = keys[i];\r\n        func(key, map[key])\r\n    }\r\n};\r\nvar assignValueToProperty = function(target, property, value, assignByReference) {\r\n    if (!assignByReference && variableWrapper.isWrapped(target[property])) {\r\n        variableWrapper.assign(target[property], value)\r\n    } else {\r\n        target[property] = value\r\n    }\r\n};\r\nvar deepExtendArraySafe = function deepExtendArraySafe(target, changes, extendComplexObject, assignByReference) {\r\n    var prevValue;\r\n    var newValue;\r\n    for (var name in changes) {\r\n        prevValue = target[name];\r\n        newValue = changes[name];\r\n        if (\"__proto__\" === name || \"constructor\" === name || target === newValue) {\r\n            continue\r\n        }\r\n        if (isPlainObject(newValue)) {\r\n            var goDeeper = extendComplexObject ? isObject(prevValue) : isPlainObject(prevValue);\r\n            newValue = deepExtendArraySafe(goDeeper ? prevValue : {}, newValue, extendComplexObject, assignByReference)\r\n        }\r\n        if (void 0 !== newValue && prevValue !== newValue) {\r\n            assignValueToProperty(target, name, newValue, assignByReference)\r\n        }\r\n    }\r\n    return target\r\n};\r\nexport {\r\n    clone,\r\n    orderEach,\r\n    deepExtendArraySafe\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}