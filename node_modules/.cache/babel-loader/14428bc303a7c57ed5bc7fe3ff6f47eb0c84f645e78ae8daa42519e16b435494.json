{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { isDefined, isEmptyObject, isFunction, isObject, type } from \"../../core/utils/type\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeIndexes } from \"../../core/utils/array\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { removeEvent } from \"../../events/remove\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport ResponsiveBox from \"../responsive_box\";\nimport { LAYOUT_MANAGER_ONE_COLUMN, FORM_LAYOUT_MANAGER_CLASS, SINGLE_COLUMN_ITEM_CONTENT, ROOT_SIMPLE_ITEM_CLASS, SIMPLE_ITEM_TYPE, FIELD_ITEM_CLASS } from \"./constants\";\nimport \"../text_box\";\nimport \"../number_box\";\nimport \"../check_box\";\nimport \"../date_box\";\nimport \"../button\";\nimport { renderFieldItem } from \"./components/field_item\";\nimport { renderButtonItem } from \"./components/button_item\";\nimport { renderEmptyItem } from \"./components/empty_item\";\nimport { convertToRenderFieldItemOptions } from \"./ui.form.layout_manager.utils\";\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\nvar LayoutManager = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      layoutData: {},\n      readOnly: false,\n      colCount: 1,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      onFieldDataChanged: null,\n      onEditorEnterKey: null,\n      customizeItem: null,\n      alignItemLabels: true,\n      minColWidth: 200,\n      showRequiredMark: true,\n      screenByWidth: null,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      labelMode: \"outside\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      layoutData: true,\n      validationGroup: true\n    });\n  },\n  _init: function () {\n    var layoutData = this.option(\"layoutData\");\n    this.callBase();\n    this._itemWatchers = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n    this._updateReferencedOptions(layoutData);\n    this._initDataAndItems(layoutData);\n  },\n  _dispose: function () {\n    this.callBase();\n    this._cleanItemWatchers();\n  },\n  _initDataAndItems: function (initialData) {\n    this._syncDataWithItems();\n    this._updateItems(initialData);\n  },\n  _syncDataWithItems: function () {\n    var layoutData = this.option(\"layoutData\");\n    var userItems = this.option(\"items\");\n    if (isDefined(userItems)) {\n      userItems.forEach(item => {\n        if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\n          var value;\n          if (item.editorOptions) {\n            value = item.editorOptions.value;\n          }\n          if (isDefined(value) || item.dataField in layoutData) {\n            this._updateFieldValue(item.dataField, value);\n          }\n        }\n      });\n    }\n  },\n  _getDataByField: function (dataField) {\n    return dataField ? this.option(\"layoutData.\" + dataField) : null;\n  },\n  _isCheckboxUndefinedStateEnabled: function (_ref) {\n    var {\n      allowIndeterminateState: allowIndeterminateState,\n      editorType: editorType,\n      dataField: dataField\n    } = _ref;\n    if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\n      var nameParts = [\"layoutData\", ...dataField.split(\".\")];\n      var propertyName = nameParts.pop();\n      var layoutData = this.option(nameParts.join(\".\"));\n      return layoutData && propertyName in layoutData;\n    }\n    return false;\n  },\n  _updateFieldValue: function (dataField, value) {\n    var layoutData = this.option(\"layoutData\");\n    var newValue = value;\n    if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\n      this.option(\"layoutData.\" + dataField, newValue);\n    } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\n      newValue = isFunction(newValue) ? newValue() : newValue;\n      layoutData[dataField](newValue);\n    }\n    this._triggerOnFieldDataChanged({\n      dataField: dataField,\n      value: newValue\n    });\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _updateItems: function (layoutData) {\n    var that = this;\n    var userItems = this.option(\"items\");\n    var isUserItemsExist = isDefined(userItems);\n    var customizeItem = that.option(\"customizeItem\");\n    var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\n    if (isDefined(items)) {\n      var processedItems = [];\n      each(items, function (index, item) {\n        if (that._isAcceptableItem(item)) {\n          item = that._processItem(item);\n          customizeItem && customizeItem(item);\n          if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\n            processedItems.push(item);\n          }\n        }\n      });\n      if (!that._itemWatchers.length || !isUserItemsExist) {\n        that._updateItemWatchers(items);\n      }\n      this._setItems(processedItems);\n      this._sortItems();\n    }\n  },\n  _cleanItemWatchers: function () {\n    this._itemWatchers.forEach(function (dispose) {\n      dispose();\n    });\n    this._itemWatchers = [];\n  },\n  _updateItemWatchers: function (items) {\n    var that = this;\n    var watch = that._getWatch();\n    items.forEach(function (item) {\n      if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\n        that._itemWatchers.push(watch(function () {\n          return variableWrapper.unwrap(item.visible);\n        }, function () {\n          that._updateItems(that.option(\"layoutData\"));\n          that.repaint();\n        }, {\n          skipImmediate: true\n        }));\n      }\n    });\n  },\n  _generateItemsByData: function (layoutData) {\n    var result = [];\n    if (isDefined(layoutData)) {\n      each(layoutData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n    return result;\n  },\n  _isAcceptableItem: function (item) {\n    var itemField = item.dataField || item;\n    var itemData = this._getDataByField(itemField);\n    return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData));\n  },\n  _processItem: function (item) {\n    if (\"string\" === typeof item) {\n      item = {\n        dataField: item\n      };\n    }\n    if (\"object\" === typeof item && !item.itemType) {\n      item.itemType = SIMPLE_ITEM_TYPE;\n    }\n    if (!isDefined(item.editorType) && isDefined(item.dataField)) {\n      var value = this._getDataByField(item.dataField);\n      item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT;\n    }\n    if (\"dxCheckBox\" === item.editorType) {\n      var _item$allowIndetermin;\n      item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true;\n    }\n    return item;\n  },\n  _getEditorTypeByDataType: function (dataType) {\n    switch (dataType) {\n      case \"number\":\n        return \"dxNumberBox\";\n      case \"date\":\n        return \"dxDateBox\";\n      case \"boolean\":\n        return \"dxCheckBox\";\n      default:\n        return \"dxTextBox\";\n    }\n  },\n  _sortItems: function () {\n    normalizeIndexes(this._items, \"visibleIndex\");\n    this._sortIndexes();\n  },\n  _sortIndexes: function () {\n    this._items.sort(function (itemA, itemB) {\n      var indexA = itemA.visibleIndex;\n      var indexB = itemB.visibleIndex;\n      var result;\n      if (indexA > indexB) {\n        result = 1;\n      } else if (indexA < indexB) {\n        result = -1;\n      } else {\n        result = 0;\n      }\n      return result;\n    });\n  },\n  _initMarkup: function () {\n    this._itemsRunTimeInfo.clear();\n    this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\n    this.callBase();\n    this._renderResponsiveBox();\n  },\n  _renderResponsiveBox: function () {\n    var templatesInfo = [];\n    if (this._items && this._items.length) {\n      var colCount = this._getColCount();\n      var $container = $(\"<div>\").appendTo(this.$element());\n      this._prepareItemsWithMerging(colCount);\n      var layoutItems = this._generateLayoutItems();\n      this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\n      if (!hasWindow()) {\n        this._renderTemplates(templatesInfo);\n      }\n    }\n  },\n  _itemStateChangedHandler: function (e) {\n    this._refresh();\n  },\n  _renderTemplates: function (templatesInfo) {\n    var that = this;\n    var itemsWithLabelTemplateCount = 0;\n    templatesInfo.forEach(_ref2 => {\n      var _item$label;\n      var {\n        item: item\n      } = _ref2;\n      if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {\n        itemsWithLabelTemplateCount++;\n      }\n    });\n    each(templatesInfo, function (index, info) {\n      switch (info.itemType) {\n        case \"empty\":\n          renderEmptyItem(info);\n          break;\n        case \"button\":\n          that._renderButtonItem(info);\n          break;\n        default:\n          that._renderFieldItem(info, itemsWithLabelTemplateCount);\n      }\n    });\n  },\n  _getResponsiveBoxConfig: function (layoutItems, colCount, templatesInfo) {\n    var that = this;\n    var colCountByScreen = that.option(\"colCountByScreen\");\n    var xsColCount = colCountByScreen && colCountByScreen.xs;\n    return {\n      onItemStateChanged: this._itemStateChangedHandler.bind(this),\n      onLayoutChanged: function () {\n        var onLayoutChanged = that.option(\"onLayoutChanged\");\n        var isSingleColumnMode = that.isSingleColumnMode();\n        if (onLayoutChanged) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\n          onLayoutChanged(isSingleColumnMode);\n        }\n      },\n      onContentReady: function (e) {\n        if (hasWindow()) {\n          that._renderTemplates(templatesInfo);\n        }\n        if (that.option(\"onLayoutChanged\")) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component));\n        }\n      },\n      itemTemplate: function (e, itemData, itemElement) {\n        if (!e.location) {\n          return;\n        }\n        var $itemElement = $(itemElement);\n        var itemRenderedCountInPreviousRows = e.location.row * colCount;\n        var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\n        if (!item) {\n          return;\n        }\n        var itemCssClassList = [item.cssClass];\n        $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\n        if (0 === e.location.row) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS);\n        }\n        if (0 === e.location.col) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS);\n        }\n        if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\n          $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS);\n        }\n        var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\n        var rowsCount = that._getRowsCount();\n        var isLastRow = e.location.row === rowsCount - 1;\n        if (isLastColumn) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS);\n        }\n        if (isLastRow) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS);\n        }\n        if (\"empty\" !== item.itemType) {\n          itemCssClassList.push(FIELD_ITEM_CLASS);\n          itemCssClassList.push(that.option(\"cssItemClass\"));\n          if (isDefined(item.col)) {\n            itemCssClassList.push(\"dx-col-\" + item.col);\n          }\n        }\n        templatesInfo.push({\n          itemType: item.itemType,\n          item: item,\n          $parent: $itemElement,\n          rootElementCssClassList: itemCssClassList\n        });\n      },\n      cols: that._generateRatio(colCount),\n      rows: that._generateRatio(that._getRowsCount(), true),\n      dataSource: layoutItems,\n      screenByWidth: that.option(\"screenByWidth\"),\n      singleColumnScreen: xsColCount ? false : \"xs\"\n    };\n  },\n  _getColCount: function () {\n    var colCount = this.option(\"colCount\");\n    var colCountByScreen = this.option(\"colCountByScreen\");\n    if (colCountByScreen) {\n      var screenFactor = this.option(\"form\").getTargetScreenFactor();\n      if (!screenFactor) {\n        screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n      }\n      colCount = colCountByScreen[screenFactor] || colCount;\n    }\n    if (\"auto\" === colCount) {\n      if (this._cashedColCount) {\n        return this._cashedColCount;\n      }\n      this._cashedColCount = colCount = this._getMaxColCount();\n    }\n    return colCount < 1 ? 1 : colCount;\n  },\n  _getMaxColCount: function () {\n    if (!hasWindow()) {\n      return 1;\n    }\n    var minColWidth = this.option(\"minColWidth\");\n    var width = getWidth(this.$element());\n    var itemsCount = this._items.length;\n    var maxColCount = Math.floor(width / minColWidth) || 1;\n    return itemsCount < maxColCount ? itemsCount : maxColCount;\n  },\n  isCachedColCountObsolete: function () {\n    return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;\n  },\n  _prepareItemsWithMerging: function (colCount) {\n    var items = this._items.slice(0);\n    var item;\n    var itemsMergedByCol;\n    var result = [];\n    var j;\n    var i;\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      result.push(item);\n      if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\n        item.col = this._getColByIndex(result.length - 1, colCount);\n      }\n      if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\n        itemsMergedByCol = [];\n        for (j = 0; j < item.colSpan - 1; j++) {\n          itemsMergedByCol.push({\n            merged: true\n          });\n        }\n        result = result.concat(itemsMergedByCol);\n      } else {\n        delete item.colSpan;\n      }\n    }\n    this._setItems(result);\n  },\n  _getColByIndex: function (index, colCount) {\n    return index % colCount;\n  },\n  _setItems: function (items) {\n    this._items = items;\n    this._cashedColCount = null;\n  },\n  _generateLayoutItems: function () {\n    var items = this._items;\n    var colCount = this._getColCount();\n    var result = [];\n    var item;\n    var i;\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      if (!item.merged) {\n        var generatedItem = {\n          location: {\n            row: parseInt(i / colCount),\n            col: this._getColByIndex(i, colCount)\n          }\n        };\n        if (isDefined(item.disabled)) {\n          generatedItem.disabled = item.disabled;\n        }\n        if (isDefined(item.visible)) {\n          generatedItem.visible = item.visible;\n        }\n        if (isDefined(item.colSpan)) {\n          generatedItem.location.colspan = item.colSpan;\n        }\n        if (isDefined(item.rowSpan)) {\n          generatedItem.location.rowspan = item.rowSpan;\n        }\n        result.push(generatedItem);\n      }\n    }\n    return result;\n  },\n  _renderEmptyItem: function ($container) {\n    renderEmptyItem({\n      $container: $container\n    });\n  },\n  _renderButtonItem: function (_ref3) {\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref3;\n    var {\n      $rootElement: $rootElement,\n      buttonInstance: buttonInstance\n    } = renderButtonItem({\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      validationGroup: this.option(\"validationGroup\"),\n      createComponentCallback: this._createComponent.bind(this)\n    });\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: buttonInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n  _renderFieldItem: function (_ref4, itemsWithLabelTemplateCount) {\n    var _item$label2, _this$option;\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref4;\n    var editorValue = this._getDataByField(item.dataField);\n    var canAssignUndefinedValueToEditor = false;\n    if (void 0 === editorValue) {\n      var {\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      } = item;\n      canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      });\n    }\n    var name = item.dataField || item.name;\n    var formOrLayoutManager = this._getFormOrThis();\n    var {\n      $fieldEditorContainer: $fieldEditorContainer,\n      widgetInstance: widgetInstance,\n      $rootElement: $rootElement\n    } = renderFieldItem(convertToRenderFieldItemOptions({\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      item: item,\n      name: name,\n      editorValue: editorValue,\n      canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\n      formOrLayoutManager: this._getFormOrThis(),\n      createComponentCallback: this._createComponent.bind(this),\n      formLabelLocation: this.option(\"labelLocation\"),\n      requiredMessageTemplate: this.option(\"requiredMessage\"),\n      validationGroup: this.option(\"validationGroup\"),\n      editorValidationBoundary: this.option(\"validationBoundary\"),\n      editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\n      showColonAfterLabel: this.option(\"showColonAfterLabel\"),\n      managerLabelLocation: this.option(\"labelLocation\"),\n      template: item.template ? this._getTemplate(item.template) : null,\n      labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,\n      itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\n      managerMarkOptions: this._getMarkOptions(),\n      labelMode: this.option(\"labelMode\"),\n      onLabelTemplateRendered: () => {\n        this._incTemplateRenderedCallCount();\n        if (this._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {\n          formOrLayoutManager._alignLabels(this, this.isSingleColumnMode(formOrLayoutManager));\n        }\n      }\n    }));\n    null === (_this$option = this.option(\"onFieldItemRendered\")) || void 0 === _this$option ? void 0 : _this$option();\n    if (widgetInstance && item.dataField) {\n      this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer);\n    }\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: widgetInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n  _incTemplateRenderedCallCount() {\n    var _this$_labelTemplateR;\n    this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1;\n  },\n  _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {\n    return formOrLayoutManager.option(\"templatesRenderAsynchronously\") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate;\n  },\n  _getMarkOptions: function () {\n    return {\n      showRequiredMark: this.option(\"showRequiredMark\"),\n      requiredMark: this.option(\"requiredMark\"),\n      showOptionalMark: this.option(\"showOptionalMark\"),\n      optionalMark: this.option(\"optionalMark\")\n    };\n  },\n  _getFormOrThis: function () {\n    return this.option(\"form\") || this;\n  },\n  _bindDataField: function (editorInstance, dataField, editorType, $container) {\n    var formOrThis = this._getFormOrThis();\n    editorInstance.on(\"enterKey\", function (args) {\n      formOrThis._createActionByOption(\"onEditorEnterKey\")(extend(args, {\n        dataField: dataField\n      }));\n    });\n    this._createWatcher(editorInstance, $container, dataField);\n    this.linkEditorToDataField(editorInstance, dataField, editorType);\n  },\n  _createWatcher: function (editorInstance, $container, dataField) {\n    var that = this;\n    var watch = that._getWatch();\n    if (!isFunction(watch)) {\n      return;\n    }\n    var dispose = watch(function () {\n      return that._getDataByField(dataField);\n    }, function () {\n      var fieldValue = that._getDataByField(dataField);\n      if (\"dxTagBox\" === editorInstance.NAME) {\n        var editorValue = editorInstance.option(\"value\");\n        if (fieldValue !== editorValue && function (array1, array2) {\n          if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {\n            return false;\n          }\n          for (var i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) {\n              return false;\n            }\n          }\n          return true;\n        }(fieldValue, editorValue)) {\n          return;\n        }\n      }\n      editorInstance.option(\"value\", fieldValue);\n    }, {\n      deep: true,\n      skipImmediate: true\n    });\n    eventsEngine.on($container, removeEvent, dispose);\n  },\n  _getWatch: function () {\n    if (!isDefined(this._watch)) {\n      var formInstance = this.option(\"form\");\n      this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\");\n    }\n    return this._watch;\n  },\n  _createComponent: function ($editor, type, editorOptions) {\n    var readOnlyState = this.option(\"readOnly\");\n    var instance = this.callBase($editor, type, editorOptions);\n    readOnlyState && instance.option(\"readOnly\", readOnlyState);\n    this.on(\"optionChanged\", function (args) {\n      if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\n        instance.option(args.name, args.value);\n      }\n    });\n    return instance;\n  },\n  _generateRatio: function (count, isAutoSize) {\n    var result = [];\n    var ratio;\n    var i;\n    for (i = 0; i < count; i++) {\n      ratio = {\n        ratio: 1\n      };\n      if (isAutoSize) {\n        ratio.baseSize = \"auto\";\n      }\n      result.push(ratio);\n    }\n    return result;\n  },\n  _getRowsCount: function () {\n    return Math.ceil(this._items.length / this._getColCount());\n  },\n  _updateReferencedOptions: function (newLayoutData) {\n    var layoutData = this.option(\"layoutData\");\n    if (isObject(layoutData)) {\n      Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property]);\n    }\n    if (isObject(newLayoutData)) {\n      Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true);\n    }\n  },\n  _resetWidget(instance) {\n    this._disableEditorValueChangedHandler = true;\n    instance.reset();\n    this._disableEditorValueChangedHandler = false;\n    instance.option(\"isValid\", true);\n  },\n  _optionChanged(args) {\n    if (0 === args.fullName.search(\"layoutData.\")) {\n      return;\n    }\n    switch (args.name) {\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n        this._cashedRequiredConfig = null;\n        this._invalidate();\n        break;\n      case \"layoutData\":\n        this._updateReferencedOptions(args.value);\n        if (this.option(\"items\")) {\n          if (!isEmptyObject(args.value)) {\n            this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\n              if (isDefined(itemRunTimeInfo.item)) {\n                var dataField = itemRunTimeInfo.item.dataField;\n                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\n                  var valueGetter = compileGetter(dataField);\n                  var dataValue = valueGetter(args.value);\n                  var {\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType\n                  } = itemRunTimeInfo.item;\n                  if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType,\n                    dataField: dataField\n                  })) {\n                    itemRunTimeInfo.widgetInstance.option(\"value\", dataValue);\n                  } else {\n                    this._resetWidget(itemRunTimeInfo.widgetInstance);\n                  }\n                }\n              }\n            });\n          }\n        } else {\n          this._initDataAndItems(args.value);\n          this._invalidate();\n        }\n        break;\n      case \"items\":\n        this._cleanItemWatchers();\n        this._initDataAndItems(args.value);\n        this._invalidate();\n        break;\n      case \"alignItemLabels\":\n      case \"labelLocation\":\n      case \"labelMode\":\n      case \"requiredMessage\":\n        this._invalidate();\n        break;\n      case \"customizeItem\":\n        this._updateItems(this.option(\"layoutData\"));\n        this._invalidate();\n        break;\n      case \"colCount\":\n      case \"colCountByScreen\":\n        this._resetColCount();\n        break;\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n        break;\n      case \"readOnly\":\n        break;\n      case \"width\":\n        this.callBase(args);\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n        break;\n      case \"onFieldDataChanged\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _resetColCount: function () {\n    this._cashedColCount = null;\n    this._invalidate();\n  },\n  linkEditorToDataField(editorInstance, dataField) {\n    this.on(\"optionChanged\", args => {\n      if (args.fullName === \"layoutData.\".concat(dataField)) {\n        editorInstance._setOptionWithoutOptionChange(\"value\", args.value);\n      }\n    });\n    editorInstance.on(\"valueChanged\", args => {\n      var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\n      if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\n        this._updateFieldValue(dataField, args.value);\n      }\n    });\n  },\n  _dimensionChanged: function () {\n    if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\n      this._eventsStrategy.fireEvent(\"autoColCountChanged\");\n    }\n  },\n  updateData: function (data, value) {\n    var that = this;\n    if (isObject(data)) {\n      each(data, function (dataField, fieldValue) {\n        that._updateFieldValue(dataField, fieldValue);\n      });\n    } else if (\"string\" === typeof data) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  getEditor: function (field) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field);\n  },\n  isSingleColumnMode: function (component) {\n    var responsiveBox = this._responsiveBox || component;\n    if (responsiveBox) {\n      return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\");\n    }\n  },\n  getItemsRunTimeInfo: function () {\n    return this._itemsRunTimeInfo;\n  }\n});\nregisterComponent(\"dxLayoutManager\", LayoutManager);\nexport default LayoutManager;","map":{"version":3,"names":["getWidth","$","eventsEngine","default","FormItemsRunTimeInfo","registerComponent","isDefined","isEmptyObject","isFunction","isObject","type","variableWrapper","getCurrentScreenFactor","hasWindow","each","extend","normalizeIndexes","compileGetter","removeEvent","messageLocalization","Widget","ResponsiveBox","LAYOUT_MANAGER_ONE_COLUMN","FORM_LAYOUT_MANAGER_CLASS","SINGLE_COLUMN_ITEM_CONTENT","ROOT_SIMPLE_ITEM_CLASS","SIMPLE_ITEM_TYPE","FIELD_ITEM_CLASS","renderFieldItem","renderButtonItem","renderEmptyItem","convertToRenderFieldItemOptions","FORM_EDITOR_BY_DEFAULT","LAYOUT_MANAGER_FIRST_ROW_CLASS","LAYOUT_MANAGER_LAST_ROW_CLASS","LAYOUT_MANAGER_FIRST_COL_CLASS","LAYOUT_MANAGER_LAST_COL_CLASS","LayoutManager","inherit","_getDefaultOptions","callBase","layoutData","readOnly","colCount","colCountByScreen","labelLocation","onFieldDataChanged","onEditorEnterKey","customizeItem","alignItemLabels","minColWidth","showRequiredMark","screenByWidth","showOptionalMark","requiredMark","labelMode","optionalMark","format","requiredMessage","getFormatter","_setOptionsByReference","_optionsByReference","validationGroup","_init","option","_itemWatchers","_itemsRunTimeInfo","_updateReferencedOptions","_initDataAndItems","_dispose","_cleanItemWatchers","initialData","_syncDataWithItems","_updateItems","userItems","forEach","item","dataField","_getDataByField","value","editorOptions","_updateFieldValue","_isCheckboxUndefinedStateEnabled","_ref","allowIndeterminateState","editorType","nameParts","split","propertyName","pop","join","newValue","isWrapped","isWritableWrapped","_triggerOnFieldDataChanged","args","_createActionByOption","that","isUserItemsExist","items","_generateItemsByData","processedItems","index","_isAcceptableItem","_processItem","unwrap","visible","push","length","_updateItemWatchers","_setItems","_sortItems","dispose","watch","_getWatch","repaint","skipImmediate","result","itemField","itemData","itemType","_getEditorTypeByDataType","_item$allowIndetermin","dataType","_items","_sortIndexes","sort","itemA","itemB","indexA","visibleIndex","indexB","_initMarkup","clear","$element","addClass","_renderResponsiveBox","templatesInfo","_getColCount","$container","appendTo","_prepareItemsWithMerging","layoutItems","_generateLayoutItems","_responsiveBox","_createComponent","_getResponsiveBoxConfig","_renderTemplates","_itemStateChangedHandler","e","_refresh","itemsWithLabelTemplateCount","_ref2","_item$label","label","template","info","_renderButtonItem","_renderFieldItem","xsColCount","xs","onItemStateChanged","bind","onLayoutChanged","isSingleColumnMode","toggleClass","onContentReady","component","itemTemplate","itemElement","location","$itemElement","itemRenderedCountInPreviousRows","row","col","itemCssClassList","cssClass","isLastColumn","colspan","rowsCount","_getRowsCount","isLastRow","$parent","rootElementCssClassList","cols","_generateRatio","rows","dataSource","singleColumnScreen","screenFactor","getTargetScreenFactor","_cashedColCount","_getMaxColCount","width","itemsCount","maxColCount","Math","floor","isCachedColCountObsolete","slice","itemsMergedByCol","j","i","colSpan","_getColByIndex","merged","concat","generatedItem","parseInt","disabled","rowSpan","rowspan","_renderEmptyItem","_ref3","$rootElement","buttonInstance","createComponentCallback","add","widgetInstance","guid","$itemContainer","_ref4","_item$label2","_this$option","editorValue","canAssignUndefinedValueToEditor","name","formOrLayoutManager","_getFormOrThis","$fieldEditorContainer","formLabelLocation","requiredMessageTemplate","editorValidationBoundary","editorStylingMode","showColonAfterLabel","managerLabelLocation","_getTemplate","labelTemplate","itemId","getItemID","managerMarkOptions","_getMarkOptions","onLabelTemplateRendered","_incTemplateRenderedCallCount","_shouldAlignLabelsOnTemplateRendered","_alignLabels","_bindDataField","_this$_labelTemplateR","_labelTemplateRenderedCallCount","totalItemsWithLabelTemplate","editorInstance","formOrThis","on","_createWatcher","linkEditorToDataField","fieldValue","NAME","array1","array2","Array","isArray","deep","_watch","formInstance","$editor","readOnlyState","instance","count","isAutoSize","ratio","baseSize","ceil","newLayoutData","Object","getOwnPropertyNames","property","_resetWidget","_disableEditorValueChangedHandler","reset","_optionChanged","fullName","search","_cashedRequiredConfig","_invalidate","_","itemRunTimeInfo","valueGetter","dataValue","_resetColCount","_setOptionWithoutOptionChange","isValueReferenceType","previousValue","_dimensionChanged","_eventsStrategy","fireEvent","updateData","data","getEditor","field","findWidgetInstanceByDataField","findWidgetInstanceByName","responsiveBox","getItemsRunTimeInfo"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isFunction,\r\n    isObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ResponsiveBox from \"../responsive_box\";\r\nimport {\r\n    LAYOUT_MANAGER_ONE_COLUMN,\r\n    FORM_LAYOUT_MANAGER_CLASS,\r\n    SINGLE_COLUMN_ITEM_CONTENT,\r\n    ROOT_SIMPLE_ITEM_CLASS,\r\n    SIMPLE_ITEM_TYPE,\r\n    FIELD_ITEM_CLASS\r\n} from \"./constants\";\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../date_box\";\r\nimport \"../button\";\r\nimport {\r\n    renderFieldItem\r\n} from \"./components/field_item\";\r\nimport {\r\n    renderButtonItem\r\n} from \"./components/button_item\";\r\nimport {\r\n    renderEmptyItem\r\n} from \"./components/empty_item\";\r\nimport {\r\n    convertToRenderFieldItemOptions\r\n} from \"./ui.form.layout_manager.utils\";\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\r\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\r\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\r\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\r\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            labelMode: \"outside\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._updateReferencedOptions(layoutData);\r\n        this._initDataAndItems(layoutData)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var userItems = this.option(\"items\");\r\n        if (isDefined(userItems)) {\r\n            userItems.forEach(item => {\r\n                if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\r\n                    var value;\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    if (isDefined(value) || item.dataField in layoutData) {\r\n                        this._updateFieldValue(item.dataField, value)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _isCheckboxUndefinedStateEnabled: function(_ref) {\r\n        var {\r\n            allowIndeterminateState: allowIndeterminateState,\r\n            editorType: editorType,\r\n            dataField: dataField\r\n        } = _ref;\r\n        if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\r\n            var nameParts = [\"layoutData\", ...dataField.split(\".\")];\r\n            var propertyName = nameParts.pop();\r\n            var layoutData = this.option(nameParts.join(\".\"));\r\n            return layoutData && propertyName in layoutData\r\n        }\r\n        return false\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var newValue = value;\r\n        if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\r\n            newValue = isFunction(newValue) ? newValue() : newValue;\r\n            layoutData[dataField](newValue)\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var that = this;\r\n        var userItems = this.option(\"items\");\r\n        var isUserItemsExist = isDefined(userItems);\r\n        var customizeItem = that.option(\"customizeItem\");\r\n        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (isDefined(items)) {\r\n            var processedItems = [];\r\n            each(items, (function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            }));\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._setItems(processedItems);\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach((function(dispose) {\r\n            dispose()\r\n        }));\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        items.forEach((function(item) {\r\n            if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\r\n                that._itemWatchers.push(watch((function() {\r\n                    return variableWrapper.unwrap(item.visible)\r\n                }), (function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }), {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (isDefined(layoutData)) {\r\n            each(layoutData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item;\r\n        var itemData = this._getDataByField(itemField);\r\n        return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === typeof item && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!isDefined(item.editorType) && isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType) {\r\n            var _item$allowIndetermin;\r\n            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort((function(itemA, itemB) {\r\n            var indexA = itemA.visibleIndex;\r\n            var indexB = itemB.visibleIndex;\r\n            var result;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else if (indexA < indexB) {\r\n                result = -1\r\n            } else {\r\n                result = 0\r\n            }\r\n            return result\r\n        }))\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var templatesInfo = [];\r\n        if (this._items && this._items.length) {\r\n            var colCount = this._getColCount();\r\n            var $container = $(\"<div>\").appendTo(this.$element());\r\n            this._prepareItemsWithMerging(colCount);\r\n            var layoutItems = this._generateLayoutItems();\r\n            this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!hasWindow()) {\r\n                this._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        var itemsWithLabelTemplateCount = 0;\r\n        templatesInfo.forEach(_ref2 => {\r\n            var _item$label;\r\n            var {\r\n                item: item\r\n            } = _ref2;\r\n            if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {\r\n                itemsWithLabelTemplateCount++\r\n            }\r\n        });\r\n        each(templatesInfo, (function(index, info) {\r\n            switch (info.itemType) {\r\n                case \"empty\":\r\n                    renderEmptyItem(info);\r\n                    break;\r\n                case \"button\":\r\n                    that._renderButtonItem(info);\r\n                    break;\r\n                default:\r\n                    that._renderFieldItem(info, itemsWithLabelTemplateCount)\r\n            }\r\n        }))\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this;\r\n        var colCountByScreen = that.option(\"colCountByScreen\");\r\n        var xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            onLayoutChanged: function() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\");\r\n                var isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement);\r\n                var itemRenderedCountInPreviousRows = e.location.row * colCount;\r\n                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\r\n                if (!item) {\r\n                    return\r\n                }\r\n                var itemCssClassList = [item.cssClass];\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\r\n                    $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS)\r\n                }\r\n                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\r\n                var rowsCount = that._getRowsCount();\r\n                var isLastRow = e.location.row === rowsCount - 1;\r\n                if (isLastColumn) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n                if (isLastRow) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS)\r\n                }\r\n                if (\"empty\" !== item.itemType) {\r\n                    itemCssClassList.push(FIELD_ITEM_CLASS);\r\n                    itemCssClassList.push(that.option(\"cssItemClass\"));\r\n                    if (isDefined(item.col)) {\r\n                        itemCssClassList.push(\"dx-col-\" + item.col)\r\n                    }\r\n                }\r\n                templatesInfo.push({\r\n                    itemType: item.itemType,\r\n                    item: item,\r\n                    $parent: $itemElement,\r\n                    rootElementCssClassList: itemCssClassList\r\n                })\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\");\r\n        var colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = this.option(\"form\").getTargetScreenFactor();\r\n            if (!screenFactor) {\r\n                screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n            }\r\n            colCount = colCountByScreen[screenFactor] || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\");\r\n        var width = getWidth(this.$element());\r\n        var itemsCount = this._items.length;\r\n        var maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var items = this._items.slice(0);\r\n        var item;\r\n        var itemsMergedByCol;\r\n        var result = [];\r\n        var j;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._setItems(result)\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _setItems: function(items) {\r\n        this._items = items;\r\n        this._cashedColCount = null\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var items = this._items;\r\n        var colCount = this._getColCount();\r\n        var result = [];\r\n        var item;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (isDefined(item.disabled)) {\r\n                    generatedItem.disabled = item.disabled\r\n                }\r\n                if (isDefined(item.visible)) {\r\n                    generatedItem.visible = item.visible\r\n                }\r\n                if (isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        renderEmptyItem({\r\n            $container: $container\r\n        })\r\n    },\r\n    _renderButtonItem: function(_ref3) {\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref3;\r\n        var {\r\n            $rootElement: $rootElement,\r\n            buttonInstance: buttonInstance\r\n        } = renderButtonItem({\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            createComponentCallback: this._createComponent.bind(this)\r\n        });\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: buttonInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _renderFieldItem: function(_ref4, itemsWithLabelTemplateCount) {\r\n        var _item$label2, _this$option;\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref4;\r\n        var editorValue = this._getDataByField(item.dataField);\r\n        var canAssignUndefinedValueToEditor = false;\r\n        if (void 0 === editorValue) {\r\n            var {\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            } = item;\r\n            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            })\r\n        }\r\n        var name = item.dataField || item.name;\r\n        var formOrLayoutManager = this._getFormOrThis();\r\n        var {\r\n            $fieldEditorContainer: $fieldEditorContainer,\r\n            widgetInstance: widgetInstance,\r\n            $rootElement: $rootElement\r\n        } = renderFieldItem(convertToRenderFieldItemOptions({\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            item: item,\r\n            name: name,\r\n            editorValue: editorValue,\r\n            canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\r\n            formOrLayoutManager: this._getFormOrThis(),\r\n            createComponentCallback: this._createComponent.bind(this),\r\n            formLabelLocation: this.option(\"labelLocation\"),\r\n            requiredMessageTemplate: this.option(\"requiredMessage\"),\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            editorValidationBoundary: this.option(\"validationBoundary\"),\r\n            editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\r\n            showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n            managerLabelLocation: this.option(\"labelLocation\"),\r\n            template: item.template ? this._getTemplate(item.template) : null,\r\n            labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,\r\n            itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\r\n            managerMarkOptions: this._getMarkOptions(),\r\n            labelMode: this.option(\"labelMode\"),\r\n            onLabelTemplateRendered: () => {\r\n                this._incTemplateRenderedCallCount();\r\n                if (this._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {\r\n                    formOrLayoutManager._alignLabels(this, this.isSingleColumnMode(formOrLayoutManager))\r\n                }\r\n            }\r\n        }));\r\n        null === (_this$option = this.option(\"onFieldItemRendered\")) || void 0 === _this$option ? void 0 : _this$option();\r\n        if (widgetInstance && item.dataField) {\r\n            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer)\r\n        }\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: widgetInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _incTemplateRenderedCallCount() {\r\n        var _this$_labelTemplateR;\r\n        this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1\r\n    },\r\n    _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {\r\n        return formOrLayoutManager.option(\"templatesRenderAsynchronously\") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate\r\n    },\r\n    _getMarkOptions: function() {\r\n        return {\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            optionalMark: this.option(\"optionalMark\")\r\n        }\r\n    },\r\n    _getFormOrThis: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, dataField, editorType, $container) {\r\n        var formOrThis = this._getFormOrThis();\r\n        editorInstance.on(\"enterKey\", (function(args) {\r\n            formOrThis._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: dataField\r\n            }))\r\n        }));\r\n        this._createWatcher(editorInstance, $container, dataField);\r\n        this.linkEditorToDataField(editorInstance, dataField, editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, dataField) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        if (!isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch((function() {\r\n            return that._getDataByField(dataField)\r\n        }), (function() {\r\n            var fieldValue = that._getDataByField(dataField);\r\n            if (\"dxTagBox\" === editorInstance.NAME) {\r\n                var editorValue = editorInstance.option(\"value\");\r\n                if (fieldValue !== editorValue && function(array1, array2) {\r\n                        if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {\r\n                            return false\r\n                        }\r\n                        for (var i = 0; i < array1.length; i++) {\r\n                            if (array1[i] !== array2[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                        return true\r\n                    }(fieldValue, editorValue)) {\r\n                    return\r\n                }\r\n            }\r\n            editorInstance.option(\"value\", fieldValue)\r\n        }), {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var readOnlyState = this.option(\"readOnly\");\r\n        var instance = this.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        this.on(\"optionChanged\", (function(args) {\r\n            if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        }));\r\n        return instance\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var result = [];\r\n        var ratio;\r\n        var i;\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _updateReferencedOptions: function(newLayoutData) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        if (isObject(layoutData)) {\r\n            Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property])\r\n        }\r\n        if (isObject(newLayoutData)) {\r\n            Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true)\r\n        }\r\n    },\r\n    _resetWidget(instance) {\r\n        this._disableEditorValueChangedHandler = true;\r\n        instance.reset();\r\n        this._disableEditorValueChangedHandler = false;\r\n        instance.option(\"isValid\", true)\r\n    },\r\n    _optionChanged(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                this._updateReferencedOptions(args.value);\r\n                if (this.option(\"items\")) {\r\n                    if (!isEmptyObject(args.value)) {\r\n                        this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\r\n                            if (isDefined(itemRunTimeInfo.item)) {\r\n                                var dataField = itemRunTimeInfo.item.dataField;\r\n                                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                                    var valueGetter = compileGetter(dataField);\r\n                                    var dataValue = valueGetter(args.value);\r\n                                    var {\r\n                                        allowIndeterminateState: allowIndeterminateState,\r\n                                        editorType: editorType\r\n                                    } = itemRunTimeInfo.item;\r\n                                    if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\r\n                                            allowIndeterminateState: allowIndeterminateState,\r\n                                            editorType: editorType,\r\n                                            dataField: dataField\r\n                                        })) {\r\n                                        itemRunTimeInfo.widgetInstance.option(\"value\", dataValue)\r\n                                    } else {\r\n                                        this._resetWidget(itemRunTimeInfo.widgetInstance)\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"labelMode\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n            case \"colCountByScreen\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField(editorInstance, dataField) {\r\n        this.on(\"optionChanged\", args => {\r\n            if (args.fullName === \"layoutData.\".concat(dataField)) {\r\n                editorInstance._setOptionWithoutOptionChange(\"value\", args.value)\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", args => {\r\n            var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\r\n            if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\r\n                this._updateFieldValue(dataField, args.value)\r\n            }\r\n        })\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this._eventsStrategy.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (isObject(data)) {\r\n            each(data, (function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            }))\r\n        } else if (\"string\" === typeof data) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    },\r\n    getItemsRunTimeInfo: function() {\r\n        return this._itemsRunTimeInfo\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nexport default LayoutManager;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}