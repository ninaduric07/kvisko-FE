{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { name as wheelEventName } from \"../../events/core/wheel\";\nimport messageLocalization from \"../../localization/message\";\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport browser from \"../../core/utils/browser\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { move } from \"../../animation/translator\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nvar CONTENT_CLASS = \"content\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\nvar LAST_CELL_CLASS = \"dx-last-cell\";\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\nvar COMMAND_TRANSPARENT = \"transparent\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar getTransparentColumnIndex = function (fixedColumns) {\n  var transparentColumnIndex = -1;\n  each(fixedColumns, function (index, column) {\n    if (column.command === COMMAND_TRANSPARENT) {\n      transparentColumnIndex = index;\n      return false;\n    }\n  });\n  return transparentColumnIndex;\n};\nvar normalizeColumnWidths = function (fixedColumns, widths, fixedWidths) {\n  var fixedColumnIndex = 0;\n  if (fixedColumns && widths && fixedWidths) {\n    for (var i = 0; i < fixedColumns.length; i++) {\n      if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\n        fixedColumnIndex += fixedColumns[i].colspan;\n      } else {\n        if (widths[fixedColumnIndex] < fixedWidths[i]) {\n          widths[fixedColumnIndex] = fixedWidths[i];\n        }\n        fixedColumnIndex++;\n      }\n    }\n  }\n  return widths;\n};\nvar baseFixedColumns = {\n  init: function () {\n    this.callBase();\n    this._isFixedTableRendering = false;\n    this._isFixedColumns = false;\n  },\n  _createCol: function (column) {\n    return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)));\n  },\n  _correctColumnIndicesForFixedColumns: function (fixedColumns, change) {\n    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n    var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\n    var columnIndices = change && change.columnIndices;\n    if (columnIndices) {\n      change.columnIndices = columnIndices.map(function (columnIndices) {\n        if (columnIndices) {\n          return columnIndices.map(function (columnIndex) {\n            if (columnIndex < transparentColumnIndex) {\n              return columnIndex;\n            } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\n              return columnIndex - transparentColspan + 1;\n            }\n            return -1;\n          }).filter(function (columnIndex) {\n            return columnIndex >= 0;\n          });\n        }\n      });\n    }\n  },\n  _partialUpdateFixedTable(fixedColumns) {\n    var fixedTableElement = this._fixedTableElement;\n    var $rows = this._getRowElementsCore(fixedTableElement);\n    var $colgroup = fixedTableElement.children(\"colgroup\");\n    $colgroup.replaceWith(this._createColGroup(fixedColumns));\n    for (var i = 0; i < $rows.length; i++) {\n      this._partialUpdateFixedRow($($rows[i]), fixedColumns);\n    }\n  },\n  _partialUpdateFixedRow($row, fixedColumns) {\n    var cellElements = $row.get(0).childNodes;\n    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n    var transparentColumn = fixedColumns[transparentColumnIndex];\n    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n    var groupCellOptions;\n    var colIndex = columnIndexOffset + 1;\n    var colspan = transparentColumn.colspan;\n    if ($row.hasClass(DETAIL_ROW_CLASS)) {\n      var _this$_columnsControl;\n      cellElements[0].setAttribute(\"colspan\", null === (_this$_columnsControl = this._columnsController.getVisibleColumns()) || void 0 === _this$_columnsControl ? void 0 : _this$_columnsControl.length);\n      return;\n    }\n    if ($row.hasClass(GROUP_ROW_CLASS)) {\n      groupCellOptions = this._getGroupCellOptions({\n        row: $row.data(\"options\"),\n        columns: this._columnsController.getVisibleColumns()\n      });\n      colspan = groupCellOptions.colspan - Math.max(0, cellElements.length - (groupCellOptions.columnIndex + 2));\n    }\n    for (var j = 0; j < cellElements.length; j++) {\n      var needUpdateColspan = groupCellOptions ? j === groupCellOptions.columnIndex + 1 : j === transparentColumnIndex;\n      cellElements[j].setAttribute(\"aria-colindex\", colIndex);\n      if (needUpdateColspan) {\n        cellElements[j].setAttribute(\"colspan\", colspan);\n        colIndex += colspan;\n      } else {\n        colIndex++;\n      }\n    }\n  },\n  _renderTable: function (options) {\n    var $fixedTable;\n    var fixedColumns = this.getFixedColumns();\n    this._isFixedColumns = !!fixedColumns.length;\n    var $table = this.callBase(options);\n    if (this._isFixedColumns) {\n      var change = null === options || void 0 === options ? void 0 : options.change;\n      this._isFixedTableRendering = true;\n      if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\n        this._partialUpdateFixedTable(fixedColumns);\n        this._isFixedTableRendering = false;\n      } else {\n        var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\n        this._correctColumnIndicesForFixedColumns(fixedColumns, change);\n        $fixedTable = this._createTable(fixedColumns);\n        this._renderRows($fixedTable, extend({}, options, {\n          columns: fixedColumns\n        }));\n        this._updateContent($fixedTable, change, true);\n        if (columnIndices) {\n          change.columnIndices = columnIndices;\n        }\n        this._isFixedTableRendering = false;\n      }\n    } else {\n      this._fixedTableElement && this._fixedTableElement.parent().remove();\n      this._fixedTableElement = null;\n    }\n    return $table;\n  },\n  _renderRow: function ($table, options) {\n    var fixedCorrection;\n    var cells = options.row.cells;\n    this.callBase.apply(this, arguments);\n    if (this._isFixedTableRendering && cells && cells.length) {\n      fixedCorrection = 0;\n      var fixedCells = options.row.cells || [];\n      cells = cells.slice();\n      options.row.cells = cells;\n      for (var i = 0; i < fixedCells.length; i++) {\n        if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\n          fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\n          continue;\n        }\n        cells[i + fixedCorrection] = fixedCells[i];\n      }\n    }\n  },\n  _createCell: function (options) {\n    var that = this;\n    var column = options.column;\n    var columnCommand = column && column.command;\n    var rowType = options.rowType;\n    var $cell = that.callBase.apply(that, arguments);\n    var fixedColumns;\n    var prevFixedColumn;\n    var transparentColumnIndex;\n    if (that._isFixedTableRendering || \"filter\" === rowType) {\n      fixedColumns = that.getFixedColumns();\n      transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n      prevFixedColumn = fixedColumns[transparentColumnIndex - 1];\n    }\n    if (that._isFixedTableRendering) {\n      if (columnCommand === COMMAND_TRANSPARENT) {\n        $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\n        if (\"freeSpace\" !== rowType) {\n          gridCoreUtils.setEmptyText($cell);\n        }\n      }\n    } else if (\"filter\" === rowType) {\n      $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex);\n    }\n    var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\n    var isSelectAllCell = \"multiple\" === that.option(\"selection.mode\") && 0 === options.columnIndex && \"header\" === options.rowType;\n    if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle && !isSelectAllCell) {\n      $cell.addClass(FIXED_COL_CLASS);\n    }\n    return $cell;\n  },\n  _wrapTableInScrollContainer: function ($table, isFixedTableRendering) {\n    var $scrollContainer = this.callBase.apply(this, arguments);\n    if (this._isFixedTableRendering || isFixedTableRendering) {\n      $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n    }\n    return $scrollContainer;\n  },\n  _renderCellContent: function ($cell, options) {\n    var isEmptyCell;\n    var column = options.column;\n    var isFixedTableRendering = this._isFixedTableRendering;\n    var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\n    if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\n      $cell.css(\"pointerEvents\", \"none\");\n    }\n    if (!isFixedTableRendering && this._isFixedColumns) {\n      isEmptyCell = column.fixed || column.command && false !== column.fixed;\n      if (isGroupCell) {\n        isEmptyCell = false;\n        if (options.row.summaryCells && options.row.summaryCells.length) {\n          var columns = this._columnsController.getVisibleColumns();\n          var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\n            columns: columns,\n            row: options.row,\n            isFixed: true\n          }) : 0;\n          if (alignByFixedColumnCellCount > 0) {\n            var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\n            isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex;\n          }\n        }\n      }\n      if (isEmptyCell) {\n        if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\n          $cell.html(\"&nbsp;\").addClass(column.cssClass);\n          return;\n        } else {\n          $cell.addClass(\"dx-hidden-cell\");\n        }\n      }\n    }\n    if (column.command !== COMMAND_TRANSPARENT) {\n      this.callBase.apply(this, arguments);\n    }\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var cellElements = this.callBase.apply(this, arguments);\n    var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\n    var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\n    if (this._fixedTableElement && cellElements) {\n      var fixedColumns = this.getFixedColumns(headerRowIndex);\n      var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\n      each(fixedCellElements, (columnIndex, cell) => {\n        if (isGroupRow) {\n          if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\n            cellElements[columnIndex] = cell;\n          }\n        } else {\n          var fixedColumn = fixedColumns[columnIndex];\n          if (fixedColumn) {\n            if (fixedColumn.command === COMMAND_TRANSPARENT) {\n              if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\n                cellElements[columnIndex] = cell || cellElements[columnIndex];\n              }\n            } else {\n              var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\n              cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex];\n            }\n          }\n        }\n      });\n    }\n    return cellElements;\n  },\n  getColumnWidths: function () {\n    var result = this.callBase();\n    var fixedColumns = this.getFixedColumns();\n    var fixedWidths = this._fixedTableElement && result.length ? this.callBase(this._fixedTableElement) : void 0;\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  },\n  getTableElement: function (isFixedTableRendering) {\n    isFixedTableRendering = this._isFixedTableRendering || isFixedTableRendering;\n    var tableElement = isFixedTableRendering ? this._fixedTableElement : this.callBase();\n    return tableElement;\n  },\n  setTableElement: function (tableElement, isFixedTableRendering) {\n    if (this._isFixedTableRendering || isFixedTableRendering) {\n      this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS);\n    } else {\n      this.callBase(tableElement);\n    }\n  },\n  getColumns: function (rowIndex, $tableElement) {\n    $tableElement = $tableElement || this.getTableElement();\n    if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\n      return this.getFixedColumns(rowIndex);\n    }\n    return this.callBase(rowIndex, $tableElement);\n  },\n  getRowIndex: function ($row) {\n    var $fixedTable = this._fixedTableElement;\n    if ($fixedTable && $fixedTable.find($row).length) {\n      return this._getRowElements($fixedTable).index($row);\n    }\n    return this.callBase($row);\n  },\n  getTableElements: function () {\n    var result = this.callBase.apply(this, arguments);\n    if (this._fixedTableElement) {\n      result = $([result.get(0), this._fixedTableElement.get(0)]);\n    }\n    return result;\n  },\n  getFixedColumns: function (rowIndex) {\n    return this._columnsController.getFixedColumns(rowIndex);\n  },\n  getFixedColumnsOffset: function () {\n    var offset = {\n      left: 0,\n      right: 0\n    };\n    var $transparentColumn;\n    if (this._fixedTableElement) {\n      $transparentColumn = this.getTransparentColumnElement();\n      var positionTransparentColumn = $transparentColumn.position();\n      offset = {\n        left: positionTransparentColumn.left,\n        right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\n      };\n    }\n    return offset;\n  },\n  getTransparentColumnElement: function () {\n    return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first();\n  },\n  getFixedTableElement: function () {\n    return this._fixedTableElement;\n  },\n  isFixedColumns: function () {\n    return this._isFixedColumns;\n  },\n  _resizeCore: function () {\n    this.callBase();\n    this.synchronizeRows();\n  },\n  setColumnWidths: function (options) {\n    var columns;\n    var visibleColumns = this._columnsController.getVisibleColumns();\n    var widths = options.widths;\n    var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\n    var optionNames = options.optionNames;\n    var isColumnWidthChanged = optionNames && optionNames.width;\n    var useVisibleColumns = false;\n    this.callBase.apply(this, arguments);\n    if (this._fixedTableElement) {\n      var hasAutoWidth = widths && widths.some(function (width) {\n        return \"auto\" === width;\n      });\n      useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n      this.callBase(extend({}, options, {\n        $tableElement: this._fixedTableElement,\n        columns: columns,\n        fixed: true\n      }));\n    }\n    if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\n      this.synchronizeRows();\n    }\n  },\n  _createColGroup: function (columns) {\n    if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n      var useVisibleColumns = visibleColumns.filter(function (column) {\n        return !column.width;\n      }).length;\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n    }\n    return this.callBase(columns);\n  },\n  _getClientHeight: function (element) {\n    var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\n    return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight;\n  },\n  synchronizeRows: function () {\n    var rowHeights = [];\n    var fixedRowHeights = [];\n    var rowIndex;\n    var $rowElements;\n    var $fixedRowElements;\n    var $contentElement;\n    this.waitAsyncTemplates(true).done(() => {\n      if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\n        var heightTable = this._getClientHeight(this._tableElement.get(0));\n        var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\n        $rowElements = this._getRowElements(this._tableElement);\n        $fixedRowElements = this._getRowElements(this._fixedTableElement);\n        $contentElement = this._findContentElement();\n        if (heightTable !== heightFixedTable) {\n          $contentElement && $contentElement.css(\"height\", heightTable);\n          $rowElements.css(\"height\", \"\");\n          $fixedRowElements.css(\"height\", \"\");\n          for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n            rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\n            fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)));\n          }\n          for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n            var rowHeight = rowHeights[rowIndex];\n            var fixedRowHeight = fixedRowHeights[rowIndex];\n            if (rowHeight > fixedRowHeight) {\n              $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight);\n            } else if (rowHeight < fixedRowHeight) {\n              $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight);\n            }\n          }\n          $contentElement && $contentElement.css(\"height\", \"\");\n        }\n      }\n    });\n  },\n  setScrollerSpacing: function (width) {\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    this.callBase(width);\n    this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  }\n};\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\n  _getRowVisibleColumns: function (rowIndex) {\n    if (this._isFixedTableRendering) {\n      return this.getFixedColumns(rowIndex);\n    }\n    return this.callBase(rowIndex);\n  },\n  getContextMenuItems: function (options) {\n    var column = options.column;\n    var columnFixingOptions = this.option(\"columnFixing\");\n    var items = this.callBase(options);\n    if (options.row && \"header\" === options.row.rowType) {\n      if (true === columnFixingOptions.enabled && column && column.allowFixing) {\n        var onItemClick = params => {\n          switch (params.itemData.value) {\n            case \"none\":\n              this._columnsController.columnOption(column.index, \"fixed\", false);\n              break;\n            case \"left\":\n              this._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"left\"\n              });\n              break;\n            case \"right\":\n              this._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"right\"\n              });\n          }\n        };\n        items = items || [];\n        items.push({\n          text: columnFixingOptions.texts.fix,\n          beginGroup: true,\n          items: [{\n            text: columnFixingOptions.texts.leftPosition,\n            value: \"left\",\n            disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\n            onItemClick: onItemClick\n          }, {\n            text: columnFixingOptions.texts.rightPosition,\n            value: \"right\",\n            disabled: column.fixed && \"right\" === column.fixedPosition,\n            onItemClick: onItemClick\n          }]\n        }, {\n          text: columnFixingOptions.texts.unfix,\n          value: \"none\",\n          disabled: !column.fixed,\n          onItemClick: onItemClick\n        });\n      }\n    }\n    return items;\n  },\n  getFixedColumnElements: function (rowIndex) {\n    if (isDefined(rowIndex)) {\n      return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children();\n    }\n    var columnElements = this.getColumnElements();\n    var $transparentColumnElement = this.getTransparentColumnElement();\n    if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\n      var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\n      columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0));\n    }\n    return columnElements;\n  },\n  getColumnWidths: function () {\n    var fixedWidths;\n    var result = this.callBase();\n    var $fixedColumnElements = this.getFixedColumnElements();\n    var fixedColumns = this.getFixedColumns();\n    if (this._fixedTableElement) {\n      if ($fixedColumnElements && $fixedColumnElements.length) {\n        fixedWidths = this._getWidths($fixedColumnElements);\n      } else {\n        fixedWidths = this.callBase(this._fixedTableElement);\n      }\n    }\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  }\n});\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\n  _detachHoverEvents: function () {\n    this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\n    this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\");\n  },\n  _attachHoverEvents: function () {\n    var that = this;\n    var attachHoverEvent = function ($table) {\n      eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction(function (args) {\n        var event = args.event;\n        var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\n        var isHover = \"mouseover\" === event.type;\n        if (rowIndex >= 0) {\n          that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n          that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n        }\n      }));\n    };\n    if (that._fixedTableElement && that._tableElement) {\n      attachHoverEvent(that._fixedTableElement);\n      attachHoverEvent(that._tableElement);\n    }\n  },\n  _getScrollDelay: function () {\n    var _this$getController;\n    var hasResizeTimeout = null === (_this$getController = this.getController(\"resizing\")) || void 0 === _this$getController ? void 0 : _this$getController.hasResizeTimeout();\n    if (hasResizeTimeout) {\n      return this.option(\"scrolling.updateTimeout\");\n    }\n    return browser.mozilla ? 60 : 0;\n  },\n  _findContentElement: function (isFixedTableRendering) {\n    var $content;\n    var scrollTop;\n    var contentClass = this.addWidgetPrefix(CONTENT_CLASS);\n    var element = this.element();\n    isFixedTableRendering = this._isFixedTableRendering || isFixedTableRendering;\n    if (element && isFixedTableRendering) {\n      $content = element.children(\".\" + contentClass);\n      var scrollable = this.getScrollable();\n      if (!$content.length && scrollable) {\n        $content = $(\"<div>\").addClass(contentClass);\n        eventsEngine.on($content, \"scroll\", e => {\n          var target = e.target;\n          var scrollDelay = this._getScrollDelay();\n          clearTimeout(this._fixedScrollTimeout);\n          this._fixedScrollTimeout = setTimeout(() => {\n            scrollTop = $(target).scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop\n            });\n          }, scrollDelay);\n        });\n        eventsEngine.on($content, wheelEventName, e => {\n          var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\n          var shouldScroll = false;\n          if (scrollable && scrollable.$element().is($nearestScrollable)) {\n            shouldScroll = true;\n          } else {\n            var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\n            var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\n            shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar;\n          }\n          if (shouldScroll) {\n            scrollTop = scrollable.scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop - e.delta\n            });\n            var scrollableTop = scrollable.scrollTop() + scrollable.clientHeight();\n            var scrollableHeight = scrollable.scrollHeight() + this.getScrollbarWidth();\n            var isPreventDefault = scrollable.scrollTop() > 0 && scrollableTop < scrollableHeight;\n            if (isPreventDefault) {\n              return false;\n            }\n          }\n        });\n        $content.appendTo(element);\n      }\n      return $content;\n    }\n    return this.callBase();\n  },\n  _updateScrollable: function () {\n    this.callBase();\n    var scrollable = this.getScrollable();\n    if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\n      return;\n    }\n    var scrollTop = scrollable && scrollable.scrollOffset().top;\n    this._updateFixedTablePosition(scrollTop);\n  },\n  _renderContent: function (contentElement, tableElement, isFixedTableRendering) {\n    if (this._isFixedTableRendering || isFixedTableRendering) {\n      return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement);\n    }\n    return this.callBase(contentElement, tableElement);\n  },\n  _getGroupCellOptions: function (options) {\n    if (this._isFixedTableRendering) {\n      return this.callBase(extend({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    }\n    return this.callBase(options);\n  },\n  _renderGroupedCells: function ($row, options) {\n    return this.callBase($row, extend({}, options, {\n      columns: this._columnsController.getVisibleColumns()\n    }));\n  },\n  _renderGroupSummaryCells: function ($row, options) {\n    if (this._isFixedTableRendering) {\n      this.callBase($row, extend({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    } else {\n      this.callBase($row, options);\n    }\n  },\n  _hasAlignByColumnSummaryItems: function (columnIndex, options) {\n    var result = this.callBase.apply(this, arguments);\n    var column = options.columns[columnIndex];\n    if (options.isFixed) {\n      return column.fixed && (result || \"right\" === column.fixedPosition);\n    }\n    return result && (!this._isFixedColumns || !column.fixed);\n  },\n  _renderGroupSummaryCellsCore: function ($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\n    var alignByFixedColumnCellCount;\n    if (this._isFixedTableRendering) {\n      options.isFixed = true;\n      alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\n      options.isFixed = false;\n      var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\n      options = extend({}, options, {\n        columns: this.getFixedColumns()\n      });\n      var transparentColumnIndex = getTransparentColumnIndex(options.columns);\n      if (startColumnIndex < transparentColumnIndex) {\n        alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n        groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n      } else if (alignByColumnCellCount > 0) {\n        $groupCell.css(\"visibility\", \"hidden\");\n      }\n      alignByColumnCellCount = alignByFixedColumnCellCount;\n    }\n    this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount);\n  },\n  _getSummaryCellIndex: function (columnIndex, columns) {\n    if (this._isFixedTableRendering) {\n      var transparentColumnIndex = getTransparentColumnIndex(columns);\n      if (columnIndex > transparentColumnIndex) {\n        columnIndex += columns[transparentColumnIndex].colspan - 1;\n      }\n      return columnIndex;\n    }\n    return this.callBase.apply(this, arguments);\n  },\n  _renderCore: function (change) {\n    this._detachHoverEvents();\n    var deferred = this.callBase(change);\n    var isFixedColumns = this._isFixedColumns;\n    this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\n    if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\n      deferred.done(() => {\n        this._attachHoverEvents();\n      });\n    }\n    return deferred;\n  },\n  setRowsOpacity: function (columnIndex, value) {\n    this.callBase(columnIndex, value);\n    var $rows = this._getRowElements(this._fixedTableElement);\n    this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value);\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n    if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\n      args.value ? this._attachHoverEvents() : this._detachHoverEvents();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var $fixedTable = this._fixedTableElement;\n    var cellIndex = 0;\n    if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\n      var columns = this.getFixedColumns();\n      each(columns, function (index, column) {\n        if (index === $cell[0].cellIndex) {\n          return false;\n        }\n        if (column.colspan) {\n          cellIndex += column.colspan;\n          return;\n        }\n        cellIndex++;\n      });\n      return cellIndex;\n    }\n    return this.callBase.apply(this, arguments);\n  },\n  _updateFixedTablePosition: function (scrollTop, needFocus) {\n    if (this._fixedTableElement && this._tableElement) {\n      var $focusedElement;\n      var editorFactory = this.getController(\"editorFactory\");\n      this._fixedTableElement.parent().scrollTop(scrollTop);\n      if (needFocus && editorFactory) {\n        $focusedElement = editorFactory.focus();\n        $focusedElement && editorFactory.focus($focusedElement);\n      }\n    }\n  },\n  setScrollerSpacing: function (vWidth, hWidth) {\n    var styles = {\n      marginBottom: 0\n    };\n    var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n    if ($fixedContent.length && this._fixedTableElement) {\n      $fixedContent.css(styles);\n      this._fixedTableElement.css(styles);\n      styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\n      styles.marginBottom = hWidth;\n      var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\n      (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles);\n    }\n  },\n  _getElasticScrollTop: function (e) {\n    var elasticScrollTop = 0;\n    if (e.scrollOffset.top < 0) {\n      elasticScrollTop = -e.scrollOffset.top;\n    } else if (e.reachedBottom) {\n      var $scrollableContent = $(e.component.content());\n      var $scrollableContainer = $(e.component.container());\n      var maxScrollTop = Math.max($scrollableContent.get(0).clientHeight - $scrollableContainer.get(0).clientHeight, 0);\n      elasticScrollTop = maxScrollTop - e.scrollOffset.top;\n    }\n    return Math.floor(elasticScrollTop);\n  },\n  _applyElasticScrolling: function (e) {\n    if (this._fixedTableElement) {\n      var elasticScrollTop = this._getElasticScrollTop(e);\n      if (0 !== Math.ceil(elasticScrollTop)) {\n        move(this._fixedTableElement, {\n          top: elasticScrollTop\n        });\n      } else {\n        this._fixedTableElement.css(\"transform\", \"\");\n      }\n    }\n  },\n  _handleScroll: function (e) {\n    this._updateFixedTablePosition(e.scrollOffset.top, true);\n    this._applyElasticScrolling(e);\n    this.callBase(e);\n  },\n  _updateContentPosition: function (isRender) {\n    this.callBase.apply(this, arguments);\n    if (!isRender) {\n      this._updateFixedTablePosition(this._scrollTop);\n    }\n  },\n  _afterRowPrepared: function (e) {\n    if (this._isFixedTableRendering) {\n      return;\n    }\n    this.callBase(e);\n  },\n  _scrollToElement: function ($element) {\n    this.callBase($element, this.getFixedColumnsOffset());\n  },\n  dispose: function () {\n    this.callBase.apply(this, arguments);\n    clearTimeout(this._fixedScrollTimeout);\n  }\n});\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\nexport var columnFixingModule = {\n  defaultOptions: function () {\n    return {\n      columnFixing: {\n        enabled: false,\n        texts: {\n          fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\n          unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\n          leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\n          rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\n        }\n      }\n    };\n  },\n  extenders: {\n    views: {\n      columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\n      rowsView: RowsViewFixedColumnsExtender,\n      footerView: FooterViewFixedColumnsExtender\n    },\n    controllers: {\n      draggingHeader: {\n        _generatePointsByColumns: function (options) {\n          var visibleColumns = options.columns;\n          var targetDraggingPanel = options.targetDraggingPanel;\n          if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\n            if (options.sourceColumn.fixed) {\n              if (!options.rowIndex) {\n                options.columnElements = targetDraggingPanel.getFixedColumnElements(0);\n              }\n              options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\n              var pointsByColumns = this.callBase(options);\n              !function (columns, fixedColumns, pointsByColumns) {\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n                var correctIndex = columns.length - fixedColumns.length;\n                each(pointsByColumns, function (_, point) {\n                  if (point.index > transparentColumnIndex) {\n                    point.columnIndex += correctIndex;\n                    point.index += correctIndex;\n                  }\n                });\n                return pointsByColumns;\n              }(visibleColumns, options.columns, pointsByColumns);\n              return pointsByColumns;\n            }\n          }\n          return this.callBase(options);\n        },\n        _pointCreated: function (point, columns, location, sourceColumn) {\n          var result = this.callBase.apply(this, arguments);\n          var targetColumn = columns[point.columnIndex];\n          var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n          if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\n            var boundingRect = getBoundingRect($transparentColumn.get(0));\n            if (sourceColumn && sourceColumn.fixed) {\n              return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left;\n            } else {\n              if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\n                return true;\n              }\n              return point.x < boundingRect.left || point.x > boundingRect.right;\n            }\n          }\n          return result;\n        }\n      },\n      columnsResizer: {\n        _generatePointsByColumns: function () {\n          var that = this;\n          var columnsController = that._columnsController;\n          var columns = columnsController && that._columnsController.getVisibleColumns();\n          var fixedColumns = columnsController && that._columnsController.getFixedColumns();\n          var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n          var correctIndex = columns.length - fixedColumns.length;\n          var cells = that._columnHeadersView.getFixedColumnElements();\n          that.callBase();\n          if (cells && cells.length > 0) {\n            that._pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, function (point) {\n              if (point.index > transparentColumnIndex) {\n                point.columnIndex += correctIndex;\n                point.index += correctIndex;\n              }\n              return that._pointCreated(point, columns.length, columns);\n            });\n          }\n        },\n        _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n          var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n          if ($transparentColumn && $transparentColumn.length) {\n            var boundingRect = getBoundingRect($transparentColumn.get(0));\n            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\n              return this.callBase(this._pointsByFixedColumns, currentX, deltaX);\n            }\n          }\n          return this.callBase(pointsByColumns, currentX, deltaX);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["getOuterWidth","$","eventsEngine","name","wheelEventName","messageLocalization","gridCoreUtils","isDefined","extend","each","browser","getBoundingRect","move","Scrollable","CONTENT_CLASS","CONTENT_FIXED_CLASS","MASTER_DETAIL_CELL_CLASS","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","COMMAND_TRANSPARENT","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","getTransparentColumnIndex","fixedColumns","transparentColumnIndex","index","column","command","normalizeColumnWidths","widths","fixedWidths","fixedColumnIndex","i","length","colspan","baseFixedColumns","init","callBase","_isFixedTableRendering","_isFixedColumns","_createCol","toggleClass","fixed","_correctColumnIndicesForFixedColumns","change","transparentColspan","columnIndices","map","columnIndex","filter","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","$rows","_getRowElementsCore","$colgroup","children","replaceWith","_createColGroup","_partialUpdateFixedRow","$row","cellElements","get","childNodes","transparentColumn","columnIndexOffset","_columnsController","getColumnIndexOffset","groupCellOptions","colIndex","hasClass","_this$_columnsControl","setAttribute","getVisibleColumns","_getGroupCellOptions","row","data","columns","Math","max","j","needUpdateColspan","_renderTable","options","$fixedTable","getFixedColumns","$table","virtualColumnsScrolling","option","_createTable","_renderRows","_updateContent","parent","remove","_renderRow","fixedCorrection","cells","apply","arguments","fixedCells","slice","_createCell","that","columnCommand","rowType","$cell","prevFixedColumn","addClass","setEmptyText","isRowAltStyle","isAltRow","isSelectAllCell","mozilla","_wrapTableInScrollContainer","isFixedTableRendering","$scrollContainer","addWidgetPrefix","_renderCellContent","isEmptyCell","isGroupCell","groupIndex","groupCellTemplate","css","summaryCells","alignByFixedColumnCellCount","_getAlignByColumnCellCount","isFixed","type","html","cssClass","_getCellElementsCore","rowIndex","isGroupRow","headerRowIndex","fixedCellElements","_getRowElements","eq","cell","style","visibility","fixedColumn","getVisibleIndexByColumn","getColumnWidths","result","getTableElement","tableElement","setTableElement","getColumns","$tableElement","closest","getRowIndex","find","getTableElements","getFixedColumnsOffset","offset","left","right","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","position","element","first","getFixedTableElement","isFixedColumns","_resizeCore","synchronizeRows","setColumnWidths","visibleColumns","isWidthsSynchronized","visibleWidth","optionNames","isColumnWidthChanged","width","useVisibleColumns","hasAutoWidth","some","isScrollbarVisible","_getClientHeight","boundingClientRectElement","getBoundingClientRect","height","clientHeight","rowHeights","fixedRowHeights","$rowElements","$fixedRowElements","$contentElement","waitAsyncTemplates","done","_tableElement","heightTable","heightFixedTable","_findContentElement","push","rowHeight","fixedRowHeight","setScrollerSpacing","rtlEnabled","paddingLeft","paddingRight","ColumnHeadersViewFixedColumnsExtender","_getRowVisibleColumns","getContextMenuItems","columnFixingOptions","items","enabled","allowFixing","onItemClick","params","itemData","value","columnOption","fixedPosition","text","texts","fix","beginGroup","leftPosition","disabled","rightPosition","unfix","getFixedColumnElements","columnElements","getColumnElements","$transparentColumnElement","splice","colSpan","$fixedColumnElements","_getWidths","RowsViewFixedColumnsExtender","_detachHoverEvents","off","_attachHoverEvents","attachHoverEvent","on","createAction","args","event","target","isHover","_getScrollDelay","_this$getController","hasResizeTimeout","getController","$content","scrollTop","contentClass","scrollable","getScrollable","e","scrollDelay","clearTimeout","_fixedScrollTimeout","setTimeout","scrollTo","y","$nearestScrollable","shouldScroll","$element","is","nearestScrollableInstance","getInstance","nearestScrollableHasVerticalScrollbar","scrollHeight","delta","scrollableTop","scrollableHeight","getScrollbarWidth","isPreventDefault","appendTo","_updateScrollable","_disposed","scrollOffset","top","_updateFixedTablePosition","_renderContent","contentElement","empty","append","_renderGroupedCells","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_renderGroupSummaryCellsCore","$groupCell","groupCellColSpan","alignByColumnCellCount","startColumnIndex","_getSummaryCellIndex","_renderCore","deferred","setRowsOpacity","_setRowsOpacityCore","optionChanged","getCellIndex","cellIndex","needFocus","$focusedElement","editorFactory","focus","vWidth","hWidth","styles","marginBottom","$fixedContent","useNativeScrolling","_scrollable","_getElasticScrollTop","elasticScrollTop","reachedBottom","$scrollableContent","component","content","$scrollableContainer","container","maxScrollTop","floor","_applyElasticScrolling","ceil","_handleScroll","_updateContentPosition","isRender","_scrollTop","_afterRowPrepared","_scrollToElement","dispose","FooterViewFixedColumnsExtender","columnFixingModule","defaultOptions","columnFixing","format","extenders","views","columnHeadersView","rowsView","footerView","controllers","draggingHeader","_generatePointsByColumns","targetDraggingPanel","getName","sourceColumn","pointsByColumns","correctIndex","_","point","_pointCreated","location","targetColumn","_columnHeadersView","boundingRect","x","columnsResizer","columnsController","_pointsByFixedColumns","getPointsByColumns","_getTargetPoint","currentX","deltaX"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            this._partialUpdateFixedRow($($rows[i]), fixedColumns)\r\n        }\r\n    },\r\n    _partialUpdateFixedRow($row, fixedColumns) {\r\n        var cellElements = $row.get(0).childNodes;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var groupCellOptions;\r\n        var colIndex = columnIndexOffset + 1;\r\n        var colspan = transparentColumn.colspan;\r\n        if ($row.hasClass(DETAIL_ROW_CLASS)) {\r\n            var _this$_columnsControl;\r\n            cellElements[0].setAttribute(\"colspan\", null === (_this$_columnsControl = this._columnsController.getVisibleColumns()) || void 0 === _this$_columnsControl ? void 0 : _this$_columnsControl.length);\r\n            return\r\n        }\r\n        if ($row.hasClass(GROUP_ROW_CLASS)) {\r\n            groupCellOptions = this._getGroupCellOptions({\r\n                row: $row.data(\"options\"),\r\n                columns: this._columnsController.getVisibleColumns()\r\n            });\r\n            colspan = groupCellOptions.colspan - Math.max(0, cellElements.length - (groupCellOptions.columnIndex + 2))\r\n        }\r\n        for (var j = 0; j < cellElements.length; j++) {\r\n            var needUpdateColspan = groupCellOptions ? j === groupCellOptions.columnIndex + 1 : j === transparentColumnIndex;\r\n            cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n            if (needUpdateColspan) {\r\n                cellElements[j].setAttribute(\"colspan\", colspan);\r\n                colIndex += colspan\r\n            } else {\r\n                colIndex++\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns);\r\n                this._isFixedTableRendering = false\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change, true);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n                this._isFixedTableRendering = false\r\n            }\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        var isSelectAllCell = \"multiple\" === that.option(\"selection.mode\") && 0 === options.columnIndex && \"header\" === options.rowType;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle && !isSelectAllCell) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function($table, isFixedTableRendering) {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering || isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        var fixedWidths = this._fixedTableElement && result.length ? this.callBase(this._fixedTableElement) : void 0;\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function(isFixedTableRendering) {\r\n        isFixedTableRendering = this._isFixedTableRendering || isFixedTableRendering;\r\n        var tableElement = isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement, isFixedTableRendering) {\r\n        if (this._isFixedTableRendering || isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        this.waitAsyncTemplates(true).done(() => {\r\n            if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n                var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n                var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n                $rowElements = this._getRowElements(this._tableElement);\r\n                $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n                $contentElement = this._findContentElement();\r\n                if (heightTable !== heightFixedTable) {\r\n                    $contentElement && $contentElement.css(\"height\", heightTable);\r\n                    $rowElements.css(\"height\", \"\");\r\n                    $fixedRowElements.css(\"height\", \"\");\r\n                    for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                        rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                        fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                    }\r\n                    for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                        var rowHeight = rowHeights[rowIndex];\r\n                        var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                        if (rowHeight > fixedRowHeight) {\r\n                            $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                        } else if (rowHeight < fixedRowHeight) {\r\n                            $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                        }\r\n                    }\r\n                    $contentElement && $contentElement.css(\"height\", \"\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _getScrollDelay: function() {\r\n        var _this$getController;\r\n        var hasResizeTimeout = null === (_this$getController = this.getController(\"resizing\")) || void 0 === _this$getController ? void 0 : _this$getController.hasResizeTimeout();\r\n        if (hasResizeTimeout) {\r\n            return this.option(\"scrolling.updateTimeout\")\r\n        }\r\n        return browser.mozilla ? 60 : 0\r\n    },\r\n    _findContentElement: function(isFixedTableRendering) {\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = this.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = this.element();\r\n        isFixedTableRendering = this._isFixedTableRendering || isFixedTableRendering;\r\n        if (element && isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = this.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", e => {\r\n                    var target = e.target;\r\n                    var scrollDelay = this._getScrollDelay();\r\n                    clearTimeout(this._fixedScrollTimeout);\r\n                    this._fixedScrollTimeout = setTimeout(() => {\r\n                        scrollTop = $(target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }, scrollDelay)\r\n                });\r\n                eventsEngine.on($content, wheelEventName, e => {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        var scrollableTop = scrollable.scrollTop() + scrollable.clientHeight();\r\n                        var scrollableHeight = scrollable.scrollHeight() + this.getScrollbarWidth();\r\n                        var isPreventDefault = scrollable.scrollTop() > 0 && scrollableTop < scrollableHeight;\r\n                        if (isPreventDefault) {\r\n                            return false\r\n                        }\r\n                    }\r\n                });\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement, isFixedTableRendering) {\r\n        if (this._isFixedTableRendering || isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        var deferred = this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            deferred.done(() => {\r\n                this._attachHoverEvents()\r\n            })\r\n        }\r\n        return deferred\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var $scrollableContent = $(e.component.content());\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max($scrollableContent.get(0).clientHeight - $scrollableContainer.get(0).clientHeight, 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return Math.floor(elasticScrollTop)\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: {\r\n            draggingHeader: {\r\n                _generatePointsByColumns: function(options) {\r\n                    var visibleColumns = options.columns;\r\n                    var targetDraggingPanel = options.targetDraggingPanel;\r\n                    if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                        if (options.sourceColumn.fixed) {\r\n                            if (!options.rowIndex) {\r\n                                options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                            }\r\n                            options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                            var pointsByColumns = this.callBase(options);\r\n                            ! function(columns, fixedColumns, pointsByColumns) {\r\n                                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                                var correctIndex = columns.length - fixedColumns.length;\r\n                                each(pointsByColumns, (function(_, point) {\r\n                                    if (point.index > transparentColumnIndex) {\r\n                                        point.columnIndex += correctIndex;\r\n                                        point.index += correctIndex\r\n                                    }\r\n                                }));\r\n                                return pointsByColumns\r\n                            }(visibleColumns, options.columns, pointsByColumns);\r\n                            return pointsByColumns\r\n                        }\r\n                    }\r\n                    return this.callBase(options)\r\n                },\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var targetColumn = columns[point.columnIndex];\r\n                    var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                    if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                        var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                        if (sourceColumn && sourceColumn.fixed) {\r\n                            return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                        } else {\r\n                            if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                return true\r\n                            }\r\n                            return point.x < boundingRect.left || point.x > boundingRect.right\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _generatePointsByColumns: function() {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                    var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                    var correctIndex = columns.length - fixedColumns.length;\r\n                    var cells = that._columnHeadersView.getFixedColumnElements();\r\n                    that.callBase();\r\n                    if (cells && cells.length > 0) {\r\n                        that._pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                            if (point.index > transparentColumnIndex) {\r\n                                point.columnIndex += correctIndex;\r\n                                point.index += correctIndex\r\n                            }\r\n                            return that._pointCreated(point, columns.length, columns)\r\n                        }))\r\n                    }\r\n                },\r\n                _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                    var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                    if ($transparentColumn && $transparentColumn.length) {\r\n                        var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                        if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                            return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                        }\r\n                    }\r\n                    return this.callBase(pointsByColumns, currentX, deltaX)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}