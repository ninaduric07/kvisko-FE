{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/module_export.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nfunction prepareItems(items, emptyCell) {\n  const defaultSetter = value => !value ? 1 : value;\n  const resultItems = [];\n  const cols = (items[0] || []).reduce((sum, item) => sum + defaultSetter(item.colspan), 0);\n  const getItem = (items => {\n    let rowIndex = 0;\n    let cellIndex = 0;\n    return () => {\n      const row = items[rowIndex] || [];\n      const item = row[cellIndex++];\n      if (cellIndex >= row.length) {\n        rowIndex++;\n        cellIndex = 0;\n      }\n      if (item) {\n        item.colspan = defaultSetter(item.colspan);\n        item.rowspan = defaultSetter(item.rowspan);\n      }\n      return item;\n    };\n  })(items);\n  const addItem = (rowIndex, cellIndex, item) => {\n    const row = resultItems[rowIndex] = resultItems[rowIndex] || [];\n    row[cellIndex] = item;\n    if (item.colspan > 1 || item.rowspan > 1) {\n      const clone = (item => extend({}, item, emptyCell))(item);\n      for (let c = 1; c < item.colspan; c++) {\n        addItem(rowIndex, cellIndex + c, clone);\n      }\n      for (let r = 1; r < item.rowspan; r++) {\n        for (let c = 0; c < item.colspan; c++) {\n          addItem(rowIndex + r, cellIndex + c, clone);\n        }\n      }\n    }\n  };\n  let item = getItem();\n  let rowIndex = 0;\n  while (item) {\n    for (let cellIndex = 0; cellIndex < cols; cellIndex++) {\n      if (!item) {\n        break;\n      }\n      if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\n        continue;\n      }\n      addItem(rowIndex, cellIndex, item);\n      cellIndex += item.colspan - 1;\n      item = getItem();\n    }\n    rowIndex++;\n  }\n  return resultItems;\n}\nexport { prepareItems };","map":{"version":3,"names":["extend","prepareItems","items","emptyCell","defaultSetter","value","resultItems","cols","reduce","sum","item","colspan","getItem","rowIndex","cellIndex","row","length","rowspan","addItem","clone","c","r"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/__internal/grids/grid_core/module_export.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/module_export.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\n\r\nfunction prepareItems(items, emptyCell) {\r\n    const defaultSetter = value => !value ? 1 : value;\r\n    const resultItems = [];\r\n    const cols = (items[0] || []).reduce((sum, item) => sum + defaultSetter(item.colspan), 0);\r\n    const getItem = (items => {\r\n        let rowIndex = 0;\r\n        let cellIndex = 0;\r\n        return () => {\r\n            const row = items[rowIndex] || [];\r\n            const item = row[cellIndex++];\r\n            if (cellIndex >= row.length) {\r\n                rowIndex++;\r\n                cellIndex = 0\r\n            }\r\n            if (item) {\r\n                item.colspan = defaultSetter(item.colspan);\r\n                item.rowspan = defaultSetter(item.rowspan)\r\n            }\r\n            return item\r\n        }\r\n    })(items);\r\n    const addItem = (rowIndex, cellIndex, item) => {\r\n        const row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n        row[cellIndex] = item;\r\n        if (item.colspan > 1 || item.rowspan > 1) {\r\n            const clone = (item => extend({}, item, emptyCell))(item);\r\n            for (let c = 1; c < item.colspan; c++) {\r\n                addItem(rowIndex, cellIndex + c, clone)\r\n            }\r\n            for (let r = 1; r < item.rowspan; r++) {\r\n                for (let c = 0; c < item.colspan; c++) {\r\n                    addItem(rowIndex + r, cellIndex + c, clone)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    let item = getItem();\r\n    let rowIndex = 0;\r\n    while (item) {\r\n        for (let cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n            if (!item) {\r\n                break\r\n            }\r\n            if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                continue\r\n            }\r\n            addItem(rowIndex, cellIndex, item);\r\n            cellIndex += item.colspan - 1;\r\n            item = getItem()\r\n        }\r\n        rowIndex++\r\n    }\r\n    return resultItems\r\n}\r\nexport {\r\n    prepareItems\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}