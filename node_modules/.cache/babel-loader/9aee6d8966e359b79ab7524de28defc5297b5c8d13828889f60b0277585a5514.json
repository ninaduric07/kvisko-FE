{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getInnerHeight, getOuterHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { isNumeric } from \"../../core/utils/type\";\nvar WINDOW_HEIGHT_PERCENT = .9;\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\n  var $window = $(getWindow());\n  var {\n    top: elementOffset\n  } = $element.offset();\n  var actualOffset;\n  if (isNumeric(startLocation)) {\n    if (startLocation < elementOffset) {\n      return elementOffset - startLocation;\n    } else {\n      actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop();\n    }\n  } else {\n    var offsetTop = elementOffset - $window.scrollTop();\n    var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\n    actualOffset = Math.max(offsetTop, offsetBottom);\n  }\n  return actualOffset * WINDOW_HEIGHT_PERCENT;\n};","map":{"version":3,"names":["getInnerHeight","getOuterHeight","$","getWindow","isNumeric","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","$element","startLocation","$window","top","elementOffset","offset","actualOffset","scrollTop","offsetTop","offsetBottom","Math","max"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/ui/overlay/utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,cAAc,EACdC,cAAc,QACX,uBAAuB;AAC9B,OAAOC,CAAC,MAAM,qBAAqB;AACnC,SACIC,SAAS,QACN,yBAAyB;AAChC,SACIC,SAAS,QACN,uBAAuB;AAC9B,IAAIC,qBAAqB,GAAG,EAAE;AAC9B,OAAO,IAAIC,2BAA2B,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;EAClE,IAAIC,OAAO,GAAGP,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;EAC5B,IAAI;IACAO,GAAG,EAAEC;EACT,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC,CAAC;EACrB,IAAIC,YAAY;EAChB,IAAIT,SAAS,CAACI,aAAa,CAAC,EAAE;IAC1B,IAAIA,aAAa,GAAGG,aAAa,EAAE;MAC/B,OAAOA,aAAa,GAAGH,aAAa;IACxC,CAAC,MAAM;MACHK,YAAY,GAAGb,cAAc,CAACS,OAAO,CAAC,GAAGD,aAAa,GAAGC,OAAO,CAACK,SAAS,CAAC,CAAC;IAChF;EACJ,CAAC,MAAM;IACH,IAAIC,SAAS,GAAGJ,aAAa,GAAGF,OAAO,CAACK,SAAS,CAAC,CAAC;IACnD,IAAIE,YAAY,GAAGhB,cAAc,CAACS,OAAO,CAAC,GAAGM,SAAS,GAAGd,cAAc,CAACM,QAAQ,CAAC;IACjFM,YAAY,GAAGI,IAAI,CAACC,GAAG,CAACH,SAAS,EAAEC,YAAY,CAAC;EACpD;EACA,OAAOH,YAAY,GAAGR,qBAAqB;AAC/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}