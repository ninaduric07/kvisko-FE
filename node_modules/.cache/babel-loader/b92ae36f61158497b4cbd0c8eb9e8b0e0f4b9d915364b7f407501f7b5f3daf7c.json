{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport browser from \"../../core/utils/browser\";\nimport positionUtils from \"../../animation/position\";\nimport { each } from \"../../core/utils/iterator\";\nimport Class from \"../../core/class\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { VirtualDataLoader } from \"./ui.grid.core.virtual_data_loader\";\nimport { isDefined } from \"../../core/utils/type\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nvar SCROLLING_MODE_INFINITE = \"infinite\";\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\n  var $scrollElement;\n  var scrollableArray = [];\n  var scrollToArray = [];\n  var disposeArray = [];\n  $targetElement = $targetElement || $element;\n  function getElementOffset(scrollable) {\n    var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\n    var scrollableOffset = positionUtils.offset($scrollableElement);\n    if (!scrollableOffset) {\n      return $element.offset().top;\n    }\n    return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top);\n  }\n  var widgetScrollStrategy = {\n    on: function (scrollable, eventName, handler) {\n      scrollable.on(\"scroll\", handler);\n    },\n    off: function (scrollable, eventName, handler) {\n      scrollable.off(\"scroll\", handler);\n    }\n  };\n  function subscribeToScrollEvents($scrollElement) {\n    var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\n    var isElement = $scrollElement.get(0).nodeType === getWindow().Node.ELEMENT_NODE;\n    var scrollable = $scrollElement.data(\"dxScrollable\");\n    var eventsStrategy = widgetScrollStrategy;\n    if (!scrollable) {\n      scrollable = isDocument && $(getWindow()) || isElement && \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\n      eventsStrategy = eventsEngine;\n      if (!scrollable) {\n        return;\n      }\n    }\n    var handler = function (scrollable) {\n      return function () {\n        var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\n        scrollTop = scrollTop > 0 ? scrollTop : 0;\n        scrollChangedHandler(scrollTop);\n      };\n    }(scrollable);\n    eventsStrategy.on(scrollable, \"scroll\", handler);\n    scrollToArray.push(function (pos) {\n      var topOffset = getElementOffset(scrollable);\n      var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\n      if (pos - topOffset >= 0) {\n        scrollable[scrollMethod](pos + topOffset);\n      }\n    });\n    scrollableArray.push(scrollable);\n    disposeArray.push(function () {\n      eventsStrategy.off(scrollable, \"scroll\", handler);\n    });\n  }\n  var getScrollElementParent = $element => {\n    var _$element$get$parentN;\n    return $(null !== (_$element$get$parentN = $element.get(0).parentNode) && void 0 !== _$element$get$parentN ? _$element$get$parentN : $element.get(0).host);\n  };\n  for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = getScrollElementParent($scrollElement)) {\n    subscribeToScrollEvents($scrollElement);\n  }\n  return {\n    scrollTo: function (pos) {\n      each(scrollToArray, function (_, scrollTo) {\n        scrollTo(pos);\n      });\n    },\n    dispose: function () {\n      each(disposeArray, function (_, dispose) {\n        dispose();\n      });\n    }\n  };\n}\nexport var VirtualScrollController = Class.inherit(function () {\n  var members = {\n    ctor: function (component, dataOptions, isVirtual) {\n      this._dataOptions = dataOptions;\n      this.component = component;\n      this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\n      this._viewportItemSize = 20;\n      this._viewportItemIndex = 0;\n      this._position = 0;\n      this._isScrollingBack = false;\n      this._contentSize = 0;\n      this._itemSizes = {};\n      this._sizeRatio = 1;\n      this._isVirtual = isVirtual;\n      this.positionChanged = Callbacks();\n      this._dataLoader = new VirtualDataLoader(this, this._dataOptions);\n    },\n    getItemSizes: function () {\n      return this._itemSizes;\n    },\n    option: function () {\n      return this.component.option.apply(this.component, arguments);\n    },\n    isVirtual: function () {\n      return this._isVirtual;\n    },\n    virtualItemsCount: function () {\n      if (_isVirtualMode(this)) {\n        var dataOptions = this._dataOptions;\n        var totalItemsCount = dataOptions.totalItemsCount();\n        if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\n          var viewportParams = this.getViewportParams();\n          var loadedOffset = dataOptions.loadedOffset();\n          var loadedItemCount = dataOptions.loadedItemCount();\n          var skip = Math.max(viewportParams.skip, loadedOffset);\n          var take = Math.min(viewportParams.take, loadedItemCount);\n          var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\n          return {\n            begin: skip,\n            end: endItemsCount\n          };\n        }\n        return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments);\n      }\n    },\n    getScrollingTimeout: function () {\n      var renderAsync = this.option(\"scrolling.renderAsync\");\n      var scrollingTimeout = 0;\n      if (!isDefined(renderAsync)) {\n        scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\n        if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\n          scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0;\n        }\n      } else if (renderAsync) {\n        var _this$option;\n        scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0;\n      }\n      return scrollingTimeout;\n    },\n    setViewportPosition: function (position) {\n      var result = new Deferred();\n      var scrollingTimeout = this.getScrollingTimeout();\n      clearTimeout(this._scrollTimeoutID);\n      if (scrollingTimeout > 0) {\n        this._scrollTimeoutID = setTimeout(() => {\n          this._setViewportPositionCore(position);\n          result.resolve();\n        }, scrollingTimeout);\n      } else {\n        this._setViewportPositionCore(position);\n        result.resolve();\n      }\n      return result.promise();\n    },\n    getViewportPosition: function () {\n      return this._position;\n    },\n    getItemIndexByPosition: function (position, viewportItemIndex, height) {\n      var _position;\n      position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\n      var defaultItemSize = this.getItemSize();\n      var offset = 0;\n      var itemOffset = 0;\n      var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\n      for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\n        var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\n        var itemOffsetDiff = (position - offset) / defaultItemSize;\n        if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\n          itemOffset += itemOffsetDiff;\n          if (this._sizeRatio < 1 && isDefined(viewportItemIndex)) {\n            itemOffset = viewportItemIndex + height / this._viewportItemSize;\n          }\n          break;\n        } else {\n          itemOffsetDiff = itemOffsetWithSize - itemOffset;\n          offset += itemOffsetDiff * defaultItemSize;\n          itemOffset += itemOffsetDiff;\n        }\n        var itemSize = this._itemSizes[itemOffsetWithSize];\n        offset += itemSize;\n        itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize;\n      }\n      return Math.round(50 * itemOffset) / 50;\n    },\n    isScrollingBack: function () {\n      return this._isScrollingBack;\n    },\n    _setViewportPositionCore: function (position) {\n      var prevPosition = this._position || 0;\n      this._position = position;\n      if (prevPosition !== this._position) {\n        this._isScrollingBack = this._position < prevPosition;\n      }\n      var itemIndex = this.getItemIndexByPosition();\n      var result = this.setViewportItemIndex(itemIndex);\n      this.positionChanged.fire();\n      return result;\n    },\n    setContentItemSizes: function (sizes) {\n      var virtualItemsCount = this.virtualItemsCount();\n      this._contentSize = sizes.reduce((a, b) => a + b, 0);\n      if (virtualItemsCount) {\n        sizes.forEach((size, index) => {\n          this._itemSizes[virtualItemsCount.begin + index] = size;\n        });\n        var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\n        var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\n        if (virtualContentSize > contentHeightLimit) {\n          this._sizeRatio = contentHeightLimit / virtualContentSize;\n        } else {\n          this._sizeRatio = 1;\n        }\n      }\n    },\n    getItemSize: function () {\n      return this._viewportItemSize * this._sizeRatio;\n    },\n    getItemOffset: function (itemIndex, isEnd) {\n      var virtualItemsCount = this.virtualItemsCount();\n      var itemCount = itemIndex;\n      if (!virtualItemsCount) {\n        return 0;\n      }\n      var offset = 0;\n      var totalItemsCount = this._dataOptions.totalItemsCount();\n      Object.keys(this._itemSizes).forEach(currentItemIndex => {\n        if (!itemCount) {\n          return;\n        }\n        if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\n          offset += this._itemSizes[currentItemIndex];\n          itemCount--;\n        }\n      });\n      return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio);\n    },\n    getContentOffset: function (type) {\n      var isEnd = \"end\" === type;\n      var virtualItemsCount = this.virtualItemsCount();\n      if (!virtualItemsCount) {\n        return 0;\n      }\n      return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd);\n    },\n    getVirtualContentSize: function () {\n      var virtualItemsCount = this.virtualItemsCount();\n      return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0;\n    },\n    getViewportItemIndex: function () {\n      return this._viewportItemIndex;\n    },\n    setViewportItemIndex: function (itemIndex) {\n      this._viewportItemIndex = itemIndex;\n      if (false === this.option(LEGACY_SCROLLING_MODE)) {\n        return;\n      }\n      return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments);\n    },\n    viewportItemSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportItemSize = size;\n      }\n      return this._viewportItemSize;\n    },\n    viewportSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportSize = size;\n      }\n      return this._viewportSize;\n    },\n    viewportHeight: function (height, scrollTop) {\n      var position = null !== scrollTop && void 0 !== scrollTop ? scrollTop : this._position;\n      var begin = this.getItemIndexByPosition(position);\n      var end = this.getItemIndexByPosition(position + height, begin, height);\n      this.viewportSize(Math.ceil(end - begin));\n      if (!isDefined(scrollTop) && this._viewportItemIndex !== begin) {\n        this._setViewportPositionCore(position);\n      }\n    },\n    reset: function (isRefresh) {\n      this._dataLoader.reset();\n      if (!isRefresh) {\n        this._itemSizes = {};\n      }\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\n        if (this.viewportItemSize()) {\n          this.setViewportPosition(scrollTop);\n        }\n      });\n    },\n    dispose: function () {\n      clearTimeout(this._scrollTimeoutID);\n      this._windowScroll && this._windowScroll.dispose();\n      this._windowScroll = null;\n    },\n    scrollTo: function (pos) {\n      this._windowScroll && this._windowScroll.scrollTo(pos);\n    },\n    isVirtualMode: function () {\n      return _isVirtualMode(this);\n    },\n    isAppendMode: function () {\n      return _isAppendMode(this);\n    },\n    getViewportParams: function () {\n      var _this$option2;\n      var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\n      var totalItemsCount = this._dataOptions.totalItemsCount();\n      var hasKnownLastPage = this._dataOptions.hasKnownLastPage();\n      var topIndex = hasKnownLastPage && this._viewportItemIndex > totalItemsCount ? totalItemsCount : this._viewportItemIndex;\n      var bottomIndex = this._viewportSize + topIndex;\n      var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\n      var isScrollingBack = this.isScrollingBack();\n      var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\n      var topMinGap = isScrollingBack ? minGap : 0;\n      var bottomMinGap = isScrollingBack ? 0 : minGap;\n      var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\n      var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\n      if (virtualMode) {\n        var remainedItems = Math.max(0, totalItemsCount - skip);\n        take = Math.min(take, remainedItems);\n      }\n      return {\n        skip: skip,\n        take: take\n      };\n    },\n    itemsCount: function () {\n      var result = 0;\n      if (this.option(LEGACY_SCROLLING_MODE)) {\n        result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments);\n      } else {\n        result = this._dataOptions.itemsCount();\n      }\n      return result;\n    }\n  };\n  [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach(function (name) {\n    members[name] = function () {\n      return this._dataLoader[name].apply(this._dataLoader, arguments);\n    };\n  });\n  return members;\n}());","map":{"version":3,"names":["$","getWindow","eventsEngine","browser","positionUtils","each","Class","Deferred","Callbacks","VirtualDataLoader","isDefined","gridCoreUtils","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","_isVirtualMode","that","option","_isVirtual","_isAppendMode","subscribeToExternalScrollers","$element","scrollChangedHandler","$targetElement","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","scrollable","$scrollableElement","element","scrollableOffset","offset","top","scrollTop","widgetScrollStrategy","on","eventName","handler","off","subscribeToScrollEvents","isDocument","get","nodeName","isElement","nodeType","Node","ELEMENT_NODE","data","eventsStrategy","css","push","pos","topOffset","scrollMethod","scrollTo","getScrollElementParent","_$element$get$parentN","parentNode","host","parent","length","_","dispose","VirtualScrollController","inherit","members","ctor","component","dataOptions","isVirtual","_dataOptions","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","getItemSizes","apply","arguments","virtualItemsCount","totalItemsCount","viewportParams","getViewportParams","loadedOffset","loadedItemCount","skip","Math","max","take","min","endItemsCount","begin","end","getScrollingTimeout","renderAsync","scrollingTimeout","changingDuration","_this$option","setViewportPosition","position","result","clearTimeout","_scrollTimeoutID","setTimeout","_setViewportPositionCore","resolve","promise","getViewportPosition","getItemIndexByPosition","viewportItemIndex","height","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","Object","keys","concat","i","itemOffsetWithSize","parseInt","itemOffsetDiff","itemSize","round","isScrollingBack","prevPosition","itemIndex","setViewportItemIndex","fire","setContentItemSizes","sizes","reduce","a","b","forEach","size","index","virtualContentSize","itemsCount","contentHeightLimit","getContentHeightLimit","getItemOffset","isEnd","itemCount","currentItemIndex","floor","getContentOffset","type","getVirtualContentSize","getViewportItemIndex","viewportItemIndexChanged","viewportItemSize","viewportSize","viewportHeight","ceil","reset","isRefresh","subscribeToWindowScrollEvents","_windowScroll","isVirtualMode","isAppendMode","_this$option2","virtualMode","hasKnownLastPage","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","name"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var isElement = $scrollElement.get(0).nodeType === getWindow().Node.ELEMENT_NODE;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || isElement && \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    var getScrollElementParent = $element => {\r\n        var _$element$get$parentN;\r\n        return $(null !== (_$element$get$parentN = $element.get(0).parentNode) && void 0 !== _$element$get$parentN ? _$element$get$parentN : $element.get(0).host)\r\n    };\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = getScrollElementParent($scrollElement)) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position, viewportItemIndex, height) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    if (this._sizeRatio < 1 && isDefined(viewportItemIndex)) {\r\n                        itemOffset = viewportItemIndex + height / this._viewportItemSize\r\n                    }\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height, scrollTop) {\r\n            var position = null !== scrollTop && void 0 !== scrollTop ? scrollTop : this._position;\r\n            var begin = this.getItemIndexByPosition(position);\r\n            var end = this.getItemIndexByPosition(position + height, begin, height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (!isDefined(scrollTop) && this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var hasKnownLastPage = this._dataOptions.hasKnownLastPage();\r\n            var topIndex = hasKnownLastPage && this._viewportItemIndex > totalItemsCount ? totalItemsCount : this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}