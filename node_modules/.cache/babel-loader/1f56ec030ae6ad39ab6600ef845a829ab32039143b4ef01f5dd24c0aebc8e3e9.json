{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { setHeight as _setHeight, getHeight, setWidth, getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { isDefined, isString, isObject } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { addNamespace, eventData as getEventData, isTouchEvent } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../../events/drag\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport fx from \"../../animation/fx\";\nimport swatchContainer from \"../widget/swatch_container\";\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\nvar CELL_CONTENT_CLASS = \"text-content\";\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\nvar TRACKER_CLASS = \"tracker\";\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\nvar DRAGGING_DELTA = 5;\nvar COLUMN_OPACITY = .5;\nvar allowResizing = function (that) {\n  return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\");\n};\nvar allowReordering = function (that) {\n  return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\");\n};\nvar TrackerView = modules.View.inherit({\n  _renderCore: function () {\n    var deferred = this.callBase();\n    this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\n    this.hide();\n    return deferred;\n  },\n  _unsubscribeFromCallback: function () {\n    if (this._positionChanged) {\n      this._tablePositionController.positionChanged.remove(this._positionChanged);\n    }\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n    that._positionChanged = function (position) {\n      var $element = that.element();\n      if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\n        $element.css({\n          top: position.top\n        });\n        _setHeight($element, position.height);\n      }\n    };\n    this._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      this._unsubscribeFromCallback();\n      if (args.value) {\n        this._subscribeToCallback();\n        this._invalidate();\n      }\n    }\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n    this._subscribeToCallback();\n  },\n  isVisible: function () {\n    return allowResizing(this);\n  },\n  show: function () {\n    this.element().show();\n  },\n  hide: function () {\n    this.element() && this.element().hide();\n  },\n  setHeight: function (value) {\n    _setHeight(this.element(), value);\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n    this.callBase();\n  }\n});\nvar SeparatorView = modules.View.inherit({\n  _renderSeparator: function () {},\n  _renderCore: function (options) {\n    var deferred = this.callBase(options);\n    this._isShown = true;\n    this._renderSeparator();\n    this.hide();\n    return deferred;\n  },\n  show: function () {\n    this._isShown = true;\n  },\n  hide: function () {\n    this._isShown = false;\n  },\n  height: function (value) {\n    var $element = this.element();\n    if ($element) {\n      if (isDefined(value)) {\n        _setHeight($element, value);\n      } else {\n        return getHeight($element);\n      }\n    }\n  },\n  width: function (value) {\n    var $element = this.element();\n    if ($element) {\n      if (isDefined(value)) {\n        setWidth($element, value);\n      } else {\n        return getWidth($element);\n      }\n    }\n  }\n});\nvar ColumnsSeparatorView = SeparatorView.inherit({\n  _renderSeparator: function () {\n    this.callBase();\n    var $element = this.element();\n    $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS));\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n    var $element;\n    that._positionChanged = function (position) {\n      $element = that.element();\n      if ($element) {\n        $element.css({\n          top: position.top\n        });\n        _setHeight($element, position.height);\n      }\n    };\n    that._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  _unsubscribeFromCallback: function () {\n    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);\n  },\n  _init: function () {\n    this._isTransparent = allowResizing(this);\n    if (this.isVisible()) {\n      this._subscribeToCallback();\n    }\n  },\n  isVisible: function () {\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this));\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n        this._invalidate();\n        this.hide(true);\n      } else {\n        this._unsubscribeFromCallback();\n        this._isTransparent = allowResizing(this);\n        this.hide(true);\n      }\n    }\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n    this._init();\n  },\n  show: function () {\n    var $element = this.element();\n    if ($element && !this._isShown) {\n      if (this._isTransparent) {\n        $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT));\n      } else {\n        $element.show();\n      }\n    }\n    this.callBase();\n  },\n  hide: function (force) {\n    var $element = this.element();\n    var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\n    if ($element && (this._isShown || force)) {\n      if (this._isTransparent) {\n        $element.addClass(columnsSeparatorTransparent);\n        $element.css(\"left\", \"\");\n        $element.show();\n      } else {\n        if ($element.hasClass(columnsSeparatorTransparent)) {\n          $element.removeClass(columnsSeparatorTransparent);\n        }\n        $element.hide();\n      }\n    }\n    this.callBase();\n  },\n  moveByX: function (outerX) {\n    var $element = this.element();\n    if ($element) {\n      $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left);\n    }\n  },\n  changeCursor: function (cursorName) {\n    cursorName = isDefined(cursorName) ? cursorName : \"\";\n    var $element = this.element();\n    if ($element) {\n      $element.css(\"cursor\", cursorName);\n    }\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n    this.callBase();\n  }\n});\nvar BlockSeparatorView = SeparatorView.inherit({\n  init: function () {\n    var that = this;\n    this.callBase();\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      if (!isLoading) {\n        that.hide();\n      }\n    });\n  },\n  _renderSeparator: function () {\n    this.callBase();\n    this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\");\n  },\n  hide: function () {\n    var $parent = this._parentElement();\n    var $element = this.element();\n    if ($element && this._isShown) {\n      $element.css(\"display\", \"none\");\n    }\n    if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\n      $parent.prepend(this.element());\n    }\n    this.callBase();\n  },\n  isVisible: function () {\n    var groupPanelOptions = this.option(\"groupPanel\");\n    var columnChooserOptions = this.option(\"columnChooser\");\n    return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled;\n  },\n  show: function (targetLocation) {\n    var $element = this.element();\n    var startAnimate = function (toOptions) {\n      fx.stop($element, true);\n      fx.animate($element, {\n        type: \"slide\",\n        from: {\n          width: 0,\n          display: toOptions.display\n        },\n        to: toOptions,\n        duration: 300,\n        easing: \"swing\"\n      });\n    };\n    if ($element && !this._isShown) {\n      switch (targetLocation) {\n        case \"group\":\n          startAnimate({\n            width: \"50px\",\n            display: \"inline-block\"\n          });\n          break;\n        case \"columnChooser\":\n          startAnimate({\n            width: \"100%\",\n            display: \"block\"\n          });\n          break;\n        default:\n          $element.css(\"display\", \"\");\n      }\n    }\n    this.callBase();\n  }\n});\nvar DraggingHeaderView = modules.View.inherit({\n  _isDragging: false,\n  isDragging: function () {\n    return this._isDragging;\n  },\n  _getDraggingPanelByPos: function (pos) {\n    var result;\n    each(this._dragOptions.draggingPanels, function (index, draggingPanel) {\n      if (draggingPanel) {\n        var boundingRect = draggingPanel.getBoundingRect();\n        if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\n          result = draggingPanel;\n          return false;\n        }\n      }\n    });\n    return result;\n  },\n  _renderCore: function () {\n    this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide();\n  },\n  _resetTargetColumnOptions: function () {\n    var params = this._dropOptions;\n    params.targetColumnIndex = -1;\n    delete params.targetColumnElement;\n    delete params.isLast;\n    delete params.posX;\n    delete params.posY;\n  },\n  _getVisibleIndexObject: function (rowIndex, visibleIndex) {\n    if (isDefined(rowIndex)) {\n      return {\n        columnIndex: visibleIndex,\n        rowIndex: rowIndex\n      };\n    }\n    return visibleIndex;\n  },\n  dispose: function () {\n    var element = this.element();\n    this._dragOptions = null;\n    element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove();\n  },\n  isVisible: function () {\n    var columnsController = this.getController(\"columns\");\n    var commonColumnSettings = columnsController.getCommonSettings();\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding);\n  },\n  init: function () {\n    var that = this;\n    this.callBase();\n    this._controller = this.getController(\"draggingHeader\");\n    this._columnsResizerViewController = this.getController(\"columnsResizer\");\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      var element = that.element();\n      if (!isLoading && element) {\n        element.hide();\n      }\n    });\n  },\n  dragHeader: function (options) {\n    var columnElement = options.columnElement;\n    var isCommandColumn = !!options.sourceColumn.type;\n    this._isDragging = true;\n    this._dragOptions = options;\n    this._dropOptions = {\n      sourceIndex: options.index,\n      sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\n      sourceColumnElement: options.columnElement,\n      sourceLocation: options.sourceLocation\n    };\n    var document = domAdapter.getDocument();\n    this._onSelectStart = document.onselectstart;\n    document.onselectstart = function () {\n      return false;\n    };\n    this._controller.drag(this._dropOptions);\n    this.element().css({\n      textAlign: columnElement && columnElement.css(\"textAlign\"),\n      height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\n      width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\n      whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\n    }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\n    this.element().appendTo(swatchContainer.getSwatchContainer(columnElement));\n  },\n  moveHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var eventData = getEventData(e);\n    var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\n    var dragOptions = that._dragOptions;\n    if (that._isDragging && !isResizing) {\n      var $element = that.element();\n      var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\n      var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\n      if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\n        $element.show();\n        var newLeft = eventData.x - dragOptions.deltaX;\n        var newTop = eventData.y - dragOptions.deltaY;\n        $element.css({\n          left: newLeft,\n          top: newTop\n        });\n        that.dockHeader(eventData);\n      }\n      e.preventDefault();\n    }\n  },\n  dockHeader: function (eventData) {\n    var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\n    var controller = this._controller;\n    var params = this._dropOptions;\n    var dragOptions = this._dragOptions;\n    if (targetDraggingPanel) {\n      var rtlEnabled = this.option(\"rtlEnabled\");\n      var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\n      var axisName = isVerticalOrientation ? \"y\" : \"x\";\n      var targetLocation = targetDraggingPanel.getName();\n      var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\n      var sourceColumn = dragOptions.sourceColumn;\n      var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\n      var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\n      var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\n        targetDraggingPanel: targetDraggingPanel,\n        columns: targetDraggingPanel.getColumns(rowIndex),\n        columnElements: columnElements,\n        isVerticalOrientation: isVerticalOrientation,\n        startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\n      }));\n      pointsByTarget[targetLocation] = pointsByColumns;\n      params.targetLocation = targetLocation;\n      if (pointsByColumns.length > 0) {\n        for (var i = 0; i < pointsByColumns.length; i++) {\n          var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\n          if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\n            params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\n            if (columnElements[i]) {\n              params.targetColumnElement = columnElements.eq(i);\n              params.isLast = false;\n            } else {\n              params.targetColumnElement = columnElements.last();\n              params.isLast = true;\n            }\n            params.posX = pointsByColumns[i].x;\n            params.posY = pointsByColumns[i].y;\n            controller.dock(params);\n            break;\n          }\n        }\n      } else {\n        this._resetTargetColumnOptions();\n        controller.dock(params);\n      }\n    }\n  },\n  dropHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var controller = that._controller;\n    that.element().hide();\n    if (controller && that._isDragging) {\n      controller.drop(that._dropOptions);\n    }\n    that.element().appendTo(that._parentElement());\n    that._dragOptions = null;\n    that._dropOptions = null;\n    that._isDragging = false;\n    domAdapter.getDocument().onselectstart = that._onSelectStart || null;\n  }\n});\nvar isNextColumnResizingMode = function (that) {\n  return \"widget\" !== that.option(\"columnResizingMode\");\n};\nvar ColumnsResizerViewController = modules.ViewController.inherit({\n  _isHeadersRowArea: function (posY) {\n    if (this._columnHeadersView) {\n      var element = this._columnHeadersView.element();\n      if (element) {\n        var offsetTop = element.offset().top;\n        var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\n        return posY >= offsetTop && posY <= offsetTop + headersRowHeight;\n      }\n    }\n    return false;\n  },\n  _isRtlParentStyle: function () {\n    var _this$_$parentContain;\n    return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"));\n  },\n  _pointCreated: function (point, cellsLength, columns) {\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var isRtlParentStyle = this._isRtlParentStyle();\n    var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\n    if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\n      point.columnIndex -= firstPointColumnIndex;\n      var currentColumn = columns[point.columnIndex] || {};\n      var nextColumn = columns[point.columnIndex + 1] || {};\n      return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing);\n    }\n    return true;\n  },\n  _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n    if (pointsByColumns) {\n      for (var i = 0; i < pointsByColumns.length; i++) {\n        if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\n          continue;\n        }\n        if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\n          return pointsByColumns[i];\n        }\n      }\n    }\n    return null;\n  },\n  _moveSeparator: function (args) {\n    var _that$_draggingHeader;\n    var e = args.event;\n    var that = e.data;\n    var columnsSeparatorWidth = that._columnsSeparatorView.width();\n    var isNextColumnMode = isNextColumnResizingMode(that);\n    var deltaX = columnsSeparatorWidth / 2;\n    var parentOffset = that._$parentContainer.offset();\n    var parentOffsetLeft = parentOffset.left;\n    var eventData = getEventData(e);\n    var rtlEnabled = that.option(\"rtlEnabled\");\n    var isRtlParentStyle = this._isRtlParentStyle();\n    var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\n    if (that._isResizing && that._resizingInfo) {\n      if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\n        if (that._updateColumnsWidthIfNeeded(eventData.x)) {\n          var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\n          var cell = $cell[0];\n          if (cell) {\n            var outerWidth = cell.getBoundingClientRect().width;\n            that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\n            that._tablePositionController.update(that._targetPoint.y);\n            e.preventDefault();\n          }\n        }\n      }\n    } else if (!isDragging) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        if (that._previousParentOffset) {\n          if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\n            that.pointsByColumns(null);\n          }\n        }\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\n        that._previousParentOffset = parentOffset;\n        that._isReadyResizing = false;\n        if (that._targetPoint) {\n          that._columnsSeparatorView.changeCursor(\"col-resize\");\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\n          that._tablePositionController.update(that._targetPoint.y);\n          that._isReadyResizing = true;\n          e.preventDefault();\n        } else {\n          that._columnsSeparatorView.changeCursor();\n          that._columnsSeparatorView.moveByX(null);\n        }\n      } else {\n        that.pointsByColumns(null);\n        that._isReadyResizing = false;\n        that._columnsSeparatorView.changeCursor();\n        that._columnsSeparatorView.moveByX(null);\n      }\n    }\n  },\n  _endResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n    if (that._isResizing) {\n      that.pointsByColumns(null);\n      that._resizingInfo = null;\n      that._columnsSeparatorView.hide();\n      that._columnsSeparatorView.changeCursor();\n      that._trackerView.hide();\n      that._isReadyResizing = false;\n      that._isResizing = false;\n    }\n  },\n  _getNextColumnIndex: function (currentColumnIndex) {\n    return currentColumnIndex + 1;\n  },\n  _setupResizingInfo: function (posX) {\n    var currentColumnIndex = this._targetPoint.columnIndex;\n    var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\n    var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\n    var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\n    this._resizingInfo = {\n      startPosX: posX,\n      currentColumnIndex: currentColumnIndex,\n      currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\n      nextColumnIndex: nextColumnIndex,\n      nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\n    };\n  },\n  _startResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n    var eventData = getEventData(e);\n    if (isTouchEvent(e)) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\n        if (that._targetPoint) {\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\n          that._isReadyResizing = true;\n        }\n      } else {\n        that._isReadyResizing = false;\n      }\n    }\n    if (that._isReadyResizing) {\n      that._setupResizingInfo(eventData.x);\n      that._isResizing = true;\n      that._tablePositionController.update(that._targetPoint.y);\n      that._columnsSeparatorView.show();\n      that._trackerView.show();\n      var scrollable = that.component.getScrollable();\n      if (scrollable && that._isRtlParentStyle()) {\n        that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft();\n      }\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (this.isResizing()) {\n      this.getController(\"editorFactory\").loseFocus();\n    }\n  },\n  _generatePointsByColumns: function () {\n    var that = this;\n    var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\n    var cells = that._columnHeadersView.getColumnElements();\n    var pointsByColumns = [];\n    if (cells && cells.length > 0) {\n      pointsByColumns = gridCoreUtils.getPointsByColumns(cells, function (point) {\n        return that._pointCreated(point, cells.length, columns);\n      });\n    }\n    that._pointsByColumns = pointsByColumns;\n  },\n  _unsubscribeFromEvents: function () {\n    this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\n    this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\n    if (this._endResizingHandler) {\n      eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n      eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n    }\n  },\n  _subscribeToEvents: function () {\n    this._moveSeparatorHandler = this.createAction(this._moveSeparator);\n    this._startResizingHandler = this.createAction(this._startResizing);\n    this._endResizingHandler = this.createAction(this._endResizing);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\n    eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\n    eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n  },\n  _updateColumnsWidthIfNeeded: function (posX) {\n    var deltaX;\n    var needUpdate;\n    var contentWidth = this._rowsView.contentWidth();\n    var resizingInfo = this._resizingInfo;\n    var columnsController = this._columnsController;\n    var visibleColumns = columnsController.getVisibleColumns();\n    var columnsSeparatorWidth = this._columnsSeparatorView.width();\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var isRtlParentStyle = this._isRtlParentStyle();\n    var column = visibleColumns[resizingInfo.currentColumnIndex];\n    var nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\n    function isPercentWidth(width) {\n      return isString(width) && \"%\" === width.slice(-1);\n    }\n    function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\n      if (column) {\n        var oldColumnWidth = column.width;\n        if (oldColumnWidth) {\n          adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth);\n        }\n        if (adaptColumnWidthByRatio) {\n          columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\n          columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\");\n        } else {\n          columnsController.columnOption(column.index, \"visibleWidth\", null);\n          columnsController.columnOption(column.index, \"width\", columnWidth);\n        }\n      }\n    }\n    deltaX = posX - resizingInfo.startPosX;\n    if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\n      deltaX = -deltaX;\n    }\n    var {\n      cellWidth: cellWidth,\n      nextCellWidth: nextCellWidth\n    } = function (delta) {\n      var nextMinWidth;\n      var nextCellWidth;\n      var needCorrectionNextCellWidth;\n      var cellWidth = resizingInfo.currentColumnWidth + delta;\n      var minWidth = column && column.minWidth || columnsSeparatorWidth;\n      var result = {};\n      if (cellWidth >= minWidth) {\n        result.cellWidth = cellWidth;\n      } else {\n        result.cellWidth = minWidth;\n        needCorrectionNextCellWidth = true;\n      }\n      if (isNextColumnMode) {\n        nextCellWidth = resizingInfo.nextColumnWidth - delta;\n        nextMinWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\n        if (nextCellWidth >= nextMinWidth) {\n          if (needCorrectionNextCellWidth) {\n            result.nextCellWidth = resizingInfo.nextColumnWidth - (delta + minWidth - cellWidth);\n          } else {\n            result.nextCellWidth = nextCellWidth;\n          }\n        } else {\n          result.nextCellWidth = nextMinWidth;\n          result.cellWidth = resizingInfo.currentColumnWidth + (delta - nextMinWidth + nextCellWidth);\n        }\n      }\n      return result;\n    }(deltaX);\n    needUpdate = column.width !== cellWidth;\n    if (needUpdate) {\n      columnsController.beginUpdate();\n      cellWidth = Math.floor(cellWidth);\n      contentWidth = function (contentWidth, visibleColumns) {\n        var allColumnsHaveWidth = visibleColumns.every(column => column.width);\n        if (allColumnsHaveWidth) {\n          var totalPercent = visibleColumns.reduce((sum, column) => {\n            if (isPercentWidth(column.width)) {\n              sum += parseFloat(column.width);\n            }\n            return sum;\n          }, 0);\n          if (totalPercent > 100) {\n            contentWidth = contentWidth / totalPercent * 100;\n          }\n        }\n        return contentWidth;\n      }(contentWidth, visibleColumns);\n      setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\n      if (isNextColumnMode) {\n        nextCellWidth = Math.floor(nextCellWidth);\n        setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio);\n      } else {\n        var columnWidths = this._columnHeadersView.getColumnWidths();\n        columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\n        var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\n        if (!hasScroll) {\n          var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\n          if (lastColumnIndex >= 0) {\n            columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\");\n          }\n        }\n        for (var i = 0; i < columnWidths.length; i++) {\n          if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\n            columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i]);\n          }\n        }\n      }\n      columnsController.endUpdate();\n      if (!isNextColumnMode) {\n        this.component.updateDimensions();\n        var scrollable = this.component.getScrollable();\n        if (scrollable && isRtlParentStyle) {\n          var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\n          scrollable.scrollTo({\n            left: left\n          });\n        }\n      }\n    }\n    return needUpdate;\n  },\n  _subscribeToCallback: function (callback, handler) {\n    callback.add(handler);\n    this._subscribesToCallbacks.push({\n      callback: callback,\n      handler: handler\n    });\n  },\n  _unsubscribeFromCallbacks: function () {\n    for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\n      var subscribe = this._subscribesToCallbacks[i];\n      subscribe.callback.remove(subscribe.handler);\n    }\n    this._subscribesToCallbacks = [];\n  },\n  _unsubscribes: function () {\n    this._unsubscribeFromEvents();\n    this._unsubscribeFromCallbacks();\n  },\n  _init: function () {\n    var that = this;\n    var generatePointsByColumnsHandler = function () {\n      if (!that._isResizing) {\n        that.pointsByColumns(null);\n      }\n    };\n    var generatePointsByColumnsScrollHandler = function (offset) {\n      if (that._scrollLeft !== offset.left) {\n        that._scrollLeft = offset.left;\n        that.pointsByColumns(null);\n      }\n    };\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._trackerView = that.getView(\"trackerView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._columnsController = that.getController(\"columns\");\n    that._tablePositionController = that.getController(\"tablePosition\");\n    that._$parentContainer = that.component.$element();\n    that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\n    that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\n    that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\n    that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function () {\n      that._unsubscribeFromEvents();\n      that._subscribeToEvents();\n    });\n    that._subscribeToCallback(that._rowsView.renderCompleted, function () {\n      that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\n      that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler);\n    });\n    var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n    var previousTableHeight = 0;\n    that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function (e) {\n      if (that._isResizing && !that._rowsView.isResizing) {\n        var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n        if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\n          previousScrollbarVisibility = scrollbarVisibility;\n          previousTableHeight = e.height;\n          that.component.updateDimensions();\n        } else {\n          that._rowsView.updateFreeSpaceRowHeight();\n        }\n      }\n      previousTableHeight = e.height;\n    });\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n        this._subscribeToEvents();\n      } else {\n        this._unsubscribes();\n      }\n    }\n  },\n  isResizing: function () {\n    return this._isResizing;\n  },\n  init: function () {\n    this._subscribesToCallbacks = [];\n    if (allowResizing(this)) {\n      this._init();\n    }\n  },\n  pointsByColumns: function (value) {\n    if (void 0 !== value) {\n      this._pointsByColumns = value;\n    } else {\n      if (!this._pointsByColumns) {\n        this._generatePointsByColumns();\n      }\n      return this._pointsByColumns;\n    }\n  },\n  dispose: function () {\n    this._unsubscribes();\n    this.callBase();\n  }\n});\nvar TablePositionViewController = modules.ViewController.inherit({\n  update: function (top) {\n    var params = {};\n    var $element = this._columnHeadersView.element();\n    var offset = $element && $element.offset();\n    var offsetTop = offset && offset.top || 0;\n    var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\n    var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\n    var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\n    var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\n    var columnsResizerController = this.component.getController(\"columnsResizer\");\n    var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\n    params.height = columnsHeadersHeight;\n    var isDraggingOrResizing = columnsResizerController.isResizing() || draggingHeaderView.isDragging();\n    if (isDraggingOrResizing) {\n      params.height += rowsHeight - diffOffsetTop;\n    }\n    if (null !== top && $element && $element.length) {\n      params.top = $element[0].offsetTop + diffOffsetTop;\n    }\n    this.positionChanged.fire(params);\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnHeadersView = this.getView(\"columnHeadersView\");\n    that._rowsView = this.getView(\"rowsView\");\n    that._pagerView = this.getView(\"pagerView\");\n    that._rowsView.resizeCompleted.add(function () {\n      if (that.option(\"allowColumnResizing\")) {\n        var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\n        that.update(targetPoint ? targetPoint.y : null);\n      }\n    });\n  },\n  ctor: function (component) {\n    this.callBase(component);\n    this.positionChanged = Callbacks();\n  }\n});\nvar DraggingHeaderViewController = modules.ViewController.inherit({\n  _generatePointsByColumns: function (options) {\n    var that = this;\n    return gridCoreUtils.getPointsByColumns(options.columnElements, function (point) {\n      return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn);\n    }, options.isVerticalOrientation, options.startColumnIndex);\n  },\n  _pointCreated: function (point, columns, location, sourceColumn) {\n    var targetColumn = columns[point.columnIndex];\n    var prevColumn = columns[point.columnIndex - 1];\n    switch (location) {\n      case \"columnChooser\":\n        return true;\n      case \"headers\":\n        return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\n      default:\n        return 0 === columns.length;\n    }\n  },\n  _subscribeToEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columns;\n        var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\n        var nameDraggingPanel = draggingPanel.getName();\n        var subscribeToEvents = function (index, columnElement) {\n          if (!columnElement) {\n            return;\n          }\n          var $columnElement = $(columnElement);\n          var column = columns[index];\n          if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\n            $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n            eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction(function (args) {\n              var e = args.event;\n              var eventData = getEventData(e);\n              draggingHeader.dragHeader({\n                deltaX: eventData.x - $(e.currentTarget).offset().left,\n                deltaY: eventData.y - $(e.currentTarget).offset().top,\n                sourceColumn: column,\n                index: column.index,\n                columnIndex: index,\n                columnElement: $columnElement,\n                sourceLocation: nameDraggingPanel,\n                draggingPanels: draggingPanels,\n                rowIndex: that._columnsController.getRowIndex(column.index, true)\n              });\n            }));\n            eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.moveHeader));\n            eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.dropHeader));\n          }\n        };\n        for (var i = 0; i < rowCount; i++) {\n          var columnElements = draggingPanel.getColumnElements(i) || [];\n          if (columnElements.length) {\n            columns = draggingPanel.getColumns(i) || [];\n            each(columnElements, subscribeToEvents);\n          }\n        }\n      }\n    });\n  },\n  _unsubscribeFromEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columnElements = draggingPanel.getColumnElements() || [];\n        each(columnElements, function (index, columnElement) {\n          var $columnElement = $(columnElement);\n          eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\n          $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n        });\n      }\n    });\n  },\n  _getSeparator: function (targetLocation) {\n    return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView;\n  },\n  hideSeparators: function (type) {\n    var blockSeparator = this._blockSeparatorView;\n    var columnsSeparator = this._columnsSeparatorView;\n    this._animationColumnIndex = null;\n    blockSeparator && blockSeparator.hide();\n    \"block\" !== type && columnsSeparator && columnsSeparator.hide();\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnsController = that.getController(\"columns\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._draggingHeaderView = that.getView(\"draggingHeaderView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._blockSeparatorView = that.getView(\"blockSeparatorView\");\n    that._headerPanelView = that.getView(\"headerPanel\");\n    that._columnChooserView = that.getView(\"columnChooserView\");\n    var subscribeToEvents = function () {\n      if (that._draggingHeaderView) {\n        var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\n        that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\n        that._subscribeToEvents(that._draggingHeaderView, draggingPanels);\n      }\n    };\n    that._columnHeadersView.renderCompleted.add(subscribeToEvents);\n    that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\n    that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents);\n  },\n  allowDrop: function (parameters) {\n    return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n  },\n  drag: function (parameters) {\n    var sourceIndex = parameters.sourceIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var sourceColumnElement = parameters.sourceColumnElement;\n    var headersView = this._columnHeadersView;\n    var rowsView = this._rowsView;\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: COLUMN_OPACITY\n      });\n      if (\"headers\" === sourceLocation) {\n        headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n        rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n      }\n    }\n  },\n  dock: function (parameters) {\n    var that = this;\n    var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var targetLocation = parameters.targetLocation;\n    var separator = that._getSeparator(targetLocation);\n    var hasTargetVisibleIndex = targetColumnIndex >= 0;\n    that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\n    if (separator) {\n      if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\n        if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\n          !function () {\n            if (that._animationColumnIndex !== targetColumnIndex) {\n              that.hideSeparators();\n              separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\n              that._animationColumnIndex = targetColumnIndex;\n              separator.show(targetLocation);\n            }\n          }();\n        } else {\n          that.hideSeparators(\"block\");\n          that.getController(\"tablePosition\").update(parameters.posY);\n          separator.moveByX(parameters.posX - separator.width());\n          separator.show();\n        }\n      } else {\n        that.hideSeparators();\n      }\n    }\n  },\n  drop: function (parameters) {\n    var sourceColumnElement = parameters.sourceColumnElement;\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: \"\"\n      });\n      this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\n      this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\n      this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS));\n    }\n    if (this.allowDrop(parameters)) {\n      var separator = this._getSeparator(parameters.targetLocation);\n      if (separator) {\n        separator.hide();\n      }\n      this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n    }\n  },\n  dispose: function () {\n    if (this._draggingHeaderView) {\n      this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView]);\n    }\n  }\n});\nexport var columnsResizingReorderingModule = {\n  views: {\n    columnsSeparatorView: ColumnsSeparatorView,\n    blockSeparatorView: BlockSeparatorView,\n    draggingHeaderView: DraggingHeaderView,\n    trackerView: TrackerView\n  },\n  controllers: {\n    draggingHeader: DraggingHeaderViewController,\n    tablePosition: TablePositionViewController,\n    columnsResizer: ColumnsResizerViewController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _needUpdateRowHeight: function (itemCount) {\n          var wordWrapEnabled = this.option(\"wordWrapEnabled\");\n          var columnsResizerController = this.getController(\"columnsResizer\");\n          var isResizing = columnsResizerController.isResizing();\n          return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing;\n        }\n      }\n    },\n    controllers: {\n      editorFactory: {\n        renderFocusOverlay: function () {\n          if (this.getController(\"columnsResizer\").isResizing()) {\n            return;\n          }\n          return this.callBase.apply(this, arguments);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["setHeight","_setHeight","getHeight","setWidth","getWidth","$","domAdapter","eventsEngine","Callbacks","isDefined","isString","isObject","each","extend","getBoundingRect","addNamespace","eventData","getEventData","isTouchEvent","pointerEvents","start","dragEventStart","move","dragEventMove","end","dragEventEnd","modules","gridCoreUtils","fx","swatchContainer","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","CELL_CONTENT_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","HEADER_ROW_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","MODULE_NAMESPACE","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","allowResizing","that","option","getController","isColumnOptionUsed","allowReordering","TrackerView","View","inherit","_renderCore","deferred","callBase","element","addClass","addWidgetPrefix","hide","_unsubscribeFromCallback","_positionChanged","_tablePositionController","positionChanged","remove","_subscribeToCallback","position","$element","hasClass","css","top","height","add","optionChanged","args","name","value","_invalidate","init","isVisible","show","dispose","SeparatorView","_renderSeparator","options","_isShown","width","ColumnsSeparatorView","_init","_isTransparent","removeClass","force","columnsSeparatorTransparent","moveByX","outerX","_parentElement","offset","left","changeCursor","cursorName","BlockSeparatorView","loadingChanged","isLoading","html","$parent","children","length","prepend","groupPanelOptions","columnChooserOptions","visible","enabled","targetLocation","startAnimate","toOptions","stop","animate","type","from","display","to","duration","easing","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","pos","result","_dragOptions","draggingPanels","index","draggingPanel","boundingRect","bottom","y","x","right","_resetTargetColumnOptions","params","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","rowIndex","visibleIndex","columnIndex","parent","find","columnsController","commonColumnSettings","getCommonSettings","allowGrouping","allowHiding","_controller","_columnsResizerViewController","dragHeader","columnElement","isCommandColumn","sourceColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","sourceLocation","document","getDocument","_onSelectStart","onselectstart","drag","textAlign","get","clientHeight","clientWidth","whiteSpace","toggleClass","text","caption","appendTo","getSwatchContainer","moveHeader","e","event","data","isResizing","dragOptions","moveDeltaX","Math","abs","deltaX","moveDeltaY","deltaY","is","newLeft","newTop","dockHeader","preventDefault","targetDraggingPanel","controller","rtlEnabled","isVerticalOrientation","getName","axisName","columnElements","getColumnElements","ownerBand","pointsByTarget","pointsByColumns","_generatePointsByColumns","columns","getColumns","startColumnIndex","i","centerPosition","eq","last","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","ViewController","_isHeadersRowArea","_columnHeadersView","offsetTop","headersRowHeight","getHeadersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","point","cellsLength","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","currentColumn","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","$cell","currentColumnIndex","cell","outerWidth","getBoundingClientRect","update","_targetPoint","_previousParentOffset","_isReadyResizing","_endResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","getHeaderElement","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","_startResizing","scrollable","component","getScrollable","_scrollRight","$content","container","scrollLeft","stopPropagation","loseFocus","_columnsController","getVisibleColumns","cells","getPointsByColumns","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","off","_startResizingHandler","down","_endResizingHandler","up","_subscribeToEvents","createAction","on","needUpdate","contentWidth","_rowsView","resizingInfo","visibleColumns","adaptColumnWidthByRatio","column","isPercentWidth","slice","setColumnWidth","columnWidth","oldColumnWidth","columnOption","toFixed","cellWidth","nextCellWidth","delta","nextMinWidth","needCorrectionNextCellWidth","minWidth","beginUpdate","floor","allColumnsHaveWidth","every","totalPercent","reduce","sum","parseFloat","columnWidths","getColumnWidths","hasScroll","totalWidth","lastColumnIndex","getLastResizableColumnIndex","endUpdate","updateDimensions","scrollTo","callback","handler","_subscribesToCallbacks","push","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","_scrollLeft","getView","renderCompleted","resizeCompleted","scrollChanged","previousScrollbarVisibility","getScrollbarWidth","previousTableHeight","scrollbarVisibility","updateFreeSpaceRowHeight","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","rowsHeight","columnsResizerController","draggingHeaderView","isDraggingOrResizing","fire","_pagerView","targetPoint","ctor","DraggingHeaderViewController","location","targetColumn","prevColumn","draggingHeader","_","rowCount","getRowCount","nameDraggingPanel","subscribeToEvents","$columnElement","allowDragging","currentTarget","getRowIndex","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","parameters","allowMoveColumn","headersView","rowsView","opacity","setRowsOpacity","separator","hasTargetVisibleIndex","moveColumn","columnsResizingReorderingModule","views","columnsSeparatorView","blockSeparatorView","trackerView","controllers","tablePosition","columnsResizer","extenders","_needUpdateRowHeight","itemCount","wordWrapEnabled","apply","arguments","editorFactory","renderFocusOverlay"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var deferred = this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide();\r\n        return deferred\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        var deferred = this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide();\r\n        return deferred\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate;\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        var nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        var {\r\n            cellWidth: cellWidth,\r\n            nextCellWidth: nextCellWidth\r\n        } = function(delta) {\r\n            var nextMinWidth;\r\n            var nextCellWidth;\r\n            var needCorrectionNextCellWidth;\r\n            var cellWidth = resizingInfo.currentColumnWidth + delta;\r\n            var minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n            var result = {};\r\n            if (cellWidth >= minWidth) {\r\n                result.cellWidth = cellWidth\r\n            } else {\r\n                result.cellWidth = minWidth;\r\n                needCorrectionNextCellWidth = true\r\n            }\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = resizingInfo.nextColumnWidth - delta;\r\n                nextMinWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n                if (nextCellWidth >= nextMinWidth) {\r\n                    if (needCorrectionNextCellWidth) {\r\n                        result.nextCellWidth = resizingInfo.nextColumnWidth - (delta + minWidth - cellWidth)\r\n                    } else {\r\n                        result.nextCellWidth = nextCellWidth\r\n                    }\r\n                } else {\r\n                    result.nextCellWidth = nextMinWidth;\r\n                    result.cellWidth = resizingInfo.currentColumnWidth + (delta - nextMinWidth + nextCellWidth)\r\n                }\r\n            }\r\n            return result\r\n        }(deltaX);\r\n        needUpdate = column.width !== cellWidth;\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}