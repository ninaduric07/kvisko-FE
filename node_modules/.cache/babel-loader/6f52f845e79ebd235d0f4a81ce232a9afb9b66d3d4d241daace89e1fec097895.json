{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/template_manager.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport config from \"../config\";\nimport devices from \"../devices\";\nimport Errors from \"../errors\";\nimport $ from \"../renderer\";\nimport { ChildDefaultTemplate } from \"../templates/child_default_template\";\nimport { EmptyTemplate } from \"../templates/empty_template\";\nimport { Template } from \"../templates/template\";\nimport { TemplateBase } from \"../templates/template_base\";\nimport { groupBy } from \"./array\";\nimport { findBestMatches } from \"./common\";\nimport { normalizeTemplateElement } from \"./dom\";\nimport { extend } from \"./extend\";\nimport { isFunction, isRenderer } from \"./type\";\nexport var findTemplates = (element, name) => {\n  var templates = $(element).contents().filter(\"[\".concat(\"data-options\", '*=\"').concat(name, '\"]'));\n  return [].slice.call(templates).map(element => {\n    var optionsString = $(element).attr(\"data-options\") || \"\";\n    return {\n      element: element,\n      options: config().optionsParser(optionsString)[name]\n    };\n  }).filter(template => !!template.options);\n};\nexport var suitableTemplatesByName = rawTemplates => {\n  var templatesMap = groupBy(rawTemplates, template => template.options.name);\n  if (templatesMap[void 0]) {\n    throw Errors.Error(\"E0023\");\n  }\n  var result = {};\n  Object.keys(templatesMap).forEach(name => {\n    var _findBestMatches$;\n    var suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], template => template.options)[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\n    if (suitableTemplate) {\n      result[name] = suitableTemplate;\n    }\n  });\n  return result;\n};\nexport var addOneRenderedCall = template => {\n  var render = template.render.bind(template);\n  return extend({}, template, {\n    render(options) {\n      var templateResult = render(options);\n      options && options.onRendered && options.onRendered();\n      return templateResult;\n    }\n  });\n};\nexport var getNormalizedTemplateArgs = options => {\n  var args = [];\n  if (\"model\" in options) {\n    args.push(options.model);\n  }\n  if (\"index\" in options) {\n    args.push(options.index);\n  }\n  args.push(options.container);\n  return args;\n};\nexport var validateTemplateSource = templateSource => \"string\" === typeof templateSource ? normalizeTemplateElement(templateSource) : templateSource;\nexport var templateKey = templateSource => isRenderer(templateSource) && templateSource[0] || templateSource;\nexport var defaultCreateElement = element => new Template(element);\nexport var acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\n  var integrationTemplate = null;\n  if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\n    integrationTemplate = templates[templateSource];\n    if (integrationTemplate && !(integrationTemplate instanceof TemplateBase) && !isAsyncTemplate) {\n      integrationTemplate = addOneRenderedCall(integrationTemplate);\n    }\n  }\n  return integrationTemplate;\n};\nexport var acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\n  if (null == templateSource) {\n    return new EmptyTemplate();\n  }\n  if (templateSource instanceof ChildDefaultTemplate) {\n    return defaultTemplates[templateSource.name];\n  }\n  if (templateSource instanceof TemplateBase) {\n    return templateSource;\n  }\n  if (isFunction(templateSource.render) && !isRenderer(templateSource)) {\n    return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource);\n  }\n  if (templateSource.nodeType || isRenderer(templateSource)) {\n    return createTemplate($(templateSource));\n  }\n  return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource);\n};","map":{"version":3,"names":["config","devices","Errors","$","ChildDefaultTemplate","EmptyTemplate","Template","TemplateBase","groupBy","findBestMatches","normalizeTemplateElement","extend","isFunction","isRenderer","findTemplates","element","name","templates","contents","filter","concat","slice","call","map","optionsString","attr","options","optionsParser","template","suitableTemplatesByName","rawTemplates","templatesMap","Error","result","Object","keys","forEach","_findBestMatches$","suitableTemplate","current","addOneRenderedCall","render","bind","templateResult","onRendered","getNormalizedTemplateArgs","args","push","model","index","container","validateTemplateSource","templateSource","templateKey","defaultCreateElement","acquireIntegrationTemplate","isAsyncTemplate","skipTemplates","integrationTemplate","indexOf","acquireTemplate","createTemplate","defaultTemplates","nodeType"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/utils/template_manager.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/template_manager.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport config from \"../config\";\r\nimport devices from \"../devices\";\r\nimport Errors from \"../errors\";\r\nimport $ from \"../renderer\";\r\nimport {\r\n    ChildDefaultTemplate\r\n} from \"../templates/child_default_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../templates/empty_template\";\r\nimport {\r\n    Template\r\n} from \"../templates/template\";\r\nimport {\r\n    TemplateBase\r\n} from \"../templates/template_base\";\r\nimport {\r\n    groupBy\r\n} from \"./array\";\r\nimport {\r\n    findBestMatches\r\n} from \"./common\";\r\nimport {\r\n    normalizeTemplateElement\r\n} from \"./dom\";\r\nimport {\r\n    extend\r\n} from \"./extend\";\r\nimport {\r\n    isFunction,\r\n    isRenderer\r\n} from \"./type\";\r\nexport var findTemplates = (element, name) => {\r\n    var templates = $(element).contents().filter(\"[\".concat(\"data-options\", '*=\"').concat(name, '\"]'));\r\n    return [].slice.call(templates).map(element => {\r\n        var optionsString = $(element).attr(\"data-options\") || \"\";\r\n        return {\r\n            element: element,\r\n            options: config().optionsParser(optionsString)[name]\r\n        }\r\n    }).filter(template => !!template.options)\r\n};\r\nexport var suitableTemplatesByName = rawTemplates => {\r\n    var templatesMap = groupBy(rawTemplates, template => template.options.name);\r\n    if (templatesMap[void 0]) {\r\n        throw Errors.Error(\"E0023\")\r\n    }\r\n    var result = {};\r\n    Object.keys(templatesMap).forEach(name => {\r\n        var _findBestMatches$;\r\n        var suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], template => template.options)[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\r\n        if (suitableTemplate) {\r\n            result[name] = suitableTemplate\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var addOneRenderedCall = template => {\r\n    var render = template.render.bind(template);\r\n    return extend({}, template, {\r\n        render(options) {\r\n            var templateResult = render(options);\r\n            options && options.onRendered && options.onRendered();\r\n            return templateResult\r\n        }\r\n    })\r\n};\r\nexport var getNormalizedTemplateArgs = options => {\r\n    var args = [];\r\n    if (\"model\" in options) {\r\n        args.push(options.model)\r\n    }\r\n    if (\"index\" in options) {\r\n        args.push(options.index)\r\n    }\r\n    args.push(options.container);\r\n    return args\r\n};\r\nexport var validateTemplateSource = templateSource => \"string\" === typeof templateSource ? normalizeTemplateElement(templateSource) : templateSource;\r\nexport var templateKey = templateSource => isRenderer(templateSource) && templateSource[0] || templateSource;\r\nexport var defaultCreateElement = element => new Template(element);\r\nexport var acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\r\n    var integrationTemplate = null;\r\n    if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\r\n        integrationTemplate = templates[templateSource];\r\n        if (integrationTemplate && !(integrationTemplate instanceof TemplateBase) && !isAsyncTemplate) {\r\n            integrationTemplate = addOneRenderedCall(integrationTemplate)\r\n        }\r\n    }\r\n    return integrationTemplate\r\n};\r\nexport var acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\r\n    if (null == templateSource) {\r\n        return new EmptyTemplate\r\n    }\r\n    if (templateSource instanceof ChildDefaultTemplate) {\r\n        return defaultTemplates[templateSource.name]\r\n    }\r\n    if (templateSource instanceof TemplateBase) {\r\n        return templateSource\r\n    }\r\n    if (isFunction(templateSource.render) && !isRenderer(templateSource)) {\r\n        return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource)\r\n    }\r\n    if (templateSource.nodeType || isRenderer(templateSource)) {\r\n        return createTemplate($(templateSource))\r\n    }\r\n    return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource)\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}