{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/ready_callbacks.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport domAdapter from \"../dom_adapter\";\nimport injector from \"./dependency_injector\";\nimport { hasWindow } from \"./window\";\nimport callOnce from \"./call_once\";\nvar callbacks = [];\nvar subscribeReady = callOnce(() => {\n  var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", () => {\n    readyCallbacks.fire();\n    removeListener();\n  });\n});\nvar readyCallbacks = {\n  add: callback => {\n    var windowExists = hasWindow();\n    if (windowExists && \"loading\" !== domAdapter.getReadyState()) {\n      callback();\n    } else {\n      callbacks.push(callback);\n      windowExists && subscribeReady();\n    }\n  },\n  fire: () => {\n    callbacks.forEach(callback => callback());\n    callbacks = [];\n  }\n};\nexport default injector(readyCallbacks);","map":{"version":3,"names":["domAdapter","injector","hasWindow","callOnce","callbacks","subscribeReady","removeListener","listen","getDocument","readyCallbacks","fire","add","callback","windowExists","getReadyState","push","forEach"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/utils/ready_callbacks.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/ready_callbacks.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport domAdapter from \"../dom_adapter\";\r\nimport injector from \"./dependency_injector\";\r\nimport {\r\n    hasWindow\r\n} from \"./window\";\r\nimport callOnce from \"./call_once\";\r\nvar callbacks = [];\r\nvar subscribeReady = callOnce(() => {\r\n    var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", () => {\r\n        readyCallbacks.fire();\r\n        removeListener()\r\n    })\r\n});\r\nvar readyCallbacks = {\r\n    add: callback => {\r\n        var windowExists = hasWindow();\r\n        if (windowExists && \"loading\" !== domAdapter.getReadyState()) {\r\n            callback()\r\n        } else {\r\n            callbacks.push(callback);\r\n            windowExists && subscribeReady()\r\n        }\r\n    },\r\n    fire: () => {\r\n        callbacks.forEach(callback => callback());\r\n        callbacks = []\r\n    }\r\n};\r\nexport default injector(readyCallbacks);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,gBAAgB;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SACIC,SAAS,QACN,UAAU;AACjB,OAAOC,QAAQ,MAAM,aAAa;AAClC,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,cAAc,GAAGF,QAAQ,CAAC,MAAM;EAChC,IAAIG,cAAc,GAAGN,UAAU,CAACO,MAAM,CAACP,UAAU,CAACQ,WAAW,CAAC,CAAC,EAAE,kBAAkB,EAAE,MAAM;IACvFC,cAAc,CAACC,IAAI,CAAC,CAAC;IACrBJ,cAAc,CAAC,CAAC;EACpB,CAAC,CAAC;AACN,CAAC,CAAC;AACF,IAAIG,cAAc,GAAG;EACjBE,GAAG,EAAEC,QAAQ,IAAI;IACb,IAAIC,YAAY,GAAGX,SAAS,CAAC,CAAC;IAC9B,IAAIW,YAAY,IAAI,SAAS,KAAKb,UAAU,CAACc,aAAa,CAAC,CAAC,EAAE;MAC1DF,QAAQ,CAAC,CAAC;IACd,CAAC,MAAM;MACHR,SAAS,CAACW,IAAI,CAACH,QAAQ,CAAC;MACxBC,YAAY,IAAIR,cAAc,CAAC,CAAC;IACpC;EACJ,CAAC;EACDK,IAAI,EAAEA,CAAA,KAAM;IACRN,SAAS,CAACY,OAAO,CAACJ,QAAQ,IAAIA,QAAQ,CAAC,CAAC,CAAC;IACzCR,SAAS,GAAG,EAAE;EAClB;AACJ,CAAC;AACD,eAAeH,QAAQ,CAACQ,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}