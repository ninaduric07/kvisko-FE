{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/collection/ui.collection_widget.edit.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport BaseCollectionWidget from \"./ui.collection_widget.base\";\nimport errors from \"../widget/ui.errors\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { noop } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport PlainEditStrategy from \"./ui.collection_widget.edit.strategy.plain\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { DataSource } from \"../../data/data_source/data_source\";\nimport { normalizeLoadResult } from \"../../data/data_source/utils\";\nimport Selection from \"../selection/selection\";\nimport { when, Deferred, fromPromise } from \"../../core/utils/deferred\";\nvar ITEM_DELETING_DATA_KEY = \"dxItemDeleting\";\nvar NOT_EXISTING_INDEX = -1;\nvar indexExists = function (index) {\n  return index !== NOT_EXISTING_INDEX;\n};\nvar CollectionWidget = BaseCollectionWidget.inherit({\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      selectedItem: true\n    });\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      selectionMode: \"none\",\n      selectionRequired: false,\n      selectionByClick: true,\n      selectedItems: [],\n      selectedItemKeys: [],\n      maxFilterLengthInRequest: 1500,\n      keyExpr: null,\n      selectedIndex: NOT_EXISTING_INDEX,\n      selectedItem: null,\n      onSelectionChanged: null,\n      onItemReordered: null,\n      onItemDeleting: null,\n      onItemDeleted: null\n    });\n  },\n  ctor: function (element, options) {\n    this._userOptions = options || {};\n    this.callBase(element, options);\n  },\n  _init: function () {\n    this._initEditStrategy();\n    this.callBase();\n    this._initKeyGetter();\n    this._initSelectionModule();\n  },\n  _initKeyGetter: function () {\n    this._keyGetter = compileGetter(this.option(\"keyExpr\"));\n  },\n  _getKeysByItems: function (selectedItems) {\n    return this._editStrategy.getKeysByItems(selectedItems);\n  },\n  _getItemsByKeys: function (selectedItemKeys, selectedItems) {\n    return this._editStrategy.getItemsByKeys(selectedItemKeys, selectedItems);\n  },\n  _getKeyByIndex: function (index) {\n    return this._editStrategy.getKeyByIndex(index);\n  },\n  _getIndexByKey: function (key) {\n    return this._editStrategy.getIndexByKey(key);\n  },\n  _getIndexByItemData: function (itemData) {\n    return this._editStrategy.getIndexByItemData(itemData);\n  },\n  _isKeySpecified: function () {\n    return !!this._dataController.key();\n  },\n  _getCombinedFilter: function () {\n    return this._dataController.filter();\n  },\n  key: function () {\n    if (this.option(\"keyExpr\")) {\n      return this.option(\"keyExpr\");\n    }\n    return this._dataController.key();\n  },\n  keyOf: function (item) {\n    var key = item;\n    if (this.option(\"keyExpr\")) {\n      key = this._keyGetter(item);\n    } else if (this._dataController.store()) {\n      key = this._dataController.keyOf(item);\n    }\n    return key;\n  },\n  _nullValueSelectionSupported: function () {\n    return false;\n  },\n  _initSelectionModule: function () {\n    var that = this;\n    var itemsGetter = that._editStrategy.itemsGetter;\n    this._selection = new Selection({\n      allowNullValue: this._nullValueSelectionSupported(),\n      mode: this.option(\"selectionMode\"),\n      maxFilterLengthInRequest: this.option(\"maxFilterLengthInRequest\"),\n      equalByReference: !this._isKeySpecified(),\n      onSelectionChanged: function (args) {\n        if (args.addedItemKeys.length || args.removedItemKeys.length) {\n          that.option(\"selectedItems\", that._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\n          that._updateSelectedItems(args);\n        }\n      },\n      filter: that._getCombinedFilter.bind(that),\n      totalCount: function () {\n        var items = that.option(\"items\");\n        var totalCount = that._dataController.totalCount();\n        return totalCount >= 0 ? totalCount : that._getItemsCount(items);\n      },\n      key: that.key.bind(that),\n      keyOf: that.keyOf.bind(that),\n      load: function (options) {\n        var _dataController$loadO;\n        var dataController = that._dataController;\n        options.customQueryParams = null === (_dataController$loadO = dataController.loadOptions()) || void 0 === _dataController$loadO ? void 0 : _dataController$loadO.customQueryParams;\n        options.userData = dataController.userData();\n        if (dataController.store()) {\n          return dataController.loadFromStore(options).done(function (loadResult) {\n            if (that._disposed) {\n              return;\n            }\n            var items = normalizeLoadResult(loadResult).data;\n            dataController.applyMapFunction(items);\n          });\n        } else {\n          return new Deferred().resolve(this.plainItems());\n        }\n      },\n      dataFields: function () {\n        return that._dataController.select();\n      },\n      plainItems: itemsGetter.bind(that._editStrategy)\n    });\n  },\n  _getItemsCount: function (items) {\n    return items.reduce((itemsCount, item) => itemsCount + (item.items ? this._getItemsCount(item.items) : 1), 0);\n  },\n  _initEditStrategy: function () {\n    var Strategy = PlainEditStrategy;\n    this._editStrategy = new Strategy(this);\n  },\n  _getSelectedItemIndices: function (keys) {\n    var that = this;\n    var indices = [];\n    keys = keys || this._selection.getSelectedItemKeys();\n    that._editStrategy.beginCache();\n    each(keys, function (_, key) {\n      var selectedIndex = that._getIndexByKey(key);\n      if (indexExists(selectedIndex)) {\n        indices.push(selectedIndex);\n      }\n    });\n    that._editStrategy.endCache();\n    return indices;\n  },\n  _initMarkup: function () {\n    this._rendering = true;\n    if (!this._dataController.isLoading()) {\n      this._syncSelectionOptions().done(() => this._normalizeSelectedItems());\n    }\n    this.callBase();\n  },\n  _render: function () {\n    this.callBase();\n    this._rendering = false;\n  },\n  _fireContentReadyAction: function () {\n    this._rendering = false;\n    this._rendered = true;\n    this.callBase.apply(this, arguments);\n  },\n  _syncSelectionOptions: function (byOption) {\n    byOption = byOption || this._chooseSelectOption();\n    var selectedItem;\n    var selectedIndex;\n    var selectedItemKeys;\n    var selectedItems;\n    switch (byOption) {\n      case \"selectedIndex\":\n        selectedItem = this._editStrategy.getItemDataByIndex(this.option(\"selectedIndex\"));\n        if (isDefined(selectedItem)) {\n          this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\n          this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n          this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]));\n        } else {\n          this._setOptionWithoutOptionChange(\"selectedItems\", []);\n          this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\n          this._setOptionWithoutOptionChange(\"selectedItem\", null);\n        }\n        break;\n      case \"selectedItems\":\n        selectedItems = this.option(\"selectedItems\") || [];\n        selectedIndex = selectedItems.length ? this._editStrategy.getIndexByItemData(selectedItems[0]) : NOT_EXISTING_INDEX;\n        if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\n          return this._syncSelectionOptions(\"selectedIndex\");\n        }\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItems[0]);\n        this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems(selectedItems));\n        break;\n      case \"selectedItem\":\n        selectedItem = this.option(\"selectedItem\");\n        selectedIndex = this._editStrategy.getIndexByItemData(selectedItem);\n        if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\n          return this._syncSelectionOptions(\"selectedIndex\");\n        }\n        if (isDefined(selectedItem)) {\n          this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\n          this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\n          this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]));\n        } else {\n          this._setOptionWithoutOptionChange(\"selectedItems\", []);\n          this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\n          this._setOptionWithoutOptionChange(\"selectedIndex\", NOT_EXISTING_INDEX);\n        }\n        break;\n      case \"selectedItemKeys\":\n        selectedItemKeys = this.option(\"selectedItemKeys\");\n        if (this.option(\"selectionRequired\")) {\n          var selectedItemIndex = this._getIndexByKey(selectedItemKeys[0]);\n          if (!indexExists(selectedItemIndex)) {\n            return this._syncSelectionOptions(\"selectedIndex\");\n          }\n        }\n        return this._selection.setSelection(selectedItemKeys);\n    }\n    return new Deferred().resolve().promise();\n  },\n  _chooseSelectOption: function () {\n    var optionName = \"selectedIndex\";\n    var isOptionDefined = function (optionName) {\n      var optionValue = this.option(optionName);\n      var length = isDefined(optionValue) && optionValue.length;\n      return length || optionName in this._userOptions;\n    }.bind(this);\n    if (isOptionDefined(\"selectedItems\")) {\n      optionName = \"selectedItems\";\n    } else if (isOptionDefined(\"selectedItem\")) {\n      optionName = \"selectedItem\";\n    } else if (isOptionDefined(\"selectedItemKeys\")) {\n      optionName = \"selectedItemKeys\";\n    }\n    return optionName;\n  },\n  _compareKeys: function (oldKeys, newKeys) {\n    if (oldKeys.length !== newKeys.length) {\n      return false;\n    }\n    for (var i = 0; i < newKeys.length; i++) {\n      if (oldKeys[i] !== newKeys[i]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  _normalizeSelectedItems: function () {\n    if (\"none\" === this.option(\"selectionMode\")) {\n      this._setOptionWithoutOptionChange(\"selectedItems\", []);\n      this._syncSelectionOptions(\"selectedItems\");\n    } else if (\"single\" === this.option(\"selectionMode\")) {\n      var newSelection = this.option(\"selectedItems\");\n      if (newSelection.length > 1 || !newSelection.length && this.option(\"selectionRequired\") && this.option(\"items\") && this.option(\"items\").length) {\n        var currentSelection = this._selection.getSelectedItems();\n        var normalizedSelection = void 0 === newSelection[0] ? currentSelection[0] : newSelection[0];\n        if (void 0 === normalizedSelection) {\n          normalizedSelection = this._editStrategy.itemsGetter()[0];\n        }\n        if (this.option(\"grouped\") && normalizedSelection && normalizedSelection.items) {\n          normalizedSelection.items = [normalizedSelection.items[0]];\n        }\n        this._selection.setSelection(this._getKeysByItems([normalizedSelection]));\n        this._setOptionWithoutOptionChange(\"selectedItems\", [normalizedSelection]);\n        return this._syncSelectionOptions(\"selectedItems\");\n      } else {\n        this._selection.setSelection(this._getKeysByItems(newSelection));\n      }\n    } else {\n      var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\n      var oldKeys = this._selection.getSelectedItemKeys();\n      if (!this._compareKeys(oldKeys, newKeys)) {\n        this._selection.setSelection(newKeys);\n      }\n    }\n    return new Deferred().resolve().promise();\n  },\n  _itemClickHandler: function (e) {\n    var itemSelectPromise = new Deferred().resolve();\n    var callBase = this.callBase;\n    this._createAction(function (e) {\n      var _this$_itemSelectHand;\n      itemSelectPromise = null !== (_this$_itemSelectHand = this._itemSelectHandler(e.event)) && void 0 !== _this$_itemSelectHand ? _this$_itemSelectHand : itemSelectPromise;\n    }.bind(this), {\n      validatingTargetName: \"itemElement\"\n    })({\n      itemElement: $(e.currentTarget),\n      event: e\n    });\n    itemSelectPromise.always(() => {\n      callBase.apply(this, arguments);\n    });\n  },\n  _itemSelectHandler: function (e) {\n    var _itemSelectPromise;\n    var itemSelectPromise;\n    if (!this.option(\"selectionByClick\")) {\n      return;\n    }\n    var $itemElement = e.currentTarget;\n    if (this.isItemSelected($itemElement)) {\n      this.unselectItem(e.currentTarget);\n    } else {\n      itemSelectPromise = this.selectItem(e.currentTarget);\n    }\n    return null === (_itemSelectPromise = itemSelectPromise) || void 0 === _itemSelectPromise ? void 0 : _itemSelectPromise.promise();\n  },\n  _selectedItemElement: function (index) {\n    return this._itemElements().eq(index);\n  },\n  _postprocessRenderItem: function (args) {\n    if (\"none\" !== this.option(\"selectionMode\")) {\n      var $itemElement = $(args.itemElement);\n      var normalizedItemIndex = this._editStrategy.getNormalizedIndex($itemElement);\n      var isItemSelected = this._isItemSelected(normalizedItemIndex);\n      this._processSelectableItem($itemElement, isItemSelected);\n    }\n  },\n  _processSelectableItem: function ($itemElement, isSelected) {\n    $itemElement.toggleClass(this._selectedItemClass(), isSelected);\n    this._setAriaSelected($itemElement, String(isSelected));\n  },\n  _updateSelectedItems: function (args) {\n    var that = this;\n    var addedItemKeys = args.addedItemKeys;\n    var removedItemKeys = args.removedItemKeys;\n    if (that._rendered && (addedItemKeys.length || removedItemKeys.length)) {\n      var selectionChangePromise = that._selectionChangePromise;\n      if (!that._rendering) {\n        var addedSelection = [];\n        var normalizedIndex;\n        var removedSelection = [];\n        that._editStrategy.beginCache();\n        for (var i = 0; i < addedItemKeys.length; i++) {\n          normalizedIndex = that._getIndexByKey(addedItemKeys[i]);\n          addedSelection.push(normalizedIndex);\n          that._addSelection(normalizedIndex);\n        }\n        for (var _i = 0; _i < removedItemKeys.length; _i++) {\n          normalizedIndex = that._getIndexByKey(removedItemKeys[_i]);\n          removedSelection.push(normalizedIndex);\n          that._removeSelection(normalizedIndex);\n        }\n        that._editStrategy.endCache();\n        that._updateSelection(addedSelection, removedSelection);\n      }\n      when(selectionChangePromise).done(function () {\n        that._fireSelectionChangeEvent(args.addedItems, args.removedItems);\n      });\n    }\n  },\n  _fireSelectionChangeEvent: function (addedItems, removedItems) {\n    this._createActionByOption(\"onSelectionChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    })({\n      addedItems: addedItems,\n      removedItems: removedItems\n    });\n  },\n  _updateSelection: noop,\n  _setAriaSelected: function ($target, value) {\n    this.setAria(\"selected\", value, $target);\n  },\n  _removeSelection: function (normalizedIndex) {\n    var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\n    if (indexExists(normalizedIndex)) {\n      this._processSelectableItem($itemElement, false);\n      eventsEngine.triggerHandler($itemElement, \"stateChanged\", false);\n    }\n  },\n  _addSelection: function (normalizedIndex) {\n    var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\n    if (indexExists(normalizedIndex)) {\n      this._processSelectableItem($itemElement, true);\n      eventsEngine.triggerHandler($itemElement, \"stateChanged\", true);\n    }\n  },\n  _isItemSelected: function (index) {\n    var key = this._getKeyByIndex(index);\n    return this._selection.isItemSelected(key, {\n      checkPending: true\n    });\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"selectionMode\":\n        this._invalidate();\n        break;\n      case \"dataSource\":\n        if (!args.value || Array.isArray(args.value) && !args.value.length) {\n          this.option(\"selectedItemKeys\", []);\n        }\n        this.callBase(args);\n        break;\n      case \"selectedIndex\":\n      case \"selectedItem\":\n      case \"selectedItems\":\n      case \"selectedItemKeys\":\n        this._syncSelectionOptions(args.name).done(() => this._normalizeSelectedItems());\n        break;\n      case \"keyExpr\":\n        this._initKeyGetter();\n        break;\n      case \"selectionRequired\":\n        this._normalizeSelectedItems();\n        break;\n      case \"selectionByClick\":\n      case \"onSelectionChanged\":\n      case \"onItemDeleting\":\n      case \"onItemDeleted\":\n      case \"onItemReordered\":\n      case \"maxFilterLengthInRequest\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _clearSelectedItems: function () {\n    this._setOptionWithoutOptionChange(\"selectedItems\", []);\n    this._syncSelectionOptions(\"selectedItems\");\n  },\n  _waitDeletingPrepare: function ($itemElement) {\n    if ($itemElement.data(ITEM_DELETING_DATA_KEY)) {\n      return new Deferred().resolve().promise();\n    }\n    $itemElement.data(ITEM_DELETING_DATA_KEY, true);\n    var deferred = new Deferred();\n    var deletingActionArgs = {\n      cancel: false\n    };\n    var deletePromise = this._itemEventHandler($itemElement, \"onItemDeleting\", deletingActionArgs, {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    when(deletePromise).always(function (value) {\n      var deletePromiseExists = !deletePromise;\n      var deletePromiseResolved = !deletePromiseExists && \"resolved\" === deletePromise.state();\n      var argumentsSpecified = !!arguments.length;\n      var shouldDelete = deletePromiseExists || deletePromiseResolved && !argumentsSpecified || deletePromiseResolved && value;\n      when(fromPromise(deletingActionArgs.cancel)).always(function () {\n        $itemElement.data(ITEM_DELETING_DATA_KEY, false);\n      }).done(function (cancel) {\n        shouldDelete && !cancel ? deferred.resolve() : deferred.reject();\n      }).fail(deferred.reject);\n    }.bind(this));\n    return deferred.promise();\n  },\n  _deleteItemFromDS: function ($item) {\n    var dataController = this._dataController;\n    var deferred = new Deferred();\n    var disabledState = this.option(\"disabled\");\n    var dataStore = dataController.store();\n    if (!dataStore) {\n      return new Deferred().resolve().promise();\n    }\n    if (!dataStore.remove) {\n      throw errors.Error(\"E1011\");\n    }\n    this.option(\"disabled\", true);\n    dataStore.remove(dataController.keyOf(this._getItemData($item))).done(function (key) {\n      if (void 0 !== key) {\n        deferred.resolve();\n      } else {\n        deferred.reject();\n      }\n    }).fail(function () {\n      deferred.reject();\n    });\n    deferred.always(function () {\n      this.option(\"disabled\", disabledState);\n    }.bind(this));\n    return deferred;\n  },\n  _tryRefreshLastPage: function () {\n    var deferred = new Deferred();\n    if (this._isLastPage() || this.option(\"grouped\")) {\n      deferred.resolve();\n    } else {\n      this._refreshLastPage().done(function () {\n        deferred.resolve();\n      });\n    }\n    return deferred.promise();\n  },\n  _refreshLastPage: function () {\n    this._expectLastItemLoading();\n    return this._dataController.load();\n  },\n  _updateSelectionAfterDelete: function (index) {\n    var key = this._getKeyByIndex(index);\n    this._selection.deselect([key]);\n  },\n  _updateIndicesAfterIndex: function (index) {\n    var itemElements = this._itemElements();\n    for (var i = index + 1; i < itemElements.length; i++) {\n      $(itemElements[i]).data(this._itemIndexKey(), i - 1);\n    }\n  },\n  _simulateOptionChange: function (optionName) {\n    var optionValue = this.option(optionName);\n    if (optionValue instanceof DataSource) {\n      return;\n    }\n    this._optionChangedAction({\n      name: optionName,\n      fullName: optionName,\n      value: optionValue\n    });\n  },\n  isItemSelected: function (itemElement) {\n    return this._isItemSelected(this._editStrategy.getNormalizedIndex(itemElement));\n  },\n  selectItem: function (itemElement) {\n    if (\"none\" === this.option(\"selectionMode\")) {\n      return;\n    }\n    var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\n    if (!indexExists(itemIndex)) {\n      return;\n    }\n    var key = this._getKeyByIndex(itemIndex);\n    if (this._selection.isItemSelected(key)) {\n      return;\n    }\n    if (\"single\" === this.option(\"selectionMode\")) {\n      return this._selection.setSelection([key]);\n    } else {\n      var selectedItemKeys = this.option(\"selectedItemKeys\") || [];\n      return this._selection.setSelection([...selectedItemKeys, key], [key]);\n    }\n  },\n  unselectItem: function (itemElement) {\n    var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\n    if (!indexExists(itemIndex)) {\n      return;\n    }\n    var selectedItemKeys = this._selection.getSelectedItemKeys();\n    if (this.option(\"selectionRequired\") && selectedItemKeys.length <= 1) {\n      return;\n    }\n    var key = this._getKeyByIndex(itemIndex);\n    if (!this._selection.isItemSelected(key, {\n      checkPending: true\n    })) {\n      return;\n    }\n    this._selection.deselect([key]);\n  },\n  _deleteItemElementByIndex: function (index) {\n    this._updateSelectionAfterDelete(index);\n    this._updateIndicesAfterIndex(index);\n    this._editStrategy.deleteItemAtIndex(index);\n  },\n  _afterItemElementDeleted: function ($item, deletedActionArgs) {\n    var changingOption = this._dataController.getDataSource() ? \"dataSource\" : \"items\";\n    this._simulateOptionChange(changingOption);\n    this._itemEventHandler($item, \"onItemDeleted\", deletedActionArgs, {\n      beforeExecute: function () {\n        $item.remove();\n      },\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    this._renderEmptyMessage();\n  },\n  deleteItem: function (itemElement) {\n    var that = this;\n    var deferred = new Deferred();\n    var $item = this._editStrategy.getItemElement(itemElement);\n    var index = this._editStrategy.getNormalizedIndex(itemElement);\n    var itemResponseWaitClass = this._itemResponseWaitClass();\n    if (indexExists(index)) {\n      this._waitDeletingPrepare($item).done(function () {\n        $item.addClass(itemResponseWaitClass);\n        var deletedActionArgs = that._extendActionArgs($item);\n        that._deleteItemFromDS($item).done(function () {\n          that._deleteItemElementByIndex(index);\n          that._afterItemElementDeleted($item, deletedActionArgs);\n          that._tryRefreshLastPage().done(function () {\n            deferred.resolveWith(that);\n          });\n        }).fail(function () {\n          $item.removeClass(itemResponseWaitClass);\n          deferred.rejectWith(that);\n        });\n      }).fail(function () {\n        deferred.rejectWith(that);\n      });\n    } else {\n      deferred.rejectWith(that);\n    }\n    return deferred.promise();\n  },\n  reorderItem: function (itemElement, toItemElement) {\n    var deferred = new Deferred();\n    var that = this;\n    var strategy = this._editStrategy;\n    var $movingItem = strategy.getItemElement(itemElement);\n    var $destinationItem = strategy.getItemElement(toItemElement);\n    var movingIndex = strategy.getNormalizedIndex(itemElement);\n    var destinationIndex = strategy.getNormalizedIndex(toItemElement);\n    var changingOption = this._dataController.getDataSource() ? \"dataSource\" : \"items\";\n    var canMoveItems = indexExists(movingIndex) && indexExists(destinationIndex) && movingIndex !== destinationIndex;\n    if (canMoveItems) {\n      deferred.resolveWith(this);\n    } else {\n      deferred.rejectWith(this);\n    }\n    return deferred.promise().done(function () {\n      $destinationItem[strategy.itemPlacementFunc(movingIndex, destinationIndex)]($movingItem);\n      strategy.moveItemAtIndexToIndex(movingIndex, destinationIndex);\n      this._updateIndicesAfterIndex(movingIndex);\n      that.option(\"selectedItems\", that._getItemsByKeys(that._selection.getSelectedItemKeys(), that._selection.getSelectedItems()));\n      if (\"items\" === changingOption) {\n        that._simulateOptionChange(changingOption);\n      }\n      that._itemEventHandler($movingItem, \"onItemReordered\", {\n        fromIndex: strategy.getIndex(movingIndex),\n        toIndex: strategy.getIndex(destinationIndex)\n      }, {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      });\n    });\n  }\n});\nexport default CollectionWidget;","map":{"version":3,"names":["$","eventsEngine","BaseCollectionWidget","errors","extend","each","noop","isDefined","PlainEditStrategy","compileGetter","DataSource","normalizeLoadResult","Selection","when","Deferred","fromPromise","ITEM_DELETING_DATA_KEY","NOT_EXISTING_INDEX","indexExists","index","CollectionWidget","inherit","_setOptionsByReference","callBase","_optionsByReference","selectedItem","_getDefaultOptions","selectionMode","selectionRequired","selectionByClick","selectedItems","selectedItemKeys","maxFilterLengthInRequest","keyExpr","selectedIndex","onSelectionChanged","onItemReordered","onItemDeleting","onItemDeleted","ctor","element","options","_userOptions","_init","_initEditStrategy","_initKeyGetter","_initSelectionModule","_keyGetter","option","_getKeysByItems","_editStrategy","getKeysByItems","_getItemsByKeys","getItemsByKeys","_getKeyByIndex","getKeyByIndex","_getIndexByKey","key","getIndexByKey","_getIndexByItemData","itemData","getIndexByItemData","_isKeySpecified","_dataController","_getCombinedFilter","filter","keyOf","item","store","_nullValueSelectionSupported","that","itemsGetter","_selection","allowNullValue","mode","equalByReference","args","addedItemKeys","length","removedItemKeys","_updateSelectedItems","bind","totalCount","items","_getItemsCount","load","_dataController$loadO","dataController","customQueryParams","loadOptions","userData","loadFromStore","done","loadResult","_disposed","data","applyMapFunction","resolve","plainItems","dataFields","select","reduce","itemsCount","Strategy","_getSelectedItemIndices","keys","indices","getSelectedItemKeys","beginCache","_","push","endCache","_initMarkup","_rendering","isLoading","_syncSelectionOptions","_normalizeSelectedItems","_render","_fireContentReadyAction","_rendered","apply","arguments","byOption","_chooseSelectOption","getItemDataByIndex","_setOptionWithoutOptionChange","selectedItemIndex","setSelection","promise","optionName","isOptionDefined","optionValue","_compareKeys","oldKeys","newKeys","i","newSelection","currentSelection","getSelectedItems","normalizedSelection","_itemClickHandler","e","itemSelectPromise","_createAction","_this$_itemSelectHand","_itemSelectHandler","event","validatingTargetName","itemElement","currentTarget","always","_itemSelectPromise","$itemElement","isItemSelected","unselectItem","selectItem","_selectedItemElement","_itemElements","eq","_postprocessRenderItem","normalizedItemIndex","getNormalizedIndex","_isItemSelected","_processSelectableItem","isSelected","toggleClass","_selectedItemClass","_setAriaSelected","String","selectionChangePromise","_selectionChangePromise","addedSelection","normalizedIndex","removedSelection","_addSelection","_i","_removeSelection","_updateSelection","_fireSelectionChangeEvent","addedItems","removedItems","_createActionByOption","excludeValidators","$target","value","setAria","getItemElement","triggerHandler","checkPending","_optionChanged","name","_invalidate","Array","isArray","_clearSelectedItems","_waitDeletingPrepare","deferred","deletingActionArgs","cancel","deletePromise","_itemEventHandler","deletePromiseExists","deletePromiseResolved","state","argumentsSpecified","shouldDelete","reject","fail","_deleteItemFromDS","$item","disabledState","dataStore","remove","Error","_getItemData","_tryRefreshLastPage","_isLastPage","_refreshLastPage","_expectLastItemLoading","_updateSelectionAfterDelete","deselect","_updateIndicesAfterIndex","itemElements","_itemIndexKey","_simulateOptionChange","_optionChangedAction","fullName","itemIndex","_deleteItemElementByIndex","deleteItemAtIndex","_afterItemElementDeleted","deletedActionArgs","changingOption","getDataSource","beforeExecute","_renderEmptyMessage","deleteItem","itemResponseWaitClass","_itemResponseWaitClass","addClass","_extendActionArgs","resolveWith","removeClass","rejectWith","reorderItem","toItemElement","strategy","$movingItem","$destinationItem","movingIndex","destinationIndex","canMoveItems","itemPlacementFunc","moveItemAtIndexToIndex","fromIndex","getIndex","toIndex"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/collection/ui.collection_widget.edit.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/collection/ui.collection_widget.edit.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport BaseCollectionWidget from \"./ui.collection_widget.base\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport PlainEditStrategy from \"./ui.collection_widget.edit.strategy.plain\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeLoadResult\r\n} from \"../../data/data_source/utils\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar ITEM_DELETING_DATA_KEY = \"dxItemDeleting\";\r\nvar NOT_EXISTING_INDEX = -1;\r\nvar indexExists = function(index) {\r\n    return index !== NOT_EXISTING_INDEX\r\n};\r\nvar CollectionWidget = BaseCollectionWidget.inherit({\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            selectionMode: \"none\",\r\n            selectionRequired: false,\r\n            selectionByClick: true,\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            maxFilterLengthInRequest: 1500,\r\n            keyExpr: null,\r\n            selectedIndex: NOT_EXISTING_INDEX,\r\n            selectedItem: null,\r\n            onSelectionChanged: null,\r\n            onItemReordered: null,\r\n            onItemDeleting: null,\r\n            onItemDeleted: null\r\n        })\r\n    },\r\n    ctor: function(element, options) {\r\n        this._userOptions = options || {};\r\n        this.callBase(element, options)\r\n    },\r\n    _init: function() {\r\n        this._initEditStrategy();\r\n        this.callBase();\r\n        this._initKeyGetter();\r\n        this._initSelectionModule()\r\n    },\r\n    _initKeyGetter: function() {\r\n        this._keyGetter = compileGetter(this.option(\"keyExpr\"))\r\n    },\r\n    _getKeysByItems: function(selectedItems) {\r\n        return this._editStrategy.getKeysByItems(selectedItems)\r\n    },\r\n    _getItemsByKeys: function(selectedItemKeys, selectedItems) {\r\n        return this._editStrategy.getItemsByKeys(selectedItemKeys, selectedItems)\r\n    },\r\n    _getKeyByIndex: function(index) {\r\n        return this._editStrategy.getKeyByIndex(index)\r\n    },\r\n    _getIndexByKey: function(key) {\r\n        return this._editStrategy.getIndexByKey(key)\r\n    },\r\n    _getIndexByItemData: function(itemData) {\r\n        return this._editStrategy.getIndexByItemData(itemData)\r\n    },\r\n    _isKeySpecified: function() {\r\n        return !!this._dataController.key()\r\n    },\r\n    _getCombinedFilter: function() {\r\n        return this._dataController.filter()\r\n    },\r\n    key: function() {\r\n        if (this.option(\"keyExpr\")) {\r\n            return this.option(\"keyExpr\")\r\n        }\r\n        return this._dataController.key()\r\n    },\r\n    keyOf: function(item) {\r\n        var key = item;\r\n        if (this.option(\"keyExpr\")) {\r\n            key = this._keyGetter(item)\r\n        } else if (this._dataController.store()) {\r\n            key = this._dataController.keyOf(item)\r\n        }\r\n        return key\r\n    },\r\n    _nullValueSelectionSupported: function() {\r\n        return false\r\n    },\r\n    _initSelectionModule: function() {\r\n        var that = this;\r\n        var itemsGetter = that._editStrategy.itemsGetter;\r\n        this._selection = new Selection({\r\n            allowNullValue: this._nullValueSelectionSupported(),\r\n            mode: this.option(\"selectionMode\"),\r\n            maxFilterLengthInRequest: this.option(\"maxFilterLengthInRequest\"),\r\n            equalByReference: !this._isKeySpecified(),\r\n            onSelectionChanged: function(args) {\r\n                if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                    that.option(\"selectedItems\", that._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\r\n                    that._updateSelectedItems(args)\r\n                }\r\n            },\r\n            filter: that._getCombinedFilter.bind(that),\r\n            totalCount: function() {\r\n                var items = that.option(\"items\");\r\n                var totalCount = that._dataController.totalCount();\r\n                return totalCount >= 0 ? totalCount : that._getItemsCount(items)\r\n            },\r\n            key: that.key.bind(that),\r\n            keyOf: that.keyOf.bind(that),\r\n            load: function(options) {\r\n                var _dataController$loadO;\r\n                var dataController = that._dataController;\r\n                options.customQueryParams = null === (_dataController$loadO = dataController.loadOptions()) || void 0 === _dataController$loadO ? void 0 : _dataController$loadO.customQueryParams;\r\n                options.userData = dataController.userData();\r\n                if (dataController.store()) {\r\n                    return dataController.loadFromStore(options).done((function(loadResult) {\r\n                        if (that._disposed) {\r\n                            return\r\n                        }\r\n                        var items = normalizeLoadResult(loadResult).data;\r\n                        dataController.applyMapFunction(items)\r\n                    }))\r\n                } else {\r\n                    return (new Deferred).resolve(this.plainItems())\r\n                }\r\n            },\r\n            dataFields: function() {\r\n                return that._dataController.select()\r\n            },\r\n            plainItems: itemsGetter.bind(that._editStrategy)\r\n        })\r\n    },\r\n    _getItemsCount: function(items) {\r\n        return items.reduce((itemsCount, item) => itemsCount + (item.items ? this._getItemsCount(item.items) : 1), 0)\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = PlainEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _getSelectedItemIndices: function(keys) {\r\n        var that = this;\r\n        var indices = [];\r\n        keys = keys || this._selection.getSelectedItemKeys();\r\n        that._editStrategy.beginCache();\r\n        each(keys, (function(_, key) {\r\n            var selectedIndex = that._getIndexByKey(key);\r\n            if (indexExists(selectedIndex)) {\r\n                indices.push(selectedIndex)\r\n            }\r\n        }));\r\n        that._editStrategy.endCache();\r\n        return indices\r\n    },\r\n    _initMarkup: function() {\r\n        this._rendering = true;\r\n        if (!this._dataController.isLoading()) {\r\n            this._syncSelectionOptions().done(() => this._normalizeSelectedItems())\r\n        }\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._rendering = false\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        this._rendering = false;\r\n        this._rendered = true;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _syncSelectionOptions: function(byOption) {\r\n        byOption = byOption || this._chooseSelectOption();\r\n        var selectedItem;\r\n        var selectedIndex;\r\n        var selectedItemKeys;\r\n        var selectedItems;\r\n        switch (byOption) {\r\n            case \"selectedIndex\":\r\n                selectedItem = this._editStrategy.getItemDataByIndex(this.option(\"selectedIndex\"));\r\n                if (isDefined(selectedItem)) {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\r\n                    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]))\r\n                } else {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItem\", null)\r\n                }\r\n                break;\r\n            case \"selectedItems\":\r\n                selectedItems = this.option(\"selectedItems\") || [];\r\n                selectedIndex = selectedItems.length ? this._editStrategy.getIndexByItemData(selectedItems[0]) : NOT_EXISTING_INDEX;\r\n                if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\r\n                    return this._syncSelectionOptions(\"selectedIndex\")\r\n                }\r\n                this._setOptionWithoutOptionChange(\"selectedItem\", selectedItems[0]);\r\n                this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\r\n                this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems(selectedItems));\r\n                break;\r\n            case \"selectedItem\":\r\n                selectedItem = this.option(\"selectedItem\");\r\n                selectedIndex = this._editStrategy.getIndexByItemData(selectedItem);\r\n                if (this.option(\"selectionRequired\") && !indexExists(selectedIndex)) {\r\n                    return this._syncSelectionOptions(\"selectedIndex\")\r\n                }\r\n                if (isDefined(selectedItem)) {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", [selectedItem]);\r\n                    this._setOptionWithoutOptionChange(\"selectedIndex\", selectedIndex);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._editStrategy.getKeysByItems([selectedItem]))\r\n                } else {\r\n                    this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedItemKeys\", []);\r\n                    this._setOptionWithoutOptionChange(\"selectedIndex\", NOT_EXISTING_INDEX)\r\n                }\r\n                break;\r\n            case \"selectedItemKeys\":\r\n                selectedItemKeys = this.option(\"selectedItemKeys\");\r\n                if (this.option(\"selectionRequired\")) {\r\n                    var selectedItemIndex = this._getIndexByKey(selectedItemKeys[0]);\r\n                    if (!indexExists(selectedItemIndex)) {\r\n                        return this._syncSelectionOptions(\"selectedIndex\")\r\n                    }\r\n                }\r\n                return this._selection.setSelection(selectedItemKeys)\r\n        }\r\n        return (new Deferred).resolve().promise()\r\n    },\r\n    _chooseSelectOption: function() {\r\n        var optionName = \"selectedIndex\";\r\n        var isOptionDefined = function(optionName) {\r\n            var optionValue = this.option(optionName);\r\n            var length = isDefined(optionValue) && optionValue.length;\r\n            return length || optionName in this._userOptions\r\n        }.bind(this);\r\n        if (isOptionDefined(\"selectedItems\")) {\r\n            optionName = \"selectedItems\"\r\n        } else if (isOptionDefined(\"selectedItem\")) {\r\n            optionName = \"selectedItem\"\r\n        } else if (isOptionDefined(\"selectedItemKeys\")) {\r\n            optionName = \"selectedItemKeys\"\r\n        }\r\n        return optionName\r\n    },\r\n    _compareKeys: function(oldKeys, newKeys) {\r\n        if (oldKeys.length !== newKeys.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < newKeys.length; i++) {\r\n            if (oldKeys[i] !== newKeys[i]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _normalizeSelectedItems: function() {\r\n        if (\"none\" === this.option(\"selectionMode\")) {\r\n            this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n            this._syncSelectionOptions(\"selectedItems\")\r\n        } else if (\"single\" === this.option(\"selectionMode\")) {\r\n            var newSelection = this.option(\"selectedItems\");\r\n            if (newSelection.length > 1 || !newSelection.length && this.option(\"selectionRequired\") && this.option(\"items\") && this.option(\"items\").length) {\r\n                var currentSelection = this._selection.getSelectedItems();\r\n                var normalizedSelection = void 0 === newSelection[0] ? currentSelection[0] : newSelection[0];\r\n                if (void 0 === normalizedSelection) {\r\n                    normalizedSelection = this._editStrategy.itemsGetter()[0]\r\n                }\r\n                if (this.option(\"grouped\") && normalizedSelection && normalizedSelection.items) {\r\n                    normalizedSelection.items = [normalizedSelection.items[0]]\r\n                }\r\n                this._selection.setSelection(this._getKeysByItems([normalizedSelection]));\r\n                this._setOptionWithoutOptionChange(\"selectedItems\", [normalizedSelection]);\r\n                return this._syncSelectionOptions(\"selectedItems\")\r\n            } else {\r\n                this._selection.setSelection(this._getKeysByItems(newSelection))\r\n            }\r\n        } else {\r\n            var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\r\n            var oldKeys = this._selection.getSelectedItemKeys();\r\n            if (!this._compareKeys(oldKeys, newKeys)) {\r\n                this._selection.setSelection(newKeys)\r\n            }\r\n        }\r\n        return (new Deferred).resolve().promise()\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        var itemSelectPromise = (new Deferred).resolve();\r\n        var callBase = this.callBase;\r\n        this._createAction(function(e) {\r\n            var _this$_itemSelectHand;\r\n            itemSelectPromise = null !== (_this$_itemSelectHand = this._itemSelectHandler(e.event)) && void 0 !== _this$_itemSelectHand ? _this$_itemSelectHand : itemSelectPromise\r\n        }.bind(this), {\r\n            validatingTargetName: \"itemElement\"\r\n        })({\r\n            itemElement: $(e.currentTarget),\r\n            event: e\r\n        });\r\n        itemSelectPromise.always(() => {\r\n            callBase.apply(this, arguments)\r\n        })\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        var _itemSelectPromise;\r\n        var itemSelectPromise;\r\n        if (!this.option(\"selectionByClick\")) {\r\n            return\r\n        }\r\n        var $itemElement = e.currentTarget;\r\n        if (this.isItemSelected($itemElement)) {\r\n            this.unselectItem(e.currentTarget)\r\n        } else {\r\n            itemSelectPromise = this.selectItem(e.currentTarget)\r\n        }\r\n        return null === (_itemSelectPromise = itemSelectPromise) || void 0 === _itemSelectPromise ? void 0 : _itemSelectPromise.promise()\r\n    },\r\n    _selectedItemElement: function(index) {\r\n        return this._itemElements().eq(index)\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        if (\"none\" !== this.option(\"selectionMode\")) {\r\n            var $itemElement = $(args.itemElement);\r\n            var normalizedItemIndex = this._editStrategy.getNormalizedIndex($itemElement);\r\n            var isItemSelected = this._isItemSelected(normalizedItemIndex);\r\n            this._processSelectableItem($itemElement, isItemSelected)\r\n        }\r\n    },\r\n    _processSelectableItem: function($itemElement, isSelected) {\r\n        $itemElement.toggleClass(this._selectedItemClass(), isSelected);\r\n        this._setAriaSelected($itemElement, String(isSelected))\r\n    },\r\n    _updateSelectedItems: function(args) {\r\n        var that = this;\r\n        var addedItemKeys = args.addedItemKeys;\r\n        var removedItemKeys = args.removedItemKeys;\r\n        if (that._rendered && (addedItemKeys.length || removedItemKeys.length)) {\r\n            var selectionChangePromise = that._selectionChangePromise;\r\n            if (!that._rendering) {\r\n                var addedSelection = [];\r\n                var normalizedIndex;\r\n                var removedSelection = [];\r\n                that._editStrategy.beginCache();\r\n                for (var i = 0; i < addedItemKeys.length; i++) {\r\n                    normalizedIndex = that._getIndexByKey(addedItemKeys[i]);\r\n                    addedSelection.push(normalizedIndex);\r\n                    that._addSelection(normalizedIndex)\r\n                }\r\n                for (var _i = 0; _i < removedItemKeys.length; _i++) {\r\n                    normalizedIndex = that._getIndexByKey(removedItemKeys[_i]);\r\n                    removedSelection.push(normalizedIndex);\r\n                    that._removeSelection(normalizedIndex)\r\n                }\r\n                that._editStrategy.endCache();\r\n                that._updateSelection(addedSelection, removedSelection)\r\n            }\r\n            when(selectionChangePromise).done((function() {\r\n                that._fireSelectionChangeEvent(args.addedItems, args.removedItems)\r\n            }))\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _updateSelection: noop,\r\n    _setAriaSelected: function($target, value) {\r\n        this.setAria(\"selected\", value, $target)\r\n    },\r\n    _removeSelection: function(normalizedIndex) {\r\n        var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\r\n        if (indexExists(normalizedIndex)) {\r\n            this._processSelectableItem($itemElement, false);\r\n            eventsEngine.triggerHandler($itemElement, \"stateChanged\", false)\r\n        }\r\n    },\r\n    _addSelection: function(normalizedIndex) {\r\n        var $itemElement = this._editStrategy.getItemElement(normalizedIndex);\r\n        if (indexExists(normalizedIndex)) {\r\n            this._processSelectableItem($itemElement, true);\r\n            eventsEngine.triggerHandler($itemElement, \"stateChanged\", true)\r\n        }\r\n    },\r\n    _isItemSelected: function(index) {\r\n        var key = this._getKeyByIndex(index);\r\n        return this._selection.isItemSelected(key, {\r\n            checkPending: true\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectionMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dataSource\":\r\n                if (!args.value || Array.isArray(args.value) && !args.value.length) {\r\n                    this.option(\"selectedItemKeys\", [])\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n            case \"selectedItems\":\r\n            case \"selectedItemKeys\":\r\n                this._syncSelectionOptions(args.name).done(() => this._normalizeSelectedItems());\r\n                break;\r\n            case \"keyExpr\":\r\n                this._initKeyGetter();\r\n                break;\r\n            case \"selectionRequired\":\r\n                this._normalizeSelectedItems();\r\n                break;\r\n            case \"selectionByClick\":\r\n            case \"onSelectionChanged\":\r\n            case \"onItemDeleting\":\r\n            case \"onItemDeleted\":\r\n            case \"onItemReordered\":\r\n            case \"maxFilterLengthInRequest\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearSelectedItems: function() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", []);\r\n        this._syncSelectionOptions(\"selectedItems\")\r\n    },\r\n    _waitDeletingPrepare: function($itemElement) {\r\n        if ($itemElement.data(ITEM_DELETING_DATA_KEY)) {\r\n            return (new Deferred).resolve().promise()\r\n        }\r\n        $itemElement.data(ITEM_DELETING_DATA_KEY, true);\r\n        var deferred = new Deferred;\r\n        var deletingActionArgs = {\r\n            cancel: false\r\n        };\r\n        var deletePromise = this._itemEventHandler($itemElement, \"onItemDeleting\", deletingActionArgs, {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        when(deletePromise).always(function(value) {\r\n            var deletePromiseExists = !deletePromise;\r\n            var deletePromiseResolved = !deletePromiseExists && \"resolved\" === deletePromise.state();\r\n            var argumentsSpecified = !!arguments.length;\r\n            var shouldDelete = deletePromiseExists || deletePromiseResolved && !argumentsSpecified || deletePromiseResolved && value;\r\n            when(fromPromise(deletingActionArgs.cancel)).always((function() {\r\n                $itemElement.data(ITEM_DELETING_DATA_KEY, false)\r\n            })).done((function(cancel) {\r\n                shouldDelete && !cancel ? deferred.resolve() : deferred.reject()\r\n            })).fail(deferred.reject)\r\n        }.bind(this));\r\n        return deferred.promise()\r\n    },\r\n    _deleteItemFromDS: function($item) {\r\n        var dataController = this._dataController;\r\n        var deferred = new Deferred;\r\n        var disabledState = this.option(\"disabled\");\r\n        var dataStore = dataController.store();\r\n        if (!dataStore) {\r\n            return (new Deferred).resolve().promise()\r\n        }\r\n        if (!dataStore.remove) {\r\n            throw errors.Error(\"E1011\")\r\n        }\r\n        this.option(\"disabled\", true);\r\n        dataStore.remove(dataController.keyOf(this._getItemData($item))).done((function(key) {\r\n            if (void 0 !== key) {\r\n                deferred.resolve()\r\n            } else {\r\n                deferred.reject()\r\n            }\r\n        })).fail((function() {\r\n            deferred.reject()\r\n        }));\r\n        deferred.always(function() {\r\n            this.option(\"disabled\", disabledState)\r\n        }.bind(this));\r\n        return deferred\r\n    },\r\n    _tryRefreshLastPage: function() {\r\n        var deferred = new Deferred;\r\n        if (this._isLastPage() || this.option(\"grouped\")) {\r\n            deferred.resolve()\r\n        } else {\r\n            this._refreshLastPage().done((function() {\r\n                deferred.resolve()\r\n            }))\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _refreshLastPage: function() {\r\n        this._expectLastItemLoading();\r\n        return this._dataController.load()\r\n    },\r\n    _updateSelectionAfterDelete: function(index) {\r\n        var key = this._getKeyByIndex(index);\r\n        this._selection.deselect([key])\r\n    },\r\n    _updateIndicesAfterIndex: function(index) {\r\n        var itemElements = this._itemElements();\r\n        for (var i = index + 1; i < itemElements.length; i++) {\r\n            $(itemElements[i]).data(this._itemIndexKey(), i - 1)\r\n        }\r\n    },\r\n    _simulateOptionChange: function(optionName) {\r\n        var optionValue = this.option(optionName);\r\n        if (optionValue instanceof DataSource) {\r\n            return\r\n        }\r\n        this._optionChangedAction({\r\n            name: optionName,\r\n            fullName: optionName,\r\n            value: optionValue\r\n        })\r\n    },\r\n    isItemSelected: function(itemElement) {\r\n        return this._isItemSelected(this._editStrategy.getNormalizedIndex(itemElement))\r\n    },\r\n    selectItem: function(itemElement) {\r\n        if (\"none\" === this.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\r\n        if (!indexExists(itemIndex)) {\r\n            return\r\n        }\r\n        var key = this._getKeyByIndex(itemIndex);\r\n        if (this._selection.isItemSelected(key)) {\r\n            return\r\n        }\r\n        if (\"single\" === this.option(\"selectionMode\")) {\r\n            return this._selection.setSelection([key])\r\n        } else {\r\n            var selectedItemKeys = this.option(\"selectedItemKeys\") || [];\r\n            return this._selection.setSelection([...selectedItemKeys, key], [key])\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemIndex = this._editStrategy.getNormalizedIndex(itemElement);\r\n        if (!indexExists(itemIndex)) {\r\n            return\r\n        }\r\n        var selectedItemKeys = this._selection.getSelectedItemKeys();\r\n        if (this.option(\"selectionRequired\") && selectedItemKeys.length <= 1) {\r\n            return\r\n        }\r\n        var key = this._getKeyByIndex(itemIndex);\r\n        if (!this._selection.isItemSelected(key, {\r\n                checkPending: true\r\n            })) {\r\n            return\r\n        }\r\n        this._selection.deselect([key])\r\n    },\r\n    _deleteItemElementByIndex: function(index) {\r\n        this._updateSelectionAfterDelete(index);\r\n        this._updateIndicesAfterIndex(index);\r\n        this._editStrategy.deleteItemAtIndex(index)\r\n    },\r\n    _afterItemElementDeleted: function($item, deletedActionArgs) {\r\n        var changingOption = this._dataController.getDataSource() ? \"dataSource\" : \"items\";\r\n        this._simulateOptionChange(changingOption);\r\n        this._itemEventHandler($item, \"onItemDeleted\", deletedActionArgs, {\r\n            beforeExecute: function() {\r\n                $item.remove()\r\n            },\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._renderEmptyMessage()\r\n    },\r\n    deleteItem: function(itemElement) {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        var $item = this._editStrategy.getItemElement(itemElement);\r\n        var index = this._editStrategy.getNormalizedIndex(itemElement);\r\n        var itemResponseWaitClass = this._itemResponseWaitClass();\r\n        if (indexExists(index)) {\r\n            this._waitDeletingPrepare($item).done((function() {\r\n                $item.addClass(itemResponseWaitClass);\r\n                var deletedActionArgs = that._extendActionArgs($item);\r\n                that._deleteItemFromDS($item).done((function() {\r\n                    that._deleteItemElementByIndex(index);\r\n                    that._afterItemElementDeleted($item, deletedActionArgs);\r\n                    that._tryRefreshLastPage().done((function() {\r\n                        deferred.resolveWith(that)\r\n                    }))\r\n                })).fail((function() {\r\n                    $item.removeClass(itemResponseWaitClass);\r\n                    deferred.rejectWith(that)\r\n                }))\r\n            })).fail((function() {\r\n                deferred.rejectWith(that)\r\n            }))\r\n        } else {\r\n            deferred.rejectWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    reorderItem: function(itemElement, toItemElement) {\r\n        var deferred = new Deferred;\r\n        var that = this;\r\n        var strategy = this._editStrategy;\r\n        var $movingItem = strategy.getItemElement(itemElement);\r\n        var $destinationItem = strategy.getItemElement(toItemElement);\r\n        var movingIndex = strategy.getNormalizedIndex(itemElement);\r\n        var destinationIndex = strategy.getNormalizedIndex(toItemElement);\r\n        var changingOption = this._dataController.getDataSource() ? \"dataSource\" : \"items\";\r\n        var canMoveItems = indexExists(movingIndex) && indexExists(destinationIndex) && movingIndex !== destinationIndex;\r\n        if (canMoveItems) {\r\n            deferred.resolveWith(this)\r\n        } else {\r\n            deferred.rejectWith(this)\r\n        }\r\n        return deferred.promise().done((function() {\r\n            $destinationItem[strategy.itemPlacementFunc(movingIndex, destinationIndex)]($movingItem);\r\n            strategy.moveItemAtIndexToIndex(movingIndex, destinationIndex);\r\n            this._updateIndicesAfterIndex(movingIndex);\r\n            that.option(\"selectedItems\", that._getItemsByKeys(that._selection.getSelectedItemKeys(), that._selection.getSelectedItems()));\r\n            if (\"items\" === changingOption) {\r\n                that._simulateOptionChange(changingOption)\r\n            }\r\n            that._itemEventHandler($movingItem, \"onItemReordered\", {\r\n                fromIndex: strategy.getIndex(movingIndex),\r\n                toIndex: strategy.getIndex(destinationIndex)\r\n            }, {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            })\r\n        }))\r\n    }\r\n});\r\nexport default CollectionWidget;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}