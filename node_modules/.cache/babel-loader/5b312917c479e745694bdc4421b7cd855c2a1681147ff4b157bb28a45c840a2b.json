{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../../ui/widget/ui.errors\";\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\nimport TextBox from \"../../ui/text_box\";\nimport query from \"../../data/query\";\nimport storeHelper from \"../../data/store_helper\";\nimport HierarchicalDataConverter from \"./ui.data_converter\";\nvar EXPANDED = \"expanded\";\nvar SELECTED = \"selected\";\nvar DISABLED = \"disabled\";\nuiSearchBoxMixin.setEditorClass(TextBox);\nvar DataAdapter = Class.inherit({\n  ctor: function (options) {\n    this.options = {};\n    extend(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n    this._createInternalDataStructure();\n    this.getTreeNodes();\n  },\n  setOption: function (name, value) {\n    this.options[name] = value;\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function () {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new HierarchicalDataConverter(),\n      onNodeChanged: noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function () {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n    this._updateSelection();\n    this._updateExpansion();\n  },\n  _updateSelection: function () {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n      this._setParentSelection();\n    }\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function (key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function (property) {\n    var that = this;\n    var array = [];\n    each(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function () {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function (node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function (data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function (key) {\n    var that = this;\n    var node = this.getNodeByKey(key);\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function (node, recursive, callback, processedKeys) {\n    if (!isFunction(callback)) {\n      return;\n    }\n    var that = this;\n    var nodeKey = node.internalFields.key;\n    processedKeys = processedKeys || [];\n    if (-1 === processedKeys.indexOf(nodeKey)) {\n      processedKeys.push(nodeKey);\n      each(node.internalFields.childrenKeys, function (_, key) {\n        var child = that.getNodeByKey(key);\n        callback(child);\n        if (child.internalFields.childrenKeys.length && recursive) {\n          that._iterateChildren(child, recursive, callback, processedKeys);\n        }\n      });\n    }\n  },\n  _iterateParents: function (node, callback, processedKeys) {\n    if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\n      return;\n    }\n    processedKeys = processedKeys || [];\n    var key = node.internalFields.key;\n    if (-1 === processedKeys.indexOf(key)) {\n      processedKeys.push(key);\n      var parent = this.options.dataConverter.getParentNode(node);\n      if (parent) {\n        callback(parent);\n        if (parent.internalFields.parentKey !== this.options.rootValue) {\n          this._iterateParents(parent, callback, processedKeys);\n        }\n      }\n    }\n  },\n  _calculateSelectedState: function (node) {\n    var itemsCount = node.internalFields.childrenKeys.length;\n    var selectedItemsCount = 0;\n    var invisibleItemsCount = 0;\n    var result = false;\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\n      var isChildInvisible = false === childNode.internalFields.item.visible;\n      var childState = childNode.internalFields.selected;\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n      if (childState) {\n        selectedItemsCount++;\n      } else if (void 0 === childState) {\n        selectedItemsCount += .5;\n      }\n    }\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n    return result;\n  },\n  _toggleChildrenSelection: function (node, state) {\n    var that = this;\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function (node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n    node.internalFields[field] = state;\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function (keys) {\n    var that = this;\n    each(keys, function (_, key) {\n      var index = that.getIndexByKey(key);\n      var node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function (key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n    this._markChildren(node.internalFields.childrenKeys);\n    var that = this;\n    var counter = 0;\n    var items = extend([], this._dataStructure);\n    each(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n        counter++;\n      }\n    });\n  },\n  _addNode: function (item) {\n    var dataConverter = this.options.dataConverter;\n    var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function () {\n    this.options.dataConverter.updateChildrenKeys();\n    this._updateSelection();\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function () {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function () {\n    return this._expandedNodesKeys;\n  },\n  getData: function () {\n    return this._dataStructure;\n  },\n  getFullData: function () {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function (item) {\n    var result = null;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function (items) {\n    var that = this;\n    var nodes = [];\n    each(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function (key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function () {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function () {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function () {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function (node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function () {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function (parentKey) {\n    return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function (key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function (item) {\n    this._addNode(item);\n    this._updateFields();\n  },\n  removeItem: function (key) {\n    this._removeNode(key);\n    this._updateFields();\n  },\n  toggleSelection: function (key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state);\n    var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n    this._setFieldState(node, SELECTED, state);\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n      this._setParentSelection();\n    }\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function (selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function (key, state) {\n    var node = this.getNodeByKey(key);\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function (state) {\n    if (!isDefined(state)) {\n      return;\n    }\n    var that = this;\n    var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\n    var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    each(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function () {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function (key, state) {\n    var node = this.getNodeByKey(key);\n    this._setFieldState(node, EXPANDED, state);\n    if (state) {\n      this._updateExpansion(key);\n    }\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function (item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function (selector, value, operation) {\n    var searchFilter = [];\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n    each(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function (filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\n    var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\n    var criteria = this._createCriteria(selector, filterValue, operation);\n    dataStructure = dataStructure || this._initialDataStructure;\n    return query(dataStructure).filter(criteria).toArray();\n  },\n  search: function (searchValue) {\n    var that = this;\n    var matches = this._filterDataStructure(searchValue);\n    var dataConverter = this.options.dataConverter;\n    !function lookForParents(matches, index) {\n      var length = matches.length;\n      while (index < length) {\n        var node = matches[index];\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n        var parent = dataConverter.getParentNode(node);\n        if (!parent) {\n          errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n          index++;\n          continue;\n        }\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n        if (matches.includes(parent)) {\n          index++;\n          continue;\n        }\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }(matches, 0);\n    if (this.options.sort) {\n      matches = storeHelper.queryByOptions(query(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n    dataConverter._indexByKey = {};\n    each(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\nexport default DataAdapter;","map":{"version":3,"names":["Class","noop","each","isFunction","isDefined","extend","errors","uiSearchBoxMixin","TextBox","query","storeHelper","HierarchicalDataConverter","EXPANDED","SELECTED","DISABLED","setEditorClass","DataAdapter","inherit","ctor","options","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","processedKeys","nodeKey","indexOf","child","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","getOperationBySearchMode","criteria","matches","lookForParents","log","includes","queryByOptions","_indexByKey","setChildrenKeys"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/hierarchical_collection/ui.data_adapter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../../ui/widget/ui.errors\";\r\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\r\nimport TextBox from \"../../ui/text_box\";\r\nimport query from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport HierarchicalDataConverter from \"./ui.data_converter\";\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nuiSearchBoxMixin.setEditorClass(TextBox);\r\nvar DataAdapter = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        extend(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new HierarchicalDataConverter,\r\n            onNodeChanged: noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        each(that._getDataBySelectionMode(), (function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        }));\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        }))\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, (function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        }))\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, (function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        }))\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!isFunction(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (-1 === processedKeys.indexOf(nodeKey)) {\r\n            processedKeys.push(nodeKey);\r\n            each(node.internalFields.childrenKeys, (function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (-1 === processedKeys.indexOf(key)) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else if (void 0 === childState) {\r\n                selectedItemsCount += .5\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, (function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        }))\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        each(keys, (function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        }))\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = extend([], this._dataStructure);\r\n        each(items, (function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        }))\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        each(items, (function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        }));\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!isDefined(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        each(dataStructure, (function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        }));\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }\r\n        each(selector, (function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        }));\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return query(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n        ! function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if (matches.includes(parent)) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = storeHelper.queryByOptions(query(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        each(matches, (function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        }));\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nexport default DataAdapter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}