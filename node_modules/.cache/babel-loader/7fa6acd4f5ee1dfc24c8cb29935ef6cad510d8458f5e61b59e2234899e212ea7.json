{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/tree_view/ui.tree_view.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport messageLocalization from \"../../localization/message\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { asyncNoop, noop } from \"../../core/utils/common\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport { isDefined, isPrimitive, isFunction, isString } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { getPublicElement } from \"../../core/element\";\nimport CheckBox from \"../check_box\";\nimport HierarchicalCollectionWidget from \"../hierarchical_collection/ui.hierarchical_collection_widget\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { name as dblclickEvent } from \"../../events/double_click\";\nimport fx from \"../../animation/fx\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nimport LoadIndicator from \"../load_indicator\";\nimport { fromPromise, Deferred, when } from \"../../core/utils/deferred\";\nimport { nativeScrolling } from \"../../core/utils/support\";\nimport { getRelativeOffset } from \"../../renovation/ui/scroll_view/utils/get_relative_offset\";\nimport { SCROLLABLE_CONTENT_CLASS, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL } from \"../../renovation/ui/scroll_view/common/consts\";\nvar WIDGET_CLASS = \"dx-treeview\";\nvar NODE_CLASS = \"\".concat(WIDGET_CLASS, \"-node\");\nvar NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container\");\nvar NODE_LOAD_INDICATOR_CLASS = \"\".concat(NODE_CLASS, \"-loadindicator\");\nvar OPENED_NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container-opened\");\nvar IS_LEAF = \"\".concat(NODE_CLASS, \"-is-leaf\");\nvar ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-item\");\nvar ITEM_WITH_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-with-checkbox\");\nvar ITEM_WITHOUT_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-without-checkbox\");\nvar ITEM_DATA_KEY = \"\".concat(ITEM_CLASS, \"-data\");\nvar TOGGLE_ITEM_VISIBILITY_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility\");\nvar LOAD_INDICATOR_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator\");\nvar LOAD_INDICATOR_WRAPPER_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator-wrapper\");\nvar TOGGLE_ITEM_VISIBILITY_OPENED_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility-opened\");\nvar SELECT_ALL_ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-select-all-item\");\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\nvar SELECTED_ITEM_CLASS = \"dx-state-selected\";\nvar EXPAND_EVENT_NAMESPACE = \"dxTreeView_expand\";\nvar DATA_ITEM_ID = \"data-item-id\";\nvar TreeViewBase = HierarchicalCollectionWidget.inherit({\n  _supportedKeys: function (e) {\n    var click = e => {\n      var $itemElement = $(this.option(\"focusedElement\"));\n      if (!$itemElement.length) {\n        return;\n      }\n      e.target = $itemElement;\n      e.currentTarget = $itemElement;\n      this._itemClickHandler(e, $itemElement.children(\".\" + ITEM_CLASS));\n      var expandEventName = this._getEventNameByOption(this.option(\"expandEvent\"));\n      var expandByClick = expandEventName === addNamespace(clickEventName, EXPAND_EVENT_NAMESPACE);\n      if (expandByClick) {\n        this._expandEventHandler(e);\n      }\n    };\n    var select = e => {\n      e.preventDefault();\n      var $focusedElement = $(this.option(\"focusedElement\"));\n      var checkboxInstance = this._getCheckBoxInstance($focusedElement);\n      if (!checkboxInstance.option(\"disabled\")) {\n        var currentState = checkboxInstance.option(\"value\");\n        this._updateItemSelection(!currentState, $focusedElement.find(\".\" + ITEM_CLASS).get(0), true);\n      }\n    };\n    var toggleExpandedNestedItems = function (state, e) {\n      if (!this.option(\"expandAllEnabled\")) {\n        return;\n      }\n      e.preventDefault();\n      var $rootElement = $(this.option(\"focusedElement\"));\n      if (!$rootElement.length) {\n        return;\n      }\n      var rootItem = this._getItemData($rootElement.find(\".\".concat(ITEM_CLASS)));\n      this._toggleExpandedNestedItems([rootItem], state);\n    };\n    return extend(this.callBase(), {\n      enter: this._showCheckboxes() ? select : click,\n      space: this._showCheckboxes() ? select : click,\n      asterisk: toggleExpandedNestedItems.bind(this, true),\n      minus: toggleExpandedNestedItems.bind(this, false)\n    });\n  },\n  _toggleExpandedNestedItems: function (items, state) {\n    if (!items) {\n      return;\n    }\n    for (var i = 0, len = items.length; i < len; i++) {\n      var item = items[i];\n      var node = this._dataAdapter.getNodeByItem(item);\n      this._toggleExpandedState(node, state);\n      this._toggleExpandedNestedItems(item.items, state);\n    }\n  },\n  _getNodeElement: function (node, cache) {\n    var key = this._encodeString(node.internalFields.key);\n    if (cache) {\n      if (!cache.$nodeByKey) {\n        cache.$nodeByKey = {};\n        this.$element().find(\".\".concat(NODE_CLASS)).each(function () {\n          var $node = $(this);\n          var key = $node.attr(DATA_ITEM_ID);\n          cache.$nodeByKey[key] = $node;\n        });\n      }\n      return cache.$nodeByKey[key] || $();\n    }\n    var element = this.$element().get(0).querySelector(\"[\".concat(DATA_ITEM_ID, '=\"').concat(key, '\"]'));\n    return $(element);\n  },\n  _activeStateUnit: \".\" + ITEM_CLASS,\n  _widgetClass: function () {\n    return WIDGET_CLASS;\n  },\n  _getDefaultOptions: function () {\n    var defaultOptions = extend(this.callBase(), {\n      animationEnabled: true,\n      dataStructure: \"tree\",\n      deferRendering: true,\n      expandAllEnabled: false,\n      hasItemsExpr: \"hasItems\",\n      selectNodesRecursive: true,\n      expandNodesRecursive: true,\n      showCheckBoxesMode: \"none\",\n      selectAllText: messageLocalization.format(\"dxList-selectAll\"),\n      onItemSelectionChanged: null,\n      onItemExpanded: null,\n      onItemCollapsed: null,\n      scrollDirection: \"vertical\",\n      useNativeScrolling: true,\n      virtualModeEnabled: false,\n      rootValue: 0,\n      focusStateEnabled: false,\n      selectionMode: \"multiple\",\n      expandEvent: \"dblclick\",\n      selectByClick: false,\n      createChildren: null,\n      onSelectAllValueChanged: null\n    });\n    return extend(true, defaultOptions, {\n      integrationOptions: {\n        useDeferUpdateForTemplates: false\n      }\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return !nativeScrolling;\n      },\n      options: {\n        useNativeScrolling: false\n      }\n    }]);\n  },\n  _initSelectedItems: noop,\n  _syncSelectionOptions: asyncNoop,\n  _fireSelectionChanged: function () {\n    var selectionChangePromise = this._selectionChangePromise;\n    when(selectionChangePromise).done(function () {\n      this._createActionByOption(\"onSelectionChanged\", {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      })();\n    }.bind(this));\n  },\n  _createSelectAllValueChangedAction: function () {\n    this._selectAllValueChangedAction = this._createActionByOption(\"onSelectAllValueChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  _fireSelectAllValueChanged: function (value) {\n    this._selectAllValueChangedAction({\n      value: value\n    });\n  },\n  _checkBoxModeChange: function (value, previousValue) {\n    if (\"none\" === previousValue || \"none\" === value) {\n      this.repaint();\n      return;\n    }\n    var selectAllExists = this._$selectAllItem && this._$selectAllItem.length;\n    switch (value) {\n      case \"selectAll\":\n        if (!selectAllExists) {\n          this._createSelectAllValueChangedAction();\n          this._renderSelectAllItem();\n        }\n        break;\n      case \"normal\":\n        if (selectAllExists) {\n          this._$selectAllItem.remove();\n          delete this._$selectAllItem;\n        }\n    }\n  },\n  _removeSelection: function () {\n    var that = this;\n    each(this._dataAdapter.getFullData(), function (_, node) {\n      if (!that._hasChildren(node)) {\n        return;\n      }\n      that._dataAdapter.toggleSelection(node.internalFields.key, false, true);\n    });\n  },\n  _optionChanged: function (args) {\n    var {\n      name: name,\n      value: value,\n      previousValue: previousValue\n    } = args;\n    switch (name) {\n      case \"selectAllText\":\n        if (this._$selectAllItem) {\n          this._$selectAllItem.dxCheckBox(\"instance\").option(\"text\", value);\n        }\n        break;\n      case \"showCheckBoxesMode\":\n        this._checkBoxModeChange(value, previousValue);\n        break;\n      case \"scrollDirection\":\n        this.getScrollable().option(\"direction\", value);\n        break;\n      case \"useNativeScrolling\":\n        this.getScrollable().option(\"useNative\", value);\n        break;\n      case \"items\":\n        delete this._$selectAllItem;\n        this.callBase(args);\n        break;\n      case \"dataSource\":\n        this.callBase(args);\n        this._initDataAdapter();\n        this._filter = {};\n        break;\n      case \"hasItemsExpr\":\n        this._initAccessors();\n        this.repaint();\n        break;\n      case \"expandEvent\":\n        this._initExpandEvent();\n        break;\n      case \"deferRendering\":\n      case \"dataStructure\":\n      case \"rootValue\":\n      case \"createChildren\":\n      case \"expandNodesRecursive\":\n      case \"onItemSelectionChanged\":\n      case \"onItemExpanded\":\n      case \"onItemCollapsed\":\n      case \"expandAllEnabled\":\n      case \"animationEnabled\":\n      case \"virtualModeEnabled\":\n      case \"selectByClick\":\n        break;\n      case \"selectionMode\":\n        this._initDataAdapter();\n        this.callBase(args);\n        break;\n      case \"onSelectAllValueChanged\":\n        this._createSelectAllValueChangedAction();\n        break;\n      case \"selectNodesRecursive\":\n        this._dataAdapter.setOption(\"recursiveSelection\", args.value);\n        this.repaint();\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _initDataSource: function () {\n    if (this._useCustomChildrenLoader()) {\n      this._loadChildrenByCustomLoader(null).done(function (newItems) {\n        if (newItems && newItems.length) {\n          this.option(\"items\", newItems);\n        }\n      }.bind(this));\n    } else {\n      this.callBase();\n      this._isVirtualMode() && this._initVirtualMode();\n    }\n  },\n  _initVirtualMode: function () {\n    var filter = this._filter;\n    if (!filter.custom) {\n      filter.custom = this._dataSource.filter();\n    }\n    if (!filter.internal) {\n      filter.internal = [this.option(\"parentIdExpr\"), this.option(\"rootValue\")];\n    }\n  },\n  _useCustomChildrenLoader: function () {\n    return isFunction(this.option(\"createChildren\")) && this._isDataStructurePlain();\n  },\n  _loadChildrenByCustomLoader: function (parentNode) {\n    var invocationResult = this.option(\"createChildren\").call(this, parentNode);\n    if (Array.isArray(invocationResult)) {\n      return new Deferred().resolve(invocationResult).promise();\n    }\n    if (invocationResult && isFunction(invocationResult.then)) {\n      return fromPromise(invocationResult);\n    }\n    return new Deferred().resolve([]).promise();\n  },\n  _combineFilter: function () {\n    if (!this._filter.custom || !this._filter.custom.length) {\n      return this._filter.internal;\n    }\n    return [this._filter.custom, this._filter.internal];\n  },\n  _dataSourceLoadErrorHandler: function () {\n    this._renderEmptyMessage();\n  },\n  _init: function () {\n    this._filter = {};\n    this.callBase();\n    this._initStoreChangeHandlers();\n  },\n  _dataSourceChangedHandler: function (newItems) {\n    var items = this.option(\"items\");\n    if (this._initialized && this._isVirtualMode() && items.length) {\n      return;\n    }\n    this.option(\"items\", newItems);\n  },\n  _removeTreeViewLoadIndicator: function () {\n    if (!this._treeViewLoadIndicator) {\n      return;\n    }\n    this._treeViewLoadIndicator.remove();\n    this._treeViewLoadIndicator = null;\n  },\n  _createTreeViewLoadIndicator: function () {\n    this._treeViewLoadIndicator = $(\"<div>\").addClass(LOAD_INDICATOR_CLASS);\n    this._createComponent(this._treeViewLoadIndicator, LoadIndicator, {});\n    return this._treeViewLoadIndicator;\n  },\n  _dataSourceLoadingChangedHandler: function (isLoading) {\n    var resultFilter;\n    if (this._isVirtualMode()) {\n      resultFilter = this._combineFilter();\n      this._dataSource.filter(resultFilter);\n    }\n    if (isLoading && !this._dataSource.isLoaded()) {\n      this.option(\"items\", []);\n      var $wrapper = $(\"<div>\").addClass(LOAD_INDICATOR_WRAPPER_CLASS);\n      this._createTreeViewLoadIndicator().appendTo($wrapper);\n      this.itemsContainer().append($wrapper);\n      if (this._isVirtualMode() && this._dataSource.filter() !== resultFilter) {\n        this._dataSource.filter([]);\n      }\n    } else {\n      this._removeTreeViewLoadIndicator();\n    }\n  },\n  _initStoreChangeHandlers: function () {\n    if (\"plain\" !== this.option(\"dataStructure\")) {\n      return;\n    }\n    this._dataSource && this._dataSource.store().on(\"inserted\", newItem => {\n      this.option().items = this.option(\"items\").concat(newItem);\n      this._dataAdapter.addItem(newItem);\n      if (!this._dataAdapter.isFiltered(newItem)) {\n        return;\n      }\n      this._updateLevel(this._parentIdGetter(newItem));\n    }).on(\"removed\", removedKey => {\n      var node = this._dataAdapter.getNodeByKey(removedKey);\n      if (isDefined(node)) {\n        this.option(\"items\")[this._dataAdapter.getIndexByKey(node.internalFields.key)] = 0;\n        this._markChildrenItemsToRemove(node);\n        this._removeItems();\n        this._dataAdapter.removeItem(removedKey);\n        this._updateLevel(this._parentIdGetter(node));\n      }\n    });\n  },\n  _markChildrenItemsToRemove: function (node) {\n    var keys = node.internalFields.childrenKeys;\n    each(keys, (_, key) => {\n      this.option(\"items\")[this._dataAdapter.getIndexByKey(key)] = 0;\n      this._markChildrenItemsToRemove(this._dataAdapter.getNodeByKey(key));\n    });\n  },\n  _removeItems: function () {\n    var items = extend(true, [], this.option(\"items\"));\n    var counter = 0;\n    each(items, (index, item) => {\n      if (!item) {\n        this.option(\"items\").splice(index - counter, 1);\n        counter++;\n      }\n    });\n  },\n  _updateLevel: function (parentId) {\n    var $container = this._getContainerByParentKey(parentId);\n    this._renderItems($container, this._dataAdapter.getChildrenNodes(parentId));\n  },\n  _getOldContainer: function ($itemElement) {\n    if ($itemElement.length) {\n      return $itemElement.children(\".\".concat(NODE_CONTAINER_CLASS));\n    }\n    var scrollable = this.getScrollable();\n    if (scrollable) {\n      return $(scrollable.content()).children();\n    }\n    return $();\n  },\n  _getContainerByParentKey: function (parentId) {\n    var node = this._dataAdapter.getNodeByKey(parentId);\n    var $itemElement = node ? this._getNodeElement(node) : [];\n    this._getOldContainer($itemElement).remove();\n    var $container = this._renderNodeContainer($itemElement);\n    if (this._isRootLevel(parentId)) {\n      var scrollable = this.getScrollable();\n      if (!scrollable) {\n        this._renderScrollableContainer();\n      }\n      $(scrollable.content()).append($container);\n    }\n    return $container;\n  },\n  _isRootLevel: function (parentId) {\n    return parentId === this.option(\"rootValue\");\n  },\n  _getAccessors: function () {\n    var accessors = this.callBase();\n    accessors.push(\"hasItems\");\n    return accessors;\n  },\n  _getDataAdapterOptions: function () {\n    return {\n      rootValue: this.option(\"rootValue\"),\n      multipleSelection: !this._isSingleSelection(),\n      recursiveSelection: this._isRecursiveSelection(),\n      recursiveExpansion: this.option(\"expandNodesRecursive\"),\n      selectionRequired: this.option(\"selectionRequired\"),\n      dataType: this.option(\"dataStructure\"),\n      sort: this._dataSource && this._dataSource.sort()\n    };\n  },\n  _initMarkup: function () {\n    this._renderScrollableContainer();\n    this._renderEmptyMessage(this._dataAdapter.getRootNodes());\n    this.callBase();\n    this.setAria(\"role\", \"tree\");\n  },\n  _renderContentImpl: function () {\n    var $nodeContainer = this._renderNodeContainer();\n    $(this.getScrollable().content()).append($nodeContainer);\n    if (!this.option(\"items\") || !this.option(\"items\").length) {\n      return;\n    }\n    this._renderItems($nodeContainer, this._dataAdapter.getRootNodes());\n    this._initExpandEvent();\n    if (this._selectAllEnabled()) {\n      this._createSelectAllValueChangedAction();\n      this._renderSelectAllItem($nodeContainer);\n    }\n  },\n  _isVirtualMode: function () {\n    return this.option(\"virtualModeEnabled\") && this._isDataStructurePlain() && !!this.option(\"dataSource\");\n  },\n  _isDataStructurePlain: function () {\n    return \"plain\" === this.option(\"dataStructure\");\n  },\n  _fireContentReadyAction: function () {\n    var dataSource = this.getDataSource();\n    var skipContentReadyAction = dataSource && !dataSource.isLoaded() || this._skipContentReadyAndItemExpanded;\n    var scrollable = this.getScrollable();\n    if (scrollable && hasWindow()) {\n      scrollable.update();\n    }\n    if (!skipContentReadyAction) {\n      this.callBase();\n    }\n    if (scrollable && hasWindow()) {\n      scrollable.update();\n    }\n  },\n  _renderScrollableContainer: function () {\n    this._scrollable = this._createComponent($(\"<div>\").appendTo(this.$element()), Scrollable, {\n      useNative: this.option(\"useNativeScrolling\"),\n      direction: this.option(\"scrollDirection\"),\n      useKeyboard: false\n    });\n  },\n  _renderNodeContainer: function ($parent) {\n    var $container = $(\"<ul>\").addClass(NODE_CONTAINER_CLASS);\n    this.setAria(\"role\", \"group\", $container);\n    if ($parent && $parent.length) {\n      var itemData = this._getItemData($parent.children(\".\" + ITEM_CLASS));\n      if (this._expandedGetter(itemData)) {\n        $container.addClass(OPENED_NODE_CONTAINER_CLASS);\n      }\n      $container.appendTo($parent);\n    }\n    return $container;\n  },\n  _createDOMElement: function ($nodeContainer, node) {\n    var $node = $(\"<li>\").addClass(NODE_CLASS).attr(DATA_ITEM_ID, this._encodeString(node.internalFields.key)).prependTo($nodeContainer);\n    this.setAria({\n      role: \"treeitem\",\n      label: this._displayGetter(node.internalFields.item) || \"\",\n      expanded: node.internalFields.expanded || false,\n      level: this._getLevel($nodeContainer)\n    }, $node);\n    return $node;\n  },\n  _getLevel: function ($nodeContainer) {\n    var parent = $nodeContainer.parent();\n    return parent.hasClass(\"dx-scrollable-content\") ? 1 : parseInt(parent.attr(\"aria-level\")) + 1;\n  },\n  _showCheckboxes: function () {\n    return \"none\" !== this.option(\"showCheckBoxesMode\");\n  },\n  _selectAllEnabled: function () {\n    return \"selectAll\" === this.option(\"showCheckBoxesMode\") && !this._isSingleSelection();\n  },\n  _renderItems: function ($nodeContainer, nodes) {\n    var length = nodes.length - 1;\n    for (var i = length; i >= 0; i--) {\n      this._renderItem(i, nodes[i], $nodeContainer);\n    }\n    this._renderedItemsCount += nodes.length;\n  },\n  _renderItem: function (nodeIndex, node, $nodeContainer) {\n    var $node = this._createDOMElement($nodeContainer, node);\n    var nodeData = node.internalFields;\n    var showCheckBox = this._showCheckboxes();\n    $node.addClass(showCheckBox ? ITEM_WITH_CHECKBOX_CLASS : ITEM_WITHOUT_CHECKBOX_CLASS);\n    $node.toggleClass(INVISIBLE_STATE_CLASS, false === nodeData.item.visible);\n    showCheckBox && this._renderCheckBox($node, node);\n    this.setAria(\"selected\", nodeData.selected, $node);\n    this._toggleSelectedClass($node, nodeData.selected);\n    this.callBase(this._renderedItemsCount + nodeIndex, nodeData.item, $node);\n    if (false !== nodeData.item.visible) {\n      this._renderChildren($node, node);\n    }\n  },\n  _setAriaSelected: function () {},\n  _renderChildren: function ($node, node) {\n    if (!this._hasChildren(node)) {\n      this._addLeafClass($node);\n      return;\n    }\n    this._renderToggleItemVisibilityIcon($node, node);\n    if (this.option(\"deferRendering\") && !node.internalFields.expanded) {\n      return;\n    }\n    this._loadSublevel(node).done(childNodes => {\n      this._renderSublevel($node, this._getActualNode(node), childNodes);\n    });\n  },\n  _getActualNode: function (cachedNode) {\n    return this._dataAdapter.getNodeByKey(cachedNode.internalFields.key);\n  },\n  _hasChildren: function (node) {\n    if (this._isVirtualMode() || this._useCustomChildrenLoader()) {\n      return false !== this._hasItemsGetter(node.internalFields.item);\n    }\n    return this.callBase(node);\n  },\n  _loadSublevel: function (node) {\n    var deferred = new Deferred();\n    var childrenNodes = this._getChildNodes(node);\n    if (childrenNodes.length) {\n      deferred.resolve(childrenNodes);\n    } else {\n      this._loadNestedItems(node).done(items => {\n        deferred.resolve(this._dataAdapter.getNodesByItems(items));\n      });\n    }\n    return deferred.promise();\n  },\n  _renderSublevel: function ($node, node, childNodes) {\n    var $nestedNodeContainer = this._renderNodeContainer($node, node);\n    var childNodesByChildrenKeys = childNodes.filter(childNode => -1 !== node.internalFields.childrenKeys.indexOf(childNode.internalFields.key));\n    this._renderItems($nestedNodeContainer, childNodesByChildrenKeys);\n    if (childNodesByChildrenKeys.length && !node.internalFields.selected) {\n      var firstChild = childNodesByChildrenKeys[0];\n      this._updateParentsState(firstChild, this._getNodeElement(firstChild));\n    }\n    this._normalizeIconState($node, childNodesByChildrenKeys.length);\n    if (node.internalFields.expanded) {\n      $nestedNodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS);\n    }\n  },\n  _executeItemRenderAction: function (itemIndex, itemData, itemElement) {\n    var node = this._getNode(itemElement);\n    this._getItemRenderAction()({\n      itemElement: itemElement,\n      itemIndex: itemIndex,\n      itemData: itemData,\n      node: this._dataAdapter.getPublicNode(node)\n    });\n  },\n  _addLeafClass: function ($node) {\n    $node.addClass(IS_LEAF);\n  },\n  _expandEventHandler: function (e) {\n    var $nodeElement = $(e.currentTarget.parentNode);\n    if (!$nodeElement.hasClass(IS_LEAF)) {\n      this._toggleExpandedState(e.currentTarget, void 0, e);\n    }\n  },\n  _initExpandEvent: function () {\n    var expandedEventName = this._getEventNameByOption(this.option(\"expandEvent\"));\n    var $itemsContainer = this._itemContainer();\n    var itemSelector = this._itemSelector();\n    eventsEngine.off($itemsContainer, \".\" + EXPAND_EVENT_NAMESPACE, itemSelector);\n    eventsEngine.on($itemsContainer, expandedEventName, itemSelector, this._expandEventHandler.bind(this));\n  },\n  _getEventNameByOption: function (name) {\n    var event = \"click\" === name ? clickEventName : dblclickEvent;\n    return addNamespace(event, EXPAND_EVENT_NAMESPACE);\n  },\n  _getNode: function (identifier) {\n    if (!isDefined(identifier)) {\n      return null;\n    }\n    if (identifier.internalFields) {\n      return identifier;\n    }\n    if (isPrimitive(identifier)) {\n      return this._dataAdapter.getNodeByKey(identifier);\n    }\n    var itemElement = $(identifier).get(0);\n    if (!itemElement) {\n      return null;\n    }\n    if (domAdapter.isElementNode(itemElement)) {\n      return this._getNodeByElement(itemElement);\n    }\n    return this._dataAdapter.getNodeByItem(itemElement);\n  },\n  _getNodeByElement: function (itemElement) {\n    var $node = $(itemElement).closest(\".\" + NODE_CLASS);\n    var key = this._decodeString($node.attr(DATA_ITEM_ID));\n    return this._dataAdapter.getNodeByKey(key);\n  },\n  _toggleExpandedState: function (itemElement, state, e) {\n    var node = this._getNode(itemElement);\n    if (!node) {\n      return new Deferred().reject().promise();\n    }\n    if (node.internalFields.disabled) {\n      return new Deferred().reject().promise();\n    }\n    var currentState = node.internalFields.expanded;\n    if (currentState === state) {\n      return new Deferred().resolve().promise();\n    }\n    if (this._hasChildren(node)) {\n      var $node = this._getNodeElement(node);\n      if ($node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS, \":not(.\").concat(INVISIBLE_STATE_CLASS, \")\")).length) {\n        return new Deferred().reject().promise();\n      }\n      this._createLoadIndicator($node);\n    }\n    if (!isDefined(state)) {\n      state = !currentState;\n    }\n    this._dataAdapter.toggleExpansion(node.internalFields.key, state);\n    return this._updateExpandedItemsUI(node, state, e);\n  },\n  _createLoadIndicator: function ($node) {\n    var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\n    var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\n    if ($icon.hasClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS) || $nodeContainer.not(\":empty\").length) {\n      return;\n    }\n    this._createComponent($(\"<div>\").addClass(NODE_LOAD_INDICATOR_CLASS), LoadIndicator, {}).$element().appendTo($node);\n    $icon.hide();\n  },\n  _renderToggleItemVisibilityIcon: function ($node, node) {\n    var $icon = $(\"<div>\").addClass(TOGGLE_ITEM_VISIBILITY_CLASS).appendTo($node);\n    if (node.internalFields.expanded) {\n      $icon.addClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS);\n      $node.parent().addClass(OPENED_NODE_CONTAINER_CLASS);\n    }\n    if (node.internalFields.disabled) {\n      $icon.addClass(DISABLED_STATE_CLASS);\n    }\n    this._renderToggleItemVisibilityIconClick($icon, node);\n  },\n  _renderToggleItemVisibilityIconClick: function ($icon, node) {\n    var eventName = addNamespace(clickEventName, this.NAME);\n    eventsEngine.off($icon, eventName);\n    eventsEngine.on($icon, eventName, e => {\n      this._toggleExpandedState(node.internalFields.key, void 0, e);\n    });\n  },\n  _updateExpandedItemsUI: function (node, state, e) {\n    var $node = this._getNodeElement(node);\n    var isHiddenNode = !$node.length || state && $node.is(\":hidden\");\n    if (this.option(\"expandNodesRecursive\") && isHiddenNode) {\n      var parentNode = this._getNode(node.internalFields.parentKey);\n      if (parentNode) {\n        this._updateExpandedItemsUI(parentNode, state, e);\n      }\n    }\n    var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\n    var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\n    $icon.toggleClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS, state);\n    var nodeContainerExists = $nodeContainer.length > 0;\n    var completionCallback = new Deferred();\n    if (!state || nodeContainerExists && !$nodeContainer.is(\":empty\")) {\n      this._animateNodeContainer(node, state, e, completionCallback);\n      return completionCallback.promise();\n    }\n    if (0 === node.internalFields.childrenKeys.length && (this._isVirtualMode() || this._useCustomChildrenLoader())) {\n      this._loadNestedItemsWithUpdate(node, state, e, completionCallback);\n      return completionCallback.promise();\n    }\n    this._renderSublevel($node, node, this._getChildNodes(node));\n    this._fireContentReadyAction();\n    this._animateNodeContainer(node, state, e, completionCallback);\n    return completionCallback.promise();\n  },\n  _loadNestedItemsWithUpdate: function (node, state, e, completionCallback) {\n    var $node = this._getNodeElement(node);\n    this._loadNestedItems(node).done(items => {\n      var actualNodeData = this._getActualNode(node);\n      this._renderSublevel($node, actualNodeData, this._dataAdapter.getNodesByItems(items));\n      if (!items || !items.length) {\n        completionCallback.resolve();\n        return;\n      }\n      this._fireContentReadyAction();\n      this._animateNodeContainer(actualNodeData, state, e, completionCallback);\n    });\n  },\n  _loadNestedItems: function (node) {\n    if (this._useCustomChildrenLoader()) {\n      var publicNode = this._dataAdapter.getPublicNode(node);\n      return this._loadChildrenByCustomLoader(publicNode).done(newItems => {\n        if (!this._areNodesExists(newItems)) {\n          this._appendItems(newItems);\n        }\n      });\n    }\n    if (!this._isVirtualMode()) {\n      return new Deferred().resolve([]).promise();\n    }\n    this._filter.internal = [this.option(\"parentIdExpr\"), node.internalFields.key];\n    this._dataSource.filter(this._combineFilter());\n    return this._dataSource.load().done(newItems => {\n      if (!this._areNodesExists(newItems)) {\n        this._appendItems(newItems);\n      }\n    });\n  },\n  _areNodesExists: function (newItems, items) {\n    var keyOfRootItem = this.keyOf(newItems[0]);\n    var fullData = this._dataAdapter.getFullData();\n    return !!this._dataAdapter.getNodeByKey(keyOfRootItem, fullData);\n  },\n  _appendItems: function (newItems) {\n    this.option().items = this.option(\"items\").concat(newItems);\n    this._initDataAdapter();\n  },\n  _animateNodeContainer: function (node, state, e, completionCallback) {\n    var $node = this._getNodeElement(node);\n    var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\n    if (node && completionCallback && 0 === $nodeContainer.length) {\n      completionCallback.resolve();\n    }\n    $nodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS);\n    var nodeHeight = getHeight($nodeContainer);\n    fx.stop($nodeContainer, true);\n    fx.animate($nodeContainer, {\n      type: \"custom\",\n      duration: this.option(\"animationEnabled\") ? 400 : 0,\n      from: {\n        maxHeight: state ? 0 : nodeHeight\n      },\n      to: {\n        maxHeight: state ? nodeHeight : 0\n      },\n      complete: function () {\n        $nodeContainer.css(\"maxHeight\", \"none\");\n        $nodeContainer.toggleClass(OPENED_NODE_CONTAINER_CLASS, state);\n        this.setAria(\"expanded\", state, $node);\n        this.getScrollable().update();\n        this._fireExpandedStateUpdatedEvent(state, node, e);\n        if (completionCallback) {\n          completionCallback.resolve();\n        }\n      }.bind(this)\n    });\n  },\n  _fireExpandedStateUpdatedEvent: function (isExpanded, node, e) {\n    if (!this._hasChildren(node) || this._skipContentReadyAndItemExpanded) {\n      return;\n    }\n    var optionName = isExpanded ? \"onItemExpanded\" : \"onItemCollapsed\";\n    if (isDefined(e)) {\n      this._itemDXEventHandler(e, optionName, {\n        node: this._dataAdapter.getPublicNode(node)\n      });\n    } else {\n      var target = this._getNodeElement(node);\n      this._itemEventHandler(target, optionName, {\n        event: e,\n        node: this._dataAdapter.getPublicNode(node)\n      });\n    }\n  },\n  _normalizeIconState: function ($node, hasNewItems) {\n    var $loadIndicator = $node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS));\n    if ($loadIndicator.length) {\n      var _LoadIndicator$getIns;\n      null === (_LoadIndicator$getIns = LoadIndicator.getInstance($loadIndicator)) || void 0 === _LoadIndicator$getIns ? void 0 : _LoadIndicator$getIns.option(\"visible\", false);\n    }\n    var $toggleItem = $node.find(\".\".concat(TOGGLE_ITEM_VISIBILITY_CLASS));\n    if (hasNewItems) {\n      $toggleItem.show();\n      return;\n    }\n    $toggleItem.removeClass(TOGGLE_ITEM_VISIBILITY_CLASS);\n    $node.addClass(IS_LEAF);\n  },\n  _emptyMessageContainer: function () {\n    var scrollable = this.getScrollable();\n    return scrollable ? $(scrollable.content()) : this.callBase();\n  },\n  _renderContent: function () {\n    var items = this.option(\"items\");\n    if (items && items.length) {\n      this._contentAlreadyRendered = true;\n    }\n    this.callBase();\n  },\n  _renderSelectAllItem: function ($container) {\n    $container = $container || this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).first();\n    this._$selectAllItem = $(\"<div>\").addClass(SELECT_ALL_ITEM_CLASS);\n    var value = this._dataAdapter.isAllSelected();\n    this._createComponent(this._$selectAllItem, CheckBox, {\n      value: value,\n      tabIndex: 1,\n      text: this.option(\"selectAllText\"),\n      onValueChanged: this._onSelectAllCheckboxValueChanged.bind(this)\n    });\n    this._toggleSelectedClass(this._$selectAllItem, value);\n    $container.before(this._$selectAllItem);\n  },\n  _onSelectAllCheckboxValueChanged: function (args) {\n    this._toggleSelectAll(args);\n    this._fireSelectAllValueChanged(args.value);\n  },\n  _toggleSelectAll: function (args) {\n    this._dataAdapter.toggleSelectAll(args.value);\n    this._updateItemsUI();\n    this._fireSelectionChanged();\n  },\n  _renderCheckBox: function ($node, node) {\n    var $checkbox = $(\"<div>\").appendTo($node);\n    this._createComponent($checkbox, CheckBox, {\n      value: node.internalFields.selected,\n      onValueChanged: this._changeCheckboxValue.bind(this),\n      focusStateEnabled: false,\n      disabled: this._disabledGetter(node)\n    });\n  },\n  _toggleSelectedClass: function ($node, value) {\n    $node.toggleClass(SELECTED_ITEM_CLASS, !!value);\n  },\n  _toggleNodeDisabledState: function (node, state) {\n    var $node = this._getNodeElement(node);\n    var $item = $node.find(\".\" + ITEM_CLASS).eq(0);\n    this._dataAdapter.toggleNodeDisabledState(node.internalFields.key, state);\n    $item.toggleClass(DISABLED_STATE_CLASS, !!state);\n    if (this._showCheckboxes()) {\n      var checkbox = this._getCheckBoxInstance($node);\n      checkbox.option(\"disabled\", !!state);\n    }\n  },\n  _itemOptionChanged: function (item, property, value) {\n    var node = this._dataAdapter.getNodeByItem(item);\n    if (property === this.option(\"disabledExpr\")) {\n      this._toggleNodeDisabledState(node, value);\n    }\n  },\n  _changeCheckboxValue: function (e) {\n    var $node = $(e.element).parent(\".\" + NODE_CLASS);\n    var $item = $node.children(\".\" + ITEM_CLASS);\n    var item = this._getItemData($item);\n    var node = this._getNodeByElement($item);\n    var value = e.value;\n    if (node && node.internalFields.selected === value) {\n      return;\n    }\n    this._updateItemSelection(value, item, e.event);\n  },\n  _isSingleSelection: function () {\n    return \"single\" === this.option(\"selectionMode\");\n  },\n  _isRecursiveSelection: function () {\n    return this.option(\"selectNodesRecursive\") && \"single\" !== this.option(\"selectionMode\");\n  },\n  _isLastSelectedBranch: function (publicNode, selectedNodesKeys, deep) {\n    var keyIndex = selectedNodesKeys.indexOf(publicNode.key);\n    if (keyIndex >= 0) {\n      selectedNodesKeys.splice(keyIndex, 1);\n    }\n    if (deep) {\n      each(publicNode.children, function (_, childNode) {\n        this._isLastSelectedBranch(childNode, selectedNodesKeys, true);\n      }.bind(this));\n    }\n    if (publicNode.parent) {\n      this._isLastSelectedBranch(publicNode.parent, selectedNodesKeys);\n    }\n    return 0 === selectedNodesKeys.length;\n  },\n  _isLastRequired: function (node) {\n    var selectionRequired = this.option(\"selectionRequired\");\n    var isSingleMode = this._isSingleSelection();\n    var selectedNodesKeys = this.getSelectedNodeKeys();\n    if (!selectionRequired) {\n      return;\n    }\n    if (isSingleMode) {\n      return 1 === selectedNodesKeys.length;\n    } else {\n      return this._isLastSelectedBranch(node.internalFields.publicNode, selectedNodesKeys.slice(), true);\n    }\n  },\n  _updateItemSelection: function (value, itemElement, dxEvent) {\n    var node = this._getNode(itemElement);\n    if (!node || false === node.visible) {\n      return false;\n    }\n    if (node.internalFields.selected === value) {\n      return true;\n    }\n    if (!value && this._isLastRequired(node)) {\n      if (this._showCheckboxes()) {\n        var $node = this._getNodeElement(node);\n        this._getCheckBoxInstance($node).option(\"value\", true);\n      }\n      return false;\n    }\n    if (value && this._isSingleSelection()) {\n      var selectedKeys = this.getSelectedNodeKeys();\n      each(selectedKeys, (index, key) => {\n        this._dataAdapter.toggleSelection(key, false);\n        this._updateItemsUI();\n        this._fireItemSelectionChanged(this._getNode(key));\n      });\n    }\n    this._dataAdapter.toggleSelection(node.internalFields.key, value);\n    var isAllSelected = this._dataAdapter.isAllSelected();\n    var needFireSelectAllChanged = this._selectAllEnabled() && this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\") !== isAllSelected;\n    this._updateItemsUI();\n    this._fireItemSelectionChanged(node, dxEvent);\n    this._fireSelectionChanged();\n    if (needFireSelectAllChanged) {\n      this._fireSelectAllValueChanged(isAllSelected);\n    }\n    return true;\n  },\n  _fireItemSelectionChanged: function (node, dxEvent) {\n    var initiator = dxEvent || this._findItemElementByItem(node.internalFields.item);\n    var handler = dxEvent ? this._itemDXEventHandler : this._itemEventHandler;\n    handler.call(this, initiator, \"onItemSelectionChanged\", {\n      node: this._dataAdapter.getPublicNode(node),\n      itemData: node.internalFields.item\n    });\n  },\n  _getCheckBoxInstance: function ($node) {\n    return $node.children(\".dx-checkbox\").dxCheckBox(\"instance\");\n  },\n  _updateItemsUI: function () {\n    var cache = {};\n    each(this._dataAdapter.getData(), (_, node) => {\n      var $node = this._getNodeElement(node, cache);\n      var nodeSelection = node.internalFields.selected;\n      if (!$node.length) {\n        return;\n      }\n      this._toggleSelectedClass($node, nodeSelection);\n      this.setAria(\"selected\", nodeSelection, $node);\n      if (this._showCheckboxes()) {\n        this._getCheckBoxInstance($node).option(\"value\", nodeSelection);\n      }\n    });\n    if (this._selectAllEnabled()) {\n      var selectAllCheckbox = this._$selectAllItem.dxCheckBox(\"instance\");\n      selectAllCheckbox.option(\"onValueChanged\", void 0);\n      selectAllCheckbox.option(\"value\", this._dataAdapter.isAllSelected());\n      selectAllCheckbox.option(\"onValueChanged\", this._onSelectAllCheckboxValueChanged.bind(this));\n    }\n  },\n  _updateParentsState: function (node, $node) {\n    if (!$node) {\n      return;\n    }\n    var parentNode = this._dataAdapter.getNodeByKey(node.internalFields.parentKey);\n    var $parentNode = $($node.parents(\".\" + NODE_CLASS)[0]);\n    if (this._showCheckboxes()) {\n      var parentValue = parentNode.internalFields.selected;\n      this._getCheckBoxInstance($parentNode).option(\"value\", parentValue);\n      this._toggleSelectedClass($parentNode, parentValue);\n    }\n    if (parentNode.internalFields.parentKey !== this.option(\"rootValue\")) {\n      this._updateParentsState(parentNode, $parentNode);\n    }\n  },\n  _itemEventHandlerImpl: function (initiator, action, actionArgs) {\n    var $itemElement = $(initiator).closest(\".\" + NODE_CLASS).children(\".\" + ITEM_CLASS);\n    return action(extend(this._extendActionArgs($itemElement), actionArgs));\n  },\n  _itemContextMenuHandler: function (e) {\n    this._createEventHandler(\"onItemContextMenu\", e);\n  },\n  _itemHoldHandler: function (e) {\n    this._createEventHandler(\"onItemHold\", e);\n  },\n  _createEventHandler: function (eventName, e) {\n    var node = this._getNodeByElement(e.currentTarget);\n    this._itemDXEventHandler(e, eventName, {\n      node: this._dataAdapter.getPublicNode(node)\n    });\n  },\n  _itemClass: function () {\n    return ITEM_CLASS;\n  },\n  _itemDataKey: function () {\n    return ITEM_DATA_KEY;\n  },\n  _attachClickEvent: function () {\n    var clickSelector = \".\" + this._itemClass();\n    var pointerDownSelector = \".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS;\n    var eventName = addNamespace(clickEventName, this.NAME);\n    var pointerDownEvent = addNamespace(pointerEvents.down, this.NAME);\n    var $itemContainer = this._itemContainer();\n    var that = this;\n    eventsEngine.off($itemContainer, eventName, clickSelector);\n    eventsEngine.off($itemContainer, pointerDownEvent, pointerDownSelector);\n    eventsEngine.on($itemContainer, eventName, clickSelector, function (e) {\n      that._itemClickHandler(e, $(this));\n    });\n    eventsEngine.on($itemContainer, pointerDownEvent, pointerDownSelector, function (e) {\n      that._itemPointerDownHandler(e);\n    });\n  },\n  _itemClickHandler: function (e, $item) {\n    var itemData = this._getItemData($item);\n    var node = this._getNodeByElement($item);\n    this._itemDXEventHandler(e, \"onItemClick\", {\n      node: this._dataAdapter.getPublicNode(node)\n    });\n    if (this.option(\"selectByClick\") && !e.isDefaultPrevented()) {\n      this._updateItemSelection(!node.internalFields.selected, itemData, e);\n    }\n  },\n  _updateSelectionToFirstItem: function ($items, startIndex) {\n    var itemIndex = startIndex;\n    while (itemIndex >= 0) {\n      var $item = $($items[itemIndex]);\n      this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\n      itemIndex--;\n    }\n  },\n  _updateSelectionToLastItem: function ($items, startIndex) {\n    var length = $items.length;\n    var itemIndex = startIndex;\n    while (itemIndex < length) {\n      var $item = $($items[itemIndex]);\n      this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\n      itemIndex++;\n    }\n  },\n  _focusInHandler: function (e) {\n    this._updateFocusState(e, true);\n    var isSelectAllItem = $(e.target).hasClass(SELECT_ALL_ITEM_CLASS);\n    if (isSelectAllItem || this.option(\"focusedElement\")) {\n      clearTimeout(this._setFocusedItemTimeout);\n      var element = isSelectAllItem ? getPublicElement(this._$selectAllItem) : $(this.option(\"focusedElement\"));\n      this._setFocusedItemTimeout = setTimeout(() => {\n        this._setFocusedItem(element);\n      });\n      return;\n    }\n    var $activeItem = this._getActiveItem();\n    this.option(\"focusedElement\", getPublicElement($activeItem.closest(\".\" + NODE_CLASS)));\n  },\n  _setFocusedItem: function ($target) {\n    if (!$target || !$target.length) {\n      return;\n    }\n    if (!$target.children().hasClass(DISABLED_STATE_CLASS)) {\n      this.callBase($target);\n    }\n  },\n  _itemPointerDownHandler: function (e) {\n    if (!this.option(\"focusStateEnabled\")) {\n      return;\n    }\n    var $target = $(e.target).closest(\".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS);\n    if (!$target.length) {\n      return;\n    }\n    var itemElement = $target.hasClass(DISABLED_STATE_CLASS) ? null : $target;\n    this.option(\"focusedElement\", getPublicElement(itemElement));\n  },\n  _findNonDisabledNodes: function ($nodes) {\n    return $nodes.not(function () {\n      return $(this).children(\".\" + ITEM_CLASS).hasClass(DISABLED_STATE_CLASS);\n    });\n  },\n  _moveFocus: function (location, e) {\n    var FOCUS_UP = \"up\";\n    var FOCUS_DOWN = \"down\";\n    var FOCUS_FIRST = \"first\";\n    var FOCUS_LAST = \"last\";\n    var FOCUS_LEFT = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    var FOCUS_RIGHT = this.option(\"rtlEnabled\") ? \"left\" : \"right\";\n    this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).each(function () {\n      fx.stop(this, true);\n    });\n    var $items = this._findNonDisabledNodes(this._nodeElements());\n    if (!$items || !$items.length) {\n      return;\n    }\n    switch (location) {\n      case FOCUS_UP:\n        var $prevItem = this._prevItem($items);\n        this.option(\"focusedElement\", getPublicElement($prevItem));\n        var prevItemElement = this._getNodeItemElement($prevItem);\n        this.getScrollable().scrollToElement(prevItemElement);\n        if (e.shiftKey && this._showCheckboxes()) {\n          this._updateItemSelection(true, prevItemElement);\n        }\n        break;\n      case FOCUS_DOWN:\n        var $nextItem = this._nextItem($items);\n        this.option(\"focusedElement\", getPublicElement($nextItem));\n        var nextItemElement = this._getNodeItemElement($nextItem);\n        this.getScrollable().scrollToElement(nextItemElement);\n        if (e.shiftKey && this._showCheckboxes()) {\n          this._updateItemSelection(true, nextItemElement);\n        }\n        break;\n      case FOCUS_FIRST:\n        var $firstItem = $items.first();\n        if (e.shiftKey && this._showCheckboxes()) {\n          this._updateSelectionToFirstItem($items, $items.index(this._prevItem($items)));\n        }\n        this.option(\"focusedElement\", getPublicElement($firstItem));\n        this.getScrollable().scrollToElement(this._getNodeItemElement($firstItem));\n        break;\n      case FOCUS_LAST:\n        var $lastItem = $items.last();\n        if (e.shiftKey && this._showCheckboxes()) {\n          this._updateSelectionToLastItem($items, $items.index(this._nextItem($items)));\n        }\n        this.option(\"focusedElement\", getPublicElement($lastItem));\n        this.getScrollable().scrollToElement(this._getNodeItemElement($lastItem));\n        break;\n      case FOCUS_RIGHT:\n        this._expandFocusedContainer();\n        break;\n      case FOCUS_LEFT:\n        this._collapseFocusedContainer();\n        break;\n      default:\n        this.callBase.apply(this, arguments);\n        return;\n    }\n  },\n  _getNodeItemElement: function ($node) {\n    return $node.find(\".\" + ITEM_CLASS).get(0);\n  },\n  _nodeElements: function () {\n    return this.$element().find(\".\" + NODE_CLASS).not(\":hidden\");\n  },\n  _expandFocusedContainer: function () {\n    var $focusedNode = $(this.option(\"focusedElement\"));\n    if (!$focusedNode.length || $focusedNode.hasClass(IS_LEAF)) {\n      return;\n    }\n    var $node = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\n    if ($node.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\n      var $nextItem = this._nextItem(this._findNonDisabledNodes(this._nodeElements()));\n      this.option(\"focusedElement\", getPublicElement($nextItem));\n      this.getScrollable().scrollToElement(this._getNodeItemElement($nextItem));\n      return;\n    }\n    var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\n    this._toggleExpandedState(node, true);\n  },\n  _getClosestNonDisabledNode: function ($node) {\n    do {\n      $node = $node.parent().closest(\".\" + NODE_CLASS);\n    } while ($node.children(\".dx-treeview-item.dx-state-disabled\").length);\n    return $node;\n  },\n  _collapseFocusedContainer: function () {\n    var $focusedNode = $(this.option(\"focusedElement\"));\n    if (!$focusedNode.length) {\n      return;\n    }\n    var nodeElement = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\n    if (!$focusedNode.hasClass(IS_LEAF) && nodeElement.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\n      var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\n      this._toggleExpandedState(node, false);\n    } else {\n      var collapsedNode = this._getClosestNonDisabledNode($focusedNode);\n      collapsedNode.length && this.option(\"focusedElement\", getPublicElement(collapsedNode));\n      this.getScrollable().scrollToElement(this._getNodeItemElement(collapsedNode));\n    }\n  },\n  _encodeString: function (value) {\n    return isString(value) ? encodeURI(value) : value;\n  },\n  _decodeString: function (value) {\n    return isString(value) ? decodeURI(value) : value;\n  },\n  getScrollable: function () {\n    return this._scrollable;\n  },\n  updateDimensions: function () {\n    var deferred = new Deferred();\n    var scrollable = this.getScrollable();\n    if (scrollable) {\n      scrollable.update().done(() => {\n        deferred.resolveWith(this);\n      });\n    } else {\n      deferred.resolveWith(this);\n    }\n    return deferred.promise();\n  },\n  selectItem: function (itemElement) {\n    return this._updateItemSelection(true, itemElement);\n  },\n  unselectItem: function (itemElement) {\n    return this._updateItemSelection(false, itemElement);\n  },\n  expandItem: function (itemElement) {\n    return this._toggleExpandedState(itemElement, true);\n  },\n  collapseItem: function (itemElement) {\n    return this._toggleExpandedState(itemElement, false);\n  },\n  getNodes: function () {\n    return this._dataAdapter.getTreeNodes();\n  },\n  getSelectedNodes: function () {\n    return this.getSelectedNodeKeys().map(key => {\n      var node = this._dataAdapter.getNodeByKey(key);\n      return this._dataAdapter.getPublicNode(node);\n    });\n  },\n  getSelectedNodeKeys: function () {\n    return this._dataAdapter.getSelectedNodesKeys();\n  },\n  selectAll: function () {\n    if (this._selectAllEnabled()) {\n      this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", true);\n    } else {\n      this._toggleSelectAll({\n        value: true\n      });\n    }\n  },\n  unselectAll: function () {\n    if (this._selectAllEnabled()) {\n      this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", false);\n    } else {\n      this._toggleSelectAll({\n        value: false\n      });\n    }\n  },\n  _allItemsExpandedHandler: function () {\n    this._skipContentReadyAndItemExpanded = false;\n    this._fireContentReadyAction();\n  },\n  expandAll: function () {\n    var nodes = this._dataAdapter.getData();\n    var expandingPromises = [];\n    this._skipContentReadyAndItemExpanded = true;\n    nodes.forEach(node => expandingPromises.push(this._toggleExpandedState(node.internalFields.key, true)));\n    Promise.allSettled(expandingPromises).then(() => {\n      var _this$_allItemsExpand;\n      return null === (_this$_allItemsExpand = this._allItemsExpanded) || void 0 === _this$_allItemsExpand ? void 0 : _this$_allItemsExpand.call(this);\n    });\n  },\n  collapseAll: function () {\n    each(this._dataAdapter.getExpandedNodesKeys(), function (_, key) {\n      this._toggleExpandedState(key, false);\n    }.bind(this));\n  },\n  scrollToItem: function (keyOrItemOrElement) {\n    var node = this._getNode(keyOrItemOrElement);\n    if (!node) {\n      return new Deferred().reject().promise();\n    }\n    var nodeKeysToExpand = [];\n    var parentNode = node.internalFields.publicNode.parent;\n    while (null != parentNode) {\n      if (!parentNode.expanded) {\n        nodeKeysToExpand.push(parentNode.key);\n      }\n      parentNode = parentNode.parent;\n    }\n    var scrollCallback = new Deferred();\n    this._expandNodes(nodeKeysToExpand.reverse()).always(() => {\n      var $element = this._getNodeElement(node);\n      if ($element && $element.length) {\n        this.scrollToElementTopLeft($element.get(0));\n        scrollCallback.resolve();\n      } else {\n        scrollCallback.reject();\n      }\n    });\n    return scrollCallback.promise();\n  },\n  scrollToElementTopLeft: function (targetElement) {\n    var scrollable = this.getScrollable();\n    var {\n      scrollDirection: scrollDirection,\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    var targetLocation = {\n      top: 0,\n      left: 0\n    };\n    var relativeOffset = getRelativeOffset(SCROLLABLE_CONTENT_CLASS, targetElement);\n    if (scrollDirection !== DIRECTION_VERTICAL) {\n      var containerElement = $(scrollable.container()).get(0);\n      targetLocation.left = rtlEnabled ? relativeOffset.left + targetElement.offsetWidth - containerElement.clientWidth : relativeOffset.left;\n    }\n    if (scrollDirection !== DIRECTION_HORIZONTAL) {\n      targetLocation.top = relativeOffset.top;\n    }\n    scrollable.scrollTo(targetLocation);\n  },\n  _expandNodes: function (keysToExpand) {\n    if (!keysToExpand || 0 === keysToExpand.length) {\n      return new Deferred().resolve().promise();\n    }\n    var resultCallback = new Deferred();\n    var callbacksByNodes = keysToExpand.map(key => this.expandItem(key));\n    when.apply($, callbacksByNodes).done(() => resultCallback.resolve()).fail(() => resultCallback.reject());\n    return resultCallback.promise();\n  },\n  _dispose: function () {\n    this.callBase();\n    clearTimeout(this._setFocusedItemTimeout);\n    this._allItemsExpandedHandler = null;\n  }\n});\nexport default TreeViewBase;","map":{"version":3,"names":["getHeight","$","domAdapter","eventsEngine","messageLocalization","name","clickEventName","asyncNoop","noop","hasWindow","isDefined","isPrimitive","isFunction","isString","extend","each","getPublicElement","CheckBox","HierarchicalCollectionWidget","addNamespace","pointerEvents","dblclickEvent","fx","Scrollable","LoadIndicator","fromPromise","Deferred","when","nativeScrolling","getRelativeOffset","SCROLLABLE_CONTENT_CLASS","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","WIDGET_CLASS","NODE_CLASS","concat","NODE_CONTAINER_CLASS","NODE_LOAD_INDICATOR_CLASS","OPENED_NODE_CONTAINER_CLASS","IS_LEAF","ITEM_CLASS","ITEM_WITH_CHECKBOX_CLASS","ITEM_WITHOUT_CHECKBOX_CLASS","ITEM_DATA_KEY","TOGGLE_ITEM_VISIBILITY_CLASS","LOAD_INDICATOR_CLASS","LOAD_INDICATOR_WRAPPER_CLASS","TOGGLE_ITEM_VISIBILITY_OPENED_CLASS","SELECT_ALL_ITEM_CLASS","INVISIBLE_STATE_CLASS","DISABLED_STATE_CLASS","SELECTED_ITEM_CLASS","EXPAND_EVENT_NAMESPACE","DATA_ITEM_ID","TreeViewBase","inherit","_supportedKeys","e","click","$itemElement","option","length","target","currentTarget","_itemClickHandler","children","expandEventName","_getEventNameByOption","expandByClick","_expandEventHandler","select","preventDefault","$focusedElement","checkboxInstance","_getCheckBoxInstance","currentState","_updateItemSelection","find","get","toggleExpandedNestedItems","state","$rootElement","rootItem","_getItemData","_toggleExpandedNestedItems","callBase","enter","_showCheckboxes","space","asterisk","bind","minus","items","i","len","item","node","_dataAdapter","getNodeByItem","_toggleExpandedState","_getNodeElement","cache","key","_encodeString","internalFields","$nodeByKey","$element","$node","attr","element","querySelector","_activeStateUnit","_widgetClass","_getDefaultOptions","defaultOptions","animationEnabled","dataStructure","deferRendering","expandAllEnabled","hasItemsExpr","selectNodesRecursive","expandNodesRecursive","showCheckBoxesMode","selectAllText","format","onItemSelectionChanged","onItemExpanded","onItemCollapsed","scrollDirection","useNativeScrolling","virtualModeEnabled","rootValue","focusStateEnabled","selectionMode","expandEvent","selectByClick","createChildren","onSelectAllValueChanged","integrationOptions","useDeferUpdateForTemplates","_defaultOptionsRules","device","options","_initSelectedItems","_syncSelectionOptions","_fireSelectionChanged","selectionChangePromise","_selectionChangePromise","done","_createActionByOption","excludeValidators","_createSelectAllValueChangedAction","_selectAllValueChangedAction","_fireSelectAllValueChanged","value","_checkBoxModeChange","previousValue","repaint","selectAllExists","_$selectAllItem","_renderSelectAllItem","remove","_removeSelection","that","getFullData","_","_hasChildren","toggleSelection","_optionChanged","args","dxCheckBox","getScrollable","_initDataAdapter","_filter","_initAccessors","_initExpandEvent","setOption","_initDataSource","_useCustomChildrenLoader","_loadChildrenByCustomLoader","newItems","_isVirtualMode","_initVirtualMode","filter","custom","_dataSource","internal","_isDataStructurePlain","parentNode","invocationResult","call","Array","isArray","resolve","promise","then","_combineFilter","_dataSourceLoadErrorHandler","_renderEmptyMessage","_init","_initStoreChangeHandlers","_dataSourceChangedHandler","_initialized","_removeTreeViewLoadIndicator","_treeViewLoadIndicator","_createTreeViewLoadIndicator","addClass","_createComponent","_dataSourceLoadingChangedHandler","isLoading","resultFilter","isLoaded","$wrapper","appendTo","itemsContainer","append","store","on","newItem","addItem","isFiltered","_updateLevel","_parentIdGetter","removedKey","getNodeByKey","getIndexByKey","_markChildrenItemsToRemove","_removeItems","removeItem","keys","childrenKeys","counter","index","splice","parentId","$container","_getContainerByParentKey","_renderItems","getChildrenNodes","_getOldContainer","scrollable","content","_renderNodeContainer","_isRootLevel","_renderScrollableContainer","_getAccessors","accessors","push","_getDataAdapterOptions","multipleSelection","_isSingleSelection","recursiveSelection","_isRecursiveSelection","recursiveExpansion","selectionRequired","dataType","sort","_initMarkup","getRootNodes","setAria","_renderContentImpl","$nodeContainer","_selectAllEnabled","_fireContentReadyAction","dataSource","getDataSource","skipContentReadyAction","_skipContentReadyAndItemExpanded","update","_scrollable","useNative","direction","useKeyboard","$parent","itemData","_expandedGetter","_createDOMElement","prependTo","role","label","_displayGetter","expanded","level","_getLevel","parent","hasClass","parseInt","nodes","_renderItem","_renderedItemsCount","nodeIndex","nodeData","showCheckBox","toggleClass","visible","_renderCheckBox","selected","_toggleSelectedClass","_renderChildren","_setAriaSelected","_addLeafClass","_renderToggleItemVisibilityIcon","_loadSublevel","childNodes","_renderSublevel","_getActualNode","cachedNode","_hasItemsGetter","deferred","childrenNodes","_getChildNodes","_loadNestedItems","getNodesByItems","$nestedNodeContainer","childNodesByChildrenKeys","childNode","indexOf","firstChild","_updateParentsState","_normalizeIconState","_executeItemRenderAction","itemIndex","itemElement","_getNode","_getItemRenderAction","getPublicNode","$nodeElement","expandedEventName","$itemsContainer","_itemContainer","itemSelector","_itemSelector","off","event","identifier","isElementNode","_getNodeByElement","closest","_decodeString","reject","disabled","_createLoadIndicator","toggleExpansion","_updateExpandedItemsUI","$icon","not","hide","_renderToggleItemVisibilityIconClick","eventName","NAME","isHiddenNode","is","parentKey","nodeContainerExists","completionCallback","_animateNodeContainer","_loadNestedItemsWithUpdate","actualNodeData","publicNode","_areNodesExists","_appendItems","load","keyOfRootItem","keyOf","fullData","nodeHeight","stop","animate","type","duration","from","maxHeight","to","complete","css","_fireExpandedStateUpdatedEvent","isExpanded","optionName","_itemDXEventHandler","_itemEventHandler","hasNewItems","$loadIndicator","_LoadIndicator$getIns","getInstance","$toggleItem","show","removeClass","_emptyMessageContainer","_renderContent","_contentAlreadyRendered","first","isAllSelected","tabIndex","text","onValueChanged","_onSelectAllCheckboxValueChanged","before","_toggleSelectAll","toggleSelectAll","_updateItemsUI","$checkbox","_changeCheckboxValue","_disabledGetter","_toggleNodeDisabledState","$item","eq","toggleNodeDisabledState","checkbox","_itemOptionChanged","property","_isLastSelectedBranch","selectedNodesKeys","deep","keyIndex","_isLastRequired","isSingleMode","getSelectedNodeKeys","slice","dxEvent","selectedKeys","_fireItemSelectionChanged","needFireSelectAllChanged","initiator","_findItemElementByItem","handler","getData","nodeSelection","selectAllCheckbox","$parentNode","parents","parentValue","_itemEventHandlerImpl","action","actionArgs","_extendActionArgs","_itemContextMenuHandler","_createEventHandler","_itemHoldHandler","_itemClass","_itemDataKey","_attachClickEvent","clickSelector","pointerDownSelector","pointerDownEvent","down","$itemContainer","_itemPointerDownHandler","isDefaultPrevented","_updateSelectionToFirstItem","$items","startIndex","_updateSelectionToLastItem","_focusInHandler","_updateFocusState","isSelectAllItem","clearTimeout","_setFocusedItemTimeout","setTimeout","_setFocusedItem","$activeItem","_getActiveItem","$target","_findNonDisabledNodes","$nodes","_moveFocus","location","FOCUS_UP","FOCUS_DOWN","FOCUS_FIRST","FOCUS_LAST","FOCUS_LEFT","FOCUS_RIGHT","_nodeElements","$prevItem","_prevItem","prevItemElement","_getNodeItemElement","scrollToElement","shiftKey","$nextItem","_nextItem","nextItemElement","$firstItem","$lastItem","last","_expandFocusedContainer","_collapseFocusedContainer","apply","arguments","$focusedNode","_getClosestNonDisabledNode","nodeElement","collapsedNode","encodeURI","decodeURI","updateDimensions","resolveWith","selectItem","unselectItem","expandItem","collapseItem","getNodes","getTreeNodes","getSelectedNodes","map","getSelectedNodesKeys","selectAll","unselectAll","_allItemsExpandedHandler","expandAll","expandingPromises","forEach","Promise","allSettled","_this$_allItemsExpand","_allItemsExpanded","collapseAll","getExpandedNodesKeys","scrollToItem","keyOrItemOrElement","nodeKeysToExpand","scrollCallback","_expandNodes","reverse","always","scrollToElementTopLeft","targetElement","rtlEnabled","targetLocation","top","left","relativeOffset","containerElement","container","offsetWidth","clientWidth","scrollTo","keysToExpand","resultCallback","callbacksByNodes","fail","_dispose"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/tree_view/ui.tree_view.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/tree_view/ui.tree_view.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    asyncNoop,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isDefined,\r\n    isPrimitive,\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport CheckBox from \"../check_box\";\r\nimport HierarchicalCollectionWidget from \"../hierarchical_collection/ui.hierarchical_collection_widget\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport fx from \"../../animation/fx\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    fromPromise,\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    getRelativeOffset\r\n} from \"../../renovation/ui/scroll_view/utils/get_relative_offset\";\r\nimport {\r\n    SCROLLABLE_CONTENT_CLASS,\r\n    DIRECTION_HORIZONTAL,\r\n    DIRECTION_VERTICAL\r\n} from \"../../renovation/ui/scroll_view/common/consts\";\r\nvar WIDGET_CLASS = \"dx-treeview\";\r\nvar NODE_CLASS = \"\".concat(WIDGET_CLASS, \"-node\");\r\nvar NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container\");\r\nvar NODE_LOAD_INDICATOR_CLASS = \"\".concat(NODE_CLASS, \"-loadindicator\");\r\nvar OPENED_NODE_CONTAINER_CLASS = \"\".concat(NODE_CLASS, \"-container-opened\");\r\nvar IS_LEAF = \"\".concat(NODE_CLASS, \"-is-leaf\");\r\nvar ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-item\");\r\nvar ITEM_WITH_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-with-checkbox\");\r\nvar ITEM_WITHOUT_CHECKBOX_CLASS = \"\".concat(ITEM_CLASS, \"-without-checkbox\");\r\nvar ITEM_DATA_KEY = \"\".concat(ITEM_CLASS, \"-data\");\r\nvar TOGGLE_ITEM_VISIBILITY_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility\");\r\nvar LOAD_INDICATOR_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator\");\r\nvar LOAD_INDICATOR_WRAPPER_CLASS = \"\".concat(WIDGET_CLASS, \"-loadindicator-wrapper\");\r\nvar TOGGLE_ITEM_VISIBILITY_OPENED_CLASS = \"\".concat(WIDGET_CLASS, \"-toggle-item-visibility-opened\");\r\nvar SELECT_ALL_ITEM_CLASS = \"\".concat(WIDGET_CLASS, \"-select-all-item\");\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar SELECTED_ITEM_CLASS = \"dx-state-selected\";\r\nvar EXPAND_EVENT_NAMESPACE = \"dxTreeView_expand\";\r\nvar DATA_ITEM_ID = \"data-item-id\";\r\nvar TreeViewBase = HierarchicalCollectionWidget.inherit({\r\n    _supportedKeys: function(e) {\r\n        var click = e => {\r\n            var $itemElement = $(this.option(\"focusedElement\"));\r\n            if (!$itemElement.length) {\r\n                return\r\n            }\r\n            e.target = $itemElement;\r\n            e.currentTarget = $itemElement;\r\n            this._itemClickHandler(e, $itemElement.children(\".\" + ITEM_CLASS));\r\n            var expandEventName = this._getEventNameByOption(this.option(\"expandEvent\"));\r\n            var expandByClick = expandEventName === addNamespace(clickEventName, EXPAND_EVENT_NAMESPACE);\r\n            if (expandByClick) {\r\n                this._expandEventHandler(e)\r\n            }\r\n        };\r\n        var select = e => {\r\n            e.preventDefault();\r\n            var $focusedElement = $(this.option(\"focusedElement\"));\r\n            var checkboxInstance = this._getCheckBoxInstance($focusedElement);\r\n            if (!checkboxInstance.option(\"disabled\")) {\r\n                var currentState = checkboxInstance.option(\"value\");\r\n                this._updateItemSelection(!currentState, $focusedElement.find(\".\" + ITEM_CLASS).get(0), true)\r\n            }\r\n        };\r\n        var toggleExpandedNestedItems = function(state, e) {\r\n            if (!this.option(\"expandAllEnabled\")) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            var $rootElement = $(this.option(\"focusedElement\"));\r\n            if (!$rootElement.length) {\r\n                return\r\n            }\r\n            var rootItem = this._getItemData($rootElement.find(\".\".concat(ITEM_CLASS)));\r\n            this._toggleExpandedNestedItems([rootItem], state)\r\n        };\r\n        return extend(this.callBase(), {\r\n            enter: this._showCheckboxes() ? select : click,\r\n            space: this._showCheckboxes() ? select : click,\r\n            asterisk: toggleExpandedNestedItems.bind(this, true),\r\n            minus: toggleExpandedNestedItems.bind(this, false)\r\n        })\r\n    },\r\n    _toggleExpandedNestedItems: function(items, state) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0, len = items.length; i < len; i++) {\r\n            var item = items[i];\r\n            var node = this._dataAdapter.getNodeByItem(item);\r\n            this._toggleExpandedState(node, state);\r\n            this._toggleExpandedNestedItems(item.items, state)\r\n        }\r\n    },\r\n    _getNodeElement: function(node, cache) {\r\n        var key = this._encodeString(node.internalFields.key);\r\n        if (cache) {\r\n            if (!cache.$nodeByKey) {\r\n                cache.$nodeByKey = {};\r\n                this.$element().find(\".\".concat(NODE_CLASS)).each((function() {\r\n                    var $node = $(this);\r\n                    var key = $node.attr(DATA_ITEM_ID);\r\n                    cache.$nodeByKey[key] = $node\r\n                }))\r\n            }\r\n            return cache.$nodeByKey[key] || $()\r\n        }\r\n        var element = this.$element().get(0).querySelector(\"[\".concat(DATA_ITEM_ID, '=\"').concat(key, '\"]'));\r\n        return $(element)\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _widgetClass: function() {\r\n        return WIDGET_CLASS\r\n    },\r\n    _getDefaultOptions: function() {\r\n        var defaultOptions = extend(this.callBase(), {\r\n            animationEnabled: true,\r\n            dataStructure: \"tree\",\r\n            deferRendering: true,\r\n            expandAllEnabled: false,\r\n            hasItemsExpr: \"hasItems\",\r\n            selectNodesRecursive: true,\r\n            expandNodesRecursive: true,\r\n            showCheckBoxesMode: \"none\",\r\n            selectAllText: messageLocalization.format(\"dxList-selectAll\"),\r\n            onItemSelectionChanged: null,\r\n            onItemExpanded: null,\r\n            onItemCollapsed: null,\r\n            scrollDirection: \"vertical\",\r\n            useNativeScrolling: true,\r\n            virtualModeEnabled: false,\r\n            rootValue: 0,\r\n            focusStateEnabled: false,\r\n            selectionMode: \"multiple\",\r\n            expandEvent: \"dblclick\",\r\n            selectByClick: false,\r\n            createChildren: null,\r\n            onSelectAllValueChanged: null\r\n        });\r\n        return extend(true, defaultOptions, {\r\n            integrationOptions: {\r\n                useDeferUpdateForTemplates: false\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return !nativeScrolling\r\n            },\r\n            options: {\r\n                useNativeScrolling: false\r\n            }\r\n        }])\r\n    },\r\n    _initSelectedItems: noop,\r\n    _syncSelectionOptions: asyncNoop,\r\n    _fireSelectionChanged: function() {\r\n        var selectionChangePromise = this._selectionChangePromise;\r\n        when(selectionChangePromise).done(function() {\r\n            this._createActionByOption(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            })()\r\n        }.bind(this))\r\n    },\r\n    _createSelectAllValueChangedAction: function() {\r\n        this._selectAllValueChangedAction = this._createActionByOption(\"onSelectAllValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _fireSelectAllValueChanged: function(value) {\r\n        this._selectAllValueChangedAction({\r\n            value: value\r\n        })\r\n    },\r\n    _checkBoxModeChange: function(value, previousValue) {\r\n        if (\"none\" === previousValue || \"none\" === value) {\r\n            this.repaint();\r\n            return\r\n        }\r\n        var selectAllExists = this._$selectAllItem && this._$selectAllItem.length;\r\n        switch (value) {\r\n            case \"selectAll\":\r\n                if (!selectAllExists) {\r\n                    this._createSelectAllValueChangedAction();\r\n                    this._renderSelectAllItem()\r\n                }\r\n                break;\r\n            case \"normal\":\r\n                if (selectAllExists) {\r\n                    this._$selectAllItem.remove();\r\n                    delete this._$selectAllItem\r\n                }\r\n        }\r\n    },\r\n    _removeSelection: function() {\r\n        var that = this;\r\n        each(this._dataAdapter.getFullData(), (function(_, node) {\r\n            if (!that._hasChildren(node)) {\r\n                return\r\n            }\r\n            that._dataAdapter.toggleSelection(node.internalFields.key, false, true)\r\n        }))\r\n    },\r\n    _optionChanged: function(args) {\r\n        var {\r\n            name: name,\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (name) {\r\n            case \"selectAllText\":\r\n                if (this._$selectAllItem) {\r\n                    this._$selectAllItem.dxCheckBox(\"instance\").option(\"text\", value)\r\n                }\r\n                break;\r\n            case \"showCheckBoxesMode\":\r\n                this._checkBoxModeChange(value, previousValue);\r\n                break;\r\n            case \"scrollDirection\":\r\n                this.getScrollable().option(\"direction\", value);\r\n                break;\r\n            case \"useNativeScrolling\":\r\n                this.getScrollable().option(\"useNative\", value);\r\n                break;\r\n            case \"items\":\r\n                delete this._$selectAllItem;\r\n                this.callBase(args);\r\n                break;\r\n            case \"dataSource\":\r\n                this.callBase(args);\r\n                this._initDataAdapter();\r\n                this._filter = {};\r\n                break;\r\n            case \"hasItemsExpr\":\r\n                this._initAccessors();\r\n                this.repaint();\r\n                break;\r\n            case \"expandEvent\":\r\n                this._initExpandEvent();\r\n                break;\r\n            case \"deferRendering\":\r\n            case \"dataStructure\":\r\n            case \"rootValue\":\r\n            case \"createChildren\":\r\n            case \"expandNodesRecursive\":\r\n            case \"onItemSelectionChanged\":\r\n            case \"onItemExpanded\":\r\n            case \"onItemCollapsed\":\r\n            case \"expandAllEnabled\":\r\n            case \"animationEnabled\":\r\n            case \"virtualModeEnabled\":\r\n            case \"selectByClick\":\r\n                break;\r\n            case \"selectionMode\":\r\n                this._initDataAdapter();\r\n                this.callBase(args);\r\n                break;\r\n            case \"onSelectAllValueChanged\":\r\n                this._createSelectAllValueChangedAction();\r\n                break;\r\n            case \"selectNodesRecursive\":\r\n                this._dataAdapter.setOption(\"recursiveSelection\", args.value);\r\n                this.repaint();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _initDataSource: function() {\r\n        if (this._useCustomChildrenLoader()) {\r\n            this._loadChildrenByCustomLoader(null).done(function(newItems) {\r\n                if (newItems && newItems.length) {\r\n                    this.option(\"items\", newItems)\r\n                }\r\n            }.bind(this))\r\n        } else {\r\n            this.callBase();\r\n            this._isVirtualMode() && this._initVirtualMode()\r\n        }\r\n    },\r\n    _initVirtualMode: function() {\r\n        var filter = this._filter;\r\n        if (!filter.custom) {\r\n            filter.custom = this._dataSource.filter()\r\n        }\r\n        if (!filter.internal) {\r\n            filter.internal = [this.option(\"parentIdExpr\"), this.option(\"rootValue\")]\r\n        }\r\n    },\r\n    _useCustomChildrenLoader: function() {\r\n        return isFunction(this.option(\"createChildren\")) && this._isDataStructurePlain()\r\n    },\r\n    _loadChildrenByCustomLoader: function(parentNode) {\r\n        var invocationResult = this.option(\"createChildren\").call(this, parentNode);\r\n        if (Array.isArray(invocationResult)) {\r\n            return (new Deferred).resolve(invocationResult).promise()\r\n        }\r\n        if (invocationResult && isFunction(invocationResult.then)) {\r\n            return fromPromise(invocationResult)\r\n        }\r\n        return (new Deferred).resolve([]).promise()\r\n    },\r\n    _combineFilter: function() {\r\n        if (!this._filter.custom || !this._filter.custom.length) {\r\n            return this._filter.internal\r\n        }\r\n        return [this._filter.custom, this._filter.internal]\r\n    },\r\n    _dataSourceLoadErrorHandler: function() {\r\n        this._renderEmptyMessage()\r\n    },\r\n    _init: function() {\r\n        this._filter = {};\r\n        this.callBase();\r\n        this._initStoreChangeHandlers()\r\n    },\r\n    _dataSourceChangedHandler: function(newItems) {\r\n        var items = this.option(\"items\");\r\n        if (this._initialized && this._isVirtualMode() && items.length) {\r\n            return\r\n        }\r\n        this.option(\"items\", newItems)\r\n    },\r\n    _removeTreeViewLoadIndicator: function() {\r\n        if (!this._treeViewLoadIndicator) {\r\n            return\r\n        }\r\n        this._treeViewLoadIndicator.remove();\r\n        this._treeViewLoadIndicator = null\r\n    },\r\n    _createTreeViewLoadIndicator: function() {\r\n        this._treeViewLoadIndicator = $(\"<div>\").addClass(LOAD_INDICATOR_CLASS);\r\n        this._createComponent(this._treeViewLoadIndicator, LoadIndicator, {});\r\n        return this._treeViewLoadIndicator\r\n    },\r\n    _dataSourceLoadingChangedHandler: function(isLoading) {\r\n        var resultFilter;\r\n        if (this._isVirtualMode()) {\r\n            resultFilter = this._combineFilter();\r\n            this._dataSource.filter(resultFilter)\r\n        }\r\n        if (isLoading && !this._dataSource.isLoaded()) {\r\n            this.option(\"items\", []);\r\n            var $wrapper = $(\"<div>\").addClass(LOAD_INDICATOR_WRAPPER_CLASS);\r\n            this._createTreeViewLoadIndicator().appendTo($wrapper);\r\n            this.itemsContainer().append($wrapper);\r\n            if (this._isVirtualMode() && this._dataSource.filter() !== resultFilter) {\r\n                this._dataSource.filter([])\r\n            }\r\n        } else {\r\n            this._removeTreeViewLoadIndicator()\r\n        }\r\n    },\r\n    _initStoreChangeHandlers: function() {\r\n        if (\"plain\" !== this.option(\"dataStructure\")) {\r\n            return\r\n        }\r\n        this._dataSource && this._dataSource.store().on(\"inserted\", newItem => {\r\n            this.option().items = this.option(\"items\").concat(newItem);\r\n            this._dataAdapter.addItem(newItem);\r\n            if (!this._dataAdapter.isFiltered(newItem)) {\r\n                return\r\n            }\r\n            this._updateLevel(this._parentIdGetter(newItem))\r\n        }).on(\"removed\", removedKey => {\r\n            var node = this._dataAdapter.getNodeByKey(removedKey);\r\n            if (isDefined(node)) {\r\n                this.option(\"items\")[this._dataAdapter.getIndexByKey(node.internalFields.key)] = 0;\r\n                this._markChildrenItemsToRemove(node);\r\n                this._removeItems();\r\n                this._dataAdapter.removeItem(removedKey);\r\n                this._updateLevel(this._parentIdGetter(node))\r\n            }\r\n        })\r\n    },\r\n    _markChildrenItemsToRemove: function(node) {\r\n        var keys = node.internalFields.childrenKeys;\r\n        each(keys, (_, key) => {\r\n            this.option(\"items\")[this._dataAdapter.getIndexByKey(key)] = 0;\r\n            this._markChildrenItemsToRemove(this._dataAdapter.getNodeByKey(key))\r\n        })\r\n    },\r\n    _removeItems: function() {\r\n        var items = extend(true, [], this.option(\"items\"));\r\n        var counter = 0;\r\n        each(items, (index, item) => {\r\n            if (!item) {\r\n                this.option(\"items\").splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _updateLevel: function(parentId) {\r\n        var $container = this._getContainerByParentKey(parentId);\r\n        this._renderItems($container, this._dataAdapter.getChildrenNodes(parentId))\r\n    },\r\n    _getOldContainer: function($itemElement) {\r\n        if ($itemElement.length) {\r\n            return $itemElement.children(\".\".concat(NODE_CONTAINER_CLASS))\r\n        }\r\n        var scrollable = this.getScrollable();\r\n        if (scrollable) {\r\n            return $(scrollable.content()).children()\r\n        }\r\n        return $()\r\n    },\r\n    _getContainerByParentKey: function(parentId) {\r\n        var node = this._dataAdapter.getNodeByKey(parentId);\r\n        var $itemElement = node ? this._getNodeElement(node) : [];\r\n        this._getOldContainer($itemElement).remove();\r\n        var $container = this._renderNodeContainer($itemElement);\r\n        if (this._isRootLevel(parentId)) {\r\n            var scrollable = this.getScrollable();\r\n            if (!scrollable) {\r\n                this._renderScrollableContainer()\r\n            }\r\n            $(scrollable.content()).append($container)\r\n        }\r\n        return $container\r\n    },\r\n    _isRootLevel: function(parentId) {\r\n        return parentId === this.option(\"rootValue\")\r\n    },\r\n    _getAccessors: function() {\r\n        var accessors = this.callBase();\r\n        accessors.push(\"hasItems\");\r\n        return accessors\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: this.option(\"rootValue\"),\r\n            multipleSelection: !this._isSingleSelection(),\r\n            recursiveSelection: this._isRecursiveSelection(),\r\n            recursiveExpansion: this.option(\"expandNodesRecursive\"),\r\n            selectionRequired: this.option(\"selectionRequired\"),\r\n            dataType: this.option(\"dataStructure\"),\r\n            sort: this._dataSource && this._dataSource.sort()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderScrollableContainer();\r\n        this._renderEmptyMessage(this._dataAdapter.getRootNodes());\r\n        this.callBase();\r\n        this.setAria(\"role\", \"tree\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        var $nodeContainer = this._renderNodeContainer();\r\n        $(this.getScrollable().content()).append($nodeContainer);\r\n        if (!this.option(\"items\") || !this.option(\"items\").length) {\r\n            return\r\n        }\r\n        this._renderItems($nodeContainer, this._dataAdapter.getRootNodes());\r\n        this._initExpandEvent();\r\n        if (this._selectAllEnabled()) {\r\n            this._createSelectAllValueChangedAction();\r\n            this._renderSelectAllItem($nodeContainer)\r\n        }\r\n    },\r\n    _isVirtualMode: function() {\r\n        return this.option(\"virtualModeEnabled\") && this._isDataStructurePlain() && !!this.option(\"dataSource\")\r\n    },\r\n    _isDataStructurePlain: function() {\r\n        return \"plain\" === this.option(\"dataStructure\")\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        var dataSource = this.getDataSource();\r\n        var skipContentReadyAction = dataSource && !dataSource.isLoaded() || this._skipContentReadyAndItemExpanded;\r\n        var scrollable = this.getScrollable();\r\n        if (scrollable && hasWindow()) {\r\n            scrollable.update()\r\n        }\r\n        if (!skipContentReadyAction) {\r\n            this.callBase()\r\n        }\r\n        if (scrollable && hasWindow()) {\r\n            scrollable.update()\r\n        }\r\n    },\r\n    _renderScrollableContainer: function() {\r\n        this._scrollable = this._createComponent($(\"<div>\").appendTo(this.$element()), Scrollable, {\r\n            useNative: this.option(\"useNativeScrolling\"),\r\n            direction: this.option(\"scrollDirection\"),\r\n            useKeyboard: false\r\n        })\r\n    },\r\n    _renderNodeContainer: function($parent) {\r\n        var $container = $(\"<ul>\").addClass(NODE_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"group\", $container);\r\n        if ($parent && $parent.length) {\r\n            var itemData = this._getItemData($parent.children(\".\" + ITEM_CLASS));\r\n            if (this._expandedGetter(itemData)) {\r\n                $container.addClass(OPENED_NODE_CONTAINER_CLASS)\r\n            }\r\n            $container.appendTo($parent)\r\n        }\r\n        return $container\r\n    },\r\n    _createDOMElement: function($nodeContainer, node) {\r\n        var $node = $(\"<li>\").addClass(NODE_CLASS).attr(DATA_ITEM_ID, this._encodeString(node.internalFields.key)).prependTo($nodeContainer);\r\n        this.setAria({\r\n            role: \"treeitem\",\r\n            label: this._displayGetter(node.internalFields.item) || \"\",\r\n            expanded: node.internalFields.expanded || false,\r\n            level: this._getLevel($nodeContainer)\r\n        }, $node);\r\n        return $node\r\n    },\r\n    _getLevel: function($nodeContainer) {\r\n        var parent = $nodeContainer.parent();\r\n        return parent.hasClass(\"dx-scrollable-content\") ? 1 : parseInt(parent.attr(\"aria-level\")) + 1\r\n    },\r\n    _showCheckboxes: function() {\r\n        return \"none\" !== this.option(\"showCheckBoxesMode\")\r\n    },\r\n    _selectAllEnabled: function() {\r\n        return \"selectAll\" === this.option(\"showCheckBoxesMode\") && !this._isSingleSelection()\r\n    },\r\n    _renderItems: function($nodeContainer, nodes) {\r\n        var length = nodes.length - 1;\r\n        for (var i = length; i >= 0; i--) {\r\n            this._renderItem(i, nodes[i], $nodeContainer)\r\n        }\r\n        this._renderedItemsCount += nodes.length\r\n    },\r\n    _renderItem: function(nodeIndex, node, $nodeContainer) {\r\n        var $node = this._createDOMElement($nodeContainer, node);\r\n        var nodeData = node.internalFields;\r\n        var showCheckBox = this._showCheckboxes();\r\n        $node.addClass(showCheckBox ? ITEM_WITH_CHECKBOX_CLASS : ITEM_WITHOUT_CHECKBOX_CLASS);\r\n        $node.toggleClass(INVISIBLE_STATE_CLASS, false === nodeData.item.visible);\r\n        showCheckBox && this._renderCheckBox($node, node);\r\n        this.setAria(\"selected\", nodeData.selected, $node);\r\n        this._toggleSelectedClass($node, nodeData.selected);\r\n        this.callBase(this._renderedItemsCount + nodeIndex, nodeData.item, $node);\r\n        if (false !== nodeData.item.visible) {\r\n            this._renderChildren($node, node)\r\n        }\r\n    },\r\n    _setAriaSelected: function() {},\r\n    _renderChildren: function($node, node) {\r\n        if (!this._hasChildren(node)) {\r\n            this._addLeafClass($node);\r\n            return\r\n        }\r\n        this._renderToggleItemVisibilityIcon($node, node);\r\n        if (this.option(\"deferRendering\") && !node.internalFields.expanded) {\r\n            return\r\n        }\r\n        this._loadSublevel(node).done(childNodes => {\r\n            this._renderSublevel($node, this._getActualNode(node), childNodes)\r\n        })\r\n    },\r\n    _getActualNode: function(cachedNode) {\r\n        return this._dataAdapter.getNodeByKey(cachedNode.internalFields.key)\r\n    },\r\n    _hasChildren: function(node) {\r\n        if (this._isVirtualMode() || this._useCustomChildrenLoader()) {\r\n            return false !== this._hasItemsGetter(node.internalFields.item)\r\n        }\r\n        return this.callBase(node)\r\n    },\r\n    _loadSublevel: function(node) {\r\n        var deferred = new Deferred;\r\n        var childrenNodes = this._getChildNodes(node);\r\n        if (childrenNodes.length) {\r\n            deferred.resolve(childrenNodes)\r\n        } else {\r\n            this._loadNestedItems(node).done(items => {\r\n                deferred.resolve(this._dataAdapter.getNodesByItems(items))\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    _renderSublevel: function($node, node, childNodes) {\r\n        var $nestedNodeContainer = this._renderNodeContainer($node, node);\r\n        var childNodesByChildrenKeys = childNodes.filter(childNode => -1 !== node.internalFields.childrenKeys.indexOf(childNode.internalFields.key));\r\n        this._renderItems($nestedNodeContainer, childNodesByChildrenKeys);\r\n        if (childNodesByChildrenKeys.length && !node.internalFields.selected) {\r\n            var firstChild = childNodesByChildrenKeys[0];\r\n            this._updateParentsState(firstChild, this._getNodeElement(firstChild))\r\n        }\r\n        this._normalizeIconState($node, childNodesByChildrenKeys.length);\r\n        if (node.internalFields.expanded) {\r\n            $nestedNodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS)\r\n        }\r\n    },\r\n    _executeItemRenderAction: function(itemIndex, itemData, itemElement) {\r\n        var node = this._getNode(itemElement);\r\n        this._getItemRenderAction()({\r\n            itemElement: itemElement,\r\n            itemIndex: itemIndex,\r\n            itemData: itemData,\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    _addLeafClass: function($node) {\r\n        $node.addClass(IS_LEAF)\r\n    },\r\n    _expandEventHandler: function(e) {\r\n        var $nodeElement = $(e.currentTarget.parentNode);\r\n        if (!$nodeElement.hasClass(IS_LEAF)) {\r\n            this._toggleExpandedState(e.currentTarget, void 0, e)\r\n        }\r\n    },\r\n    _initExpandEvent: function() {\r\n        var expandedEventName = this._getEventNameByOption(this.option(\"expandEvent\"));\r\n        var $itemsContainer = this._itemContainer();\r\n        var itemSelector = this._itemSelector();\r\n        eventsEngine.off($itemsContainer, \".\" + EXPAND_EVENT_NAMESPACE, itemSelector);\r\n        eventsEngine.on($itemsContainer, expandedEventName, itemSelector, this._expandEventHandler.bind(this))\r\n    },\r\n    _getEventNameByOption: function(name) {\r\n        var event = \"click\" === name ? clickEventName : dblclickEvent;\r\n        return addNamespace(event, EXPAND_EVENT_NAMESPACE)\r\n    },\r\n    _getNode: function(identifier) {\r\n        if (!isDefined(identifier)) {\r\n            return null\r\n        }\r\n        if (identifier.internalFields) {\r\n            return identifier\r\n        }\r\n        if (isPrimitive(identifier)) {\r\n            return this._dataAdapter.getNodeByKey(identifier)\r\n        }\r\n        var itemElement = $(identifier).get(0);\r\n        if (!itemElement) {\r\n            return null\r\n        }\r\n        if (domAdapter.isElementNode(itemElement)) {\r\n            return this._getNodeByElement(itemElement)\r\n        }\r\n        return this._dataAdapter.getNodeByItem(itemElement)\r\n    },\r\n    _getNodeByElement: function(itemElement) {\r\n        var $node = $(itemElement).closest(\".\" + NODE_CLASS);\r\n        var key = this._decodeString($node.attr(DATA_ITEM_ID));\r\n        return this._dataAdapter.getNodeByKey(key)\r\n    },\r\n    _toggleExpandedState: function(itemElement, state, e) {\r\n        var node = this._getNode(itemElement);\r\n        if (!node) {\r\n            return (new Deferred).reject().promise()\r\n        }\r\n        if (node.internalFields.disabled) {\r\n            return (new Deferred).reject().promise()\r\n        }\r\n        var currentState = node.internalFields.expanded;\r\n        if (currentState === state) {\r\n            return (new Deferred).resolve().promise()\r\n        }\r\n        if (this._hasChildren(node)) {\r\n            var $node = this._getNodeElement(node);\r\n            if ($node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS, \":not(.\").concat(INVISIBLE_STATE_CLASS, \")\")).length) {\r\n                return (new Deferred).reject().promise()\r\n            }\r\n            this._createLoadIndicator($node)\r\n        }\r\n        if (!isDefined(state)) {\r\n            state = !currentState\r\n        }\r\n        this._dataAdapter.toggleExpansion(node.internalFields.key, state);\r\n        return this._updateExpandedItemsUI(node, state, e)\r\n    },\r\n    _createLoadIndicator: function($node) {\r\n        var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        if ($icon.hasClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS) || $nodeContainer.not(\":empty\").length) {\r\n            return\r\n        }\r\n        this._createComponent($(\"<div>\").addClass(NODE_LOAD_INDICATOR_CLASS), LoadIndicator, {}).$element().appendTo($node);\r\n        $icon.hide()\r\n    },\r\n    _renderToggleItemVisibilityIcon: function($node, node) {\r\n        var $icon = $(\"<div>\").addClass(TOGGLE_ITEM_VISIBILITY_CLASS).appendTo($node);\r\n        if (node.internalFields.expanded) {\r\n            $icon.addClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS);\r\n            $node.parent().addClass(OPENED_NODE_CONTAINER_CLASS)\r\n        }\r\n        if (node.internalFields.disabled) {\r\n            $icon.addClass(DISABLED_STATE_CLASS)\r\n        }\r\n        this._renderToggleItemVisibilityIconClick($icon, node)\r\n    },\r\n    _renderToggleItemVisibilityIconClick: function($icon, node) {\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        eventsEngine.off($icon, eventName);\r\n        eventsEngine.on($icon, eventName, e => {\r\n            this._toggleExpandedState(node.internalFields.key, void 0, e)\r\n        })\r\n    },\r\n    _updateExpandedItemsUI: function(node, state, e) {\r\n        var $node = this._getNodeElement(node);\r\n        var isHiddenNode = !$node.length || state && $node.is(\":hidden\");\r\n        if (this.option(\"expandNodesRecursive\") && isHiddenNode) {\r\n            var parentNode = this._getNode(node.internalFields.parentKey);\r\n            if (parentNode) {\r\n                this._updateExpandedItemsUI(parentNode, state, e)\r\n            }\r\n        }\r\n        var $icon = $node.children(\".\" + TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        $icon.toggleClass(TOGGLE_ITEM_VISIBILITY_OPENED_CLASS, state);\r\n        var nodeContainerExists = $nodeContainer.length > 0;\r\n        var completionCallback = new Deferred;\r\n        if (!state || nodeContainerExists && !$nodeContainer.is(\":empty\")) {\r\n            this._animateNodeContainer(node, state, e, completionCallback);\r\n            return completionCallback.promise()\r\n        }\r\n        if (0 === node.internalFields.childrenKeys.length && (this._isVirtualMode() || this._useCustomChildrenLoader())) {\r\n            this._loadNestedItemsWithUpdate(node, state, e, completionCallback);\r\n            return completionCallback.promise()\r\n        }\r\n        this._renderSublevel($node, node, this._getChildNodes(node));\r\n        this._fireContentReadyAction();\r\n        this._animateNodeContainer(node, state, e, completionCallback);\r\n        return completionCallback.promise()\r\n    },\r\n    _loadNestedItemsWithUpdate: function(node, state, e, completionCallback) {\r\n        var $node = this._getNodeElement(node);\r\n        this._loadNestedItems(node).done(items => {\r\n            var actualNodeData = this._getActualNode(node);\r\n            this._renderSublevel($node, actualNodeData, this._dataAdapter.getNodesByItems(items));\r\n            if (!items || !items.length) {\r\n                completionCallback.resolve();\r\n                return\r\n            }\r\n            this._fireContentReadyAction();\r\n            this._animateNodeContainer(actualNodeData, state, e, completionCallback)\r\n        })\r\n    },\r\n    _loadNestedItems: function(node) {\r\n        if (this._useCustomChildrenLoader()) {\r\n            var publicNode = this._dataAdapter.getPublicNode(node);\r\n            return this._loadChildrenByCustomLoader(publicNode).done(newItems => {\r\n                if (!this._areNodesExists(newItems)) {\r\n                    this._appendItems(newItems)\r\n                }\r\n            })\r\n        }\r\n        if (!this._isVirtualMode()) {\r\n            return (new Deferred).resolve([]).promise()\r\n        }\r\n        this._filter.internal = [this.option(\"parentIdExpr\"), node.internalFields.key];\r\n        this._dataSource.filter(this._combineFilter());\r\n        return this._dataSource.load().done(newItems => {\r\n            if (!this._areNodesExists(newItems)) {\r\n                this._appendItems(newItems)\r\n            }\r\n        })\r\n    },\r\n    _areNodesExists: function(newItems, items) {\r\n        var keyOfRootItem = this.keyOf(newItems[0]);\r\n        var fullData = this._dataAdapter.getFullData();\r\n        return !!this._dataAdapter.getNodeByKey(keyOfRootItem, fullData)\r\n    },\r\n    _appendItems: function(newItems) {\r\n        this.option().items = this.option(\"items\").concat(newItems);\r\n        this._initDataAdapter()\r\n    },\r\n    _animateNodeContainer: function(node, state, e, completionCallback) {\r\n        var $node = this._getNodeElement(node);\r\n        var $nodeContainer = $node.children(\".\".concat(NODE_CONTAINER_CLASS));\r\n        if (node && completionCallback && 0 === $nodeContainer.length) {\r\n            completionCallback.resolve()\r\n        }\r\n        $nodeContainer.addClass(OPENED_NODE_CONTAINER_CLASS);\r\n        var nodeHeight = getHeight($nodeContainer);\r\n        fx.stop($nodeContainer, true);\r\n        fx.animate($nodeContainer, {\r\n            type: \"custom\",\r\n            duration: this.option(\"animationEnabled\") ? 400 : 0,\r\n            from: {\r\n                maxHeight: state ? 0 : nodeHeight\r\n            },\r\n            to: {\r\n                maxHeight: state ? nodeHeight : 0\r\n            },\r\n            complete: function() {\r\n                $nodeContainer.css(\"maxHeight\", \"none\");\r\n                $nodeContainer.toggleClass(OPENED_NODE_CONTAINER_CLASS, state);\r\n                this.setAria(\"expanded\", state, $node);\r\n                this.getScrollable().update();\r\n                this._fireExpandedStateUpdatedEvent(state, node, e);\r\n                if (completionCallback) {\r\n                    completionCallback.resolve()\r\n                }\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _fireExpandedStateUpdatedEvent: function(isExpanded, node, e) {\r\n        if (!this._hasChildren(node) || this._skipContentReadyAndItemExpanded) {\r\n            return\r\n        }\r\n        var optionName = isExpanded ? \"onItemExpanded\" : \"onItemCollapsed\";\r\n        if (isDefined(e)) {\r\n            this._itemDXEventHandler(e, optionName, {\r\n                node: this._dataAdapter.getPublicNode(node)\r\n            })\r\n        } else {\r\n            var target = this._getNodeElement(node);\r\n            this._itemEventHandler(target, optionName, {\r\n                event: e,\r\n                node: this._dataAdapter.getPublicNode(node)\r\n            })\r\n        }\r\n    },\r\n    _normalizeIconState: function($node, hasNewItems) {\r\n        var $loadIndicator = $node.find(\".\".concat(NODE_LOAD_INDICATOR_CLASS));\r\n        if ($loadIndicator.length) {\r\n            var _LoadIndicator$getIns;\r\n            null === (_LoadIndicator$getIns = LoadIndicator.getInstance($loadIndicator)) || void 0 === _LoadIndicator$getIns ? void 0 : _LoadIndicator$getIns.option(\"visible\", false)\r\n        }\r\n        var $toggleItem = $node.find(\".\".concat(TOGGLE_ITEM_VISIBILITY_CLASS));\r\n        if (hasNewItems) {\r\n            $toggleItem.show();\r\n            return\r\n        }\r\n        $toggleItem.removeClass(TOGGLE_ITEM_VISIBILITY_CLASS);\r\n        $node.addClass(IS_LEAF)\r\n    },\r\n    _emptyMessageContainer: function() {\r\n        var scrollable = this.getScrollable();\r\n        return scrollable ? $(scrollable.content()) : this.callBase()\r\n    },\r\n    _renderContent: function() {\r\n        var items = this.option(\"items\");\r\n        if (items && items.length) {\r\n            this._contentAlreadyRendered = true\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderSelectAllItem: function($container) {\r\n        $container = $container || this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).first();\r\n        this._$selectAllItem = $(\"<div>\").addClass(SELECT_ALL_ITEM_CLASS);\r\n        var value = this._dataAdapter.isAllSelected();\r\n        this._createComponent(this._$selectAllItem, CheckBox, {\r\n            value: value,\r\n            tabIndex: 1,\r\n            text: this.option(\"selectAllText\"),\r\n            onValueChanged: this._onSelectAllCheckboxValueChanged.bind(this)\r\n        });\r\n        this._toggleSelectedClass(this._$selectAllItem, value);\r\n        $container.before(this._$selectAllItem)\r\n    },\r\n    _onSelectAllCheckboxValueChanged: function(args) {\r\n        this._toggleSelectAll(args);\r\n        this._fireSelectAllValueChanged(args.value)\r\n    },\r\n    _toggleSelectAll: function(args) {\r\n        this._dataAdapter.toggleSelectAll(args.value);\r\n        this._updateItemsUI();\r\n        this._fireSelectionChanged()\r\n    },\r\n    _renderCheckBox: function($node, node) {\r\n        var $checkbox = $(\"<div>\").appendTo($node);\r\n        this._createComponent($checkbox, CheckBox, {\r\n            value: node.internalFields.selected,\r\n            onValueChanged: this._changeCheckboxValue.bind(this),\r\n            focusStateEnabled: false,\r\n            disabled: this._disabledGetter(node)\r\n        })\r\n    },\r\n    _toggleSelectedClass: function($node, value) {\r\n        $node.toggleClass(SELECTED_ITEM_CLASS, !!value)\r\n    },\r\n    _toggleNodeDisabledState: function(node, state) {\r\n        var $node = this._getNodeElement(node);\r\n        var $item = $node.find(\".\" + ITEM_CLASS).eq(0);\r\n        this._dataAdapter.toggleNodeDisabledState(node.internalFields.key, state);\r\n        $item.toggleClass(DISABLED_STATE_CLASS, !!state);\r\n        if (this._showCheckboxes()) {\r\n            var checkbox = this._getCheckBoxInstance($node);\r\n            checkbox.option(\"disabled\", !!state)\r\n        }\r\n    },\r\n    _itemOptionChanged: function(item, property, value) {\r\n        var node = this._dataAdapter.getNodeByItem(item);\r\n        if (property === this.option(\"disabledExpr\")) {\r\n            this._toggleNodeDisabledState(node, value)\r\n        }\r\n    },\r\n    _changeCheckboxValue: function(e) {\r\n        var $node = $(e.element).parent(\".\" + NODE_CLASS);\r\n        var $item = $node.children(\".\" + ITEM_CLASS);\r\n        var item = this._getItemData($item);\r\n        var node = this._getNodeByElement($item);\r\n        var value = e.value;\r\n        if (node && node.internalFields.selected === value) {\r\n            return\r\n        }\r\n        this._updateItemSelection(value, item, e.event)\r\n    },\r\n    _isSingleSelection: function() {\r\n        return \"single\" === this.option(\"selectionMode\")\r\n    },\r\n    _isRecursiveSelection: function() {\r\n        return this.option(\"selectNodesRecursive\") && \"single\" !== this.option(\"selectionMode\")\r\n    },\r\n    _isLastSelectedBranch: function(publicNode, selectedNodesKeys, deep) {\r\n        var keyIndex = selectedNodesKeys.indexOf(publicNode.key);\r\n        if (keyIndex >= 0) {\r\n            selectedNodesKeys.splice(keyIndex, 1)\r\n        }\r\n        if (deep) {\r\n            each(publicNode.children, function(_, childNode) {\r\n                this._isLastSelectedBranch(childNode, selectedNodesKeys, true)\r\n            }.bind(this))\r\n        }\r\n        if (publicNode.parent) {\r\n            this._isLastSelectedBranch(publicNode.parent, selectedNodesKeys)\r\n        }\r\n        return 0 === selectedNodesKeys.length\r\n    },\r\n    _isLastRequired: function(node) {\r\n        var selectionRequired = this.option(\"selectionRequired\");\r\n        var isSingleMode = this._isSingleSelection();\r\n        var selectedNodesKeys = this.getSelectedNodeKeys();\r\n        if (!selectionRequired) {\r\n            return\r\n        }\r\n        if (isSingleMode) {\r\n            return 1 === selectedNodesKeys.length\r\n        } else {\r\n            return this._isLastSelectedBranch(node.internalFields.publicNode, selectedNodesKeys.slice(), true)\r\n        }\r\n    },\r\n    _updateItemSelection: function(value, itemElement, dxEvent) {\r\n        var node = this._getNode(itemElement);\r\n        if (!node || false === node.visible) {\r\n            return false\r\n        }\r\n        if (node.internalFields.selected === value) {\r\n            return true\r\n        }\r\n        if (!value && this._isLastRequired(node)) {\r\n            if (this._showCheckboxes()) {\r\n                var $node = this._getNodeElement(node);\r\n                this._getCheckBoxInstance($node).option(\"value\", true)\r\n            }\r\n            return false\r\n        }\r\n        if (value && this._isSingleSelection()) {\r\n            var selectedKeys = this.getSelectedNodeKeys();\r\n            each(selectedKeys, (index, key) => {\r\n                this._dataAdapter.toggleSelection(key, false);\r\n                this._updateItemsUI();\r\n                this._fireItemSelectionChanged(this._getNode(key))\r\n            })\r\n        }\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value);\r\n        var isAllSelected = this._dataAdapter.isAllSelected();\r\n        var needFireSelectAllChanged = this._selectAllEnabled() && this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\") !== isAllSelected;\r\n        this._updateItemsUI();\r\n        this._fireItemSelectionChanged(node, dxEvent);\r\n        this._fireSelectionChanged();\r\n        if (needFireSelectAllChanged) {\r\n            this._fireSelectAllValueChanged(isAllSelected)\r\n        }\r\n        return true\r\n    },\r\n    _fireItemSelectionChanged: function(node, dxEvent) {\r\n        var initiator = dxEvent || this._findItemElementByItem(node.internalFields.item);\r\n        var handler = dxEvent ? this._itemDXEventHandler : this._itemEventHandler;\r\n        handler.call(this, initiator, \"onItemSelectionChanged\", {\r\n            node: this._dataAdapter.getPublicNode(node),\r\n            itemData: node.internalFields.item\r\n        })\r\n    },\r\n    _getCheckBoxInstance: function($node) {\r\n        return $node.children(\".dx-checkbox\").dxCheckBox(\"instance\")\r\n    },\r\n    _updateItemsUI: function() {\r\n        var cache = {};\r\n        each(this._dataAdapter.getData(), (_, node) => {\r\n            var $node = this._getNodeElement(node, cache);\r\n            var nodeSelection = node.internalFields.selected;\r\n            if (!$node.length) {\r\n                return\r\n            }\r\n            this._toggleSelectedClass($node, nodeSelection);\r\n            this.setAria(\"selected\", nodeSelection, $node);\r\n            if (this._showCheckboxes()) {\r\n                this._getCheckBoxInstance($node).option(\"value\", nodeSelection)\r\n            }\r\n        });\r\n        if (this._selectAllEnabled()) {\r\n            var selectAllCheckbox = this._$selectAllItem.dxCheckBox(\"instance\");\r\n            selectAllCheckbox.option(\"onValueChanged\", void 0);\r\n            selectAllCheckbox.option(\"value\", this._dataAdapter.isAllSelected());\r\n            selectAllCheckbox.option(\"onValueChanged\", this._onSelectAllCheckboxValueChanged.bind(this))\r\n        }\r\n    },\r\n    _updateParentsState: function(node, $node) {\r\n        if (!$node) {\r\n            return\r\n        }\r\n        var parentNode = this._dataAdapter.getNodeByKey(node.internalFields.parentKey);\r\n        var $parentNode = $($node.parents(\".\" + NODE_CLASS)[0]);\r\n        if (this._showCheckboxes()) {\r\n            var parentValue = parentNode.internalFields.selected;\r\n            this._getCheckBoxInstance($parentNode).option(\"value\", parentValue);\r\n            this._toggleSelectedClass($parentNode, parentValue)\r\n        }\r\n        if (parentNode.internalFields.parentKey !== this.option(\"rootValue\")) {\r\n            this._updateParentsState(parentNode, $parentNode)\r\n        }\r\n    },\r\n    _itemEventHandlerImpl: function(initiator, action, actionArgs) {\r\n        var $itemElement = $(initiator).closest(\".\" + NODE_CLASS).children(\".\" + ITEM_CLASS);\r\n        return action(extend(this._extendActionArgs($itemElement), actionArgs))\r\n    },\r\n    _itemContextMenuHandler: function(e) {\r\n        this._createEventHandler(\"onItemContextMenu\", e)\r\n    },\r\n    _itemHoldHandler: function(e) {\r\n        this._createEventHandler(\"onItemHold\", e)\r\n    },\r\n    _createEventHandler: function(eventName, e) {\r\n        var node = this._getNodeByElement(e.currentTarget);\r\n        this._itemDXEventHandler(e, eventName, {\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return ITEM_DATA_KEY\r\n    },\r\n    _attachClickEvent: function() {\r\n        var clickSelector = \".\" + this._itemClass();\r\n        var pointerDownSelector = \".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS;\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        var pointerDownEvent = addNamespace(pointerEvents.down, this.NAME);\r\n        var $itemContainer = this._itemContainer();\r\n        var that = this;\r\n        eventsEngine.off($itemContainer, eventName, clickSelector);\r\n        eventsEngine.off($itemContainer, pointerDownEvent, pointerDownSelector);\r\n        eventsEngine.on($itemContainer, eventName, clickSelector, (function(e) {\r\n            that._itemClickHandler(e, $(this))\r\n        }));\r\n        eventsEngine.on($itemContainer, pointerDownEvent, pointerDownSelector, (function(e) {\r\n            that._itemPointerDownHandler(e)\r\n        }))\r\n    },\r\n    _itemClickHandler: function(e, $item) {\r\n        var itemData = this._getItemData($item);\r\n        var node = this._getNodeByElement($item);\r\n        this._itemDXEventHandler(e, \"onItemClick\", {\r\n            node: this._dataAdapter.getPublicNode(node)\r\n        });\r\n        if (this.option(\"selectByClick\") && !e.isDefaultPrevented()) {\r\n            this._updateItemSelection(!node.internalFields.selected, itemData, e)\r\n        }\r\n    },\r\n    _updateSelectionToFirstItem: function($items, startIndex) {\r\n        var itemIndex = startIndex;\r\n        while (itemIndex >= 0) {\r\n            var $item = $($items[itemIndex]);\r\n            this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\r\n            itemIndex--\r\n        }\r\n    },\r\n    _updateSelectionToLastItem: function($items, startIndex) {\r\n        var length = $items.length;\r\n        var itemIndex = startIndex;\r\n        while (itemIndex < length) {\r\n            var $item = $($items[itemIndex]);\r\n            this._updateItemSelection(true, $item.find(\".\" + ITEM_CLASS).get(0));\r\n            itemIndex++\r\n        }\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this._updateFocusState(e, true);\r\n        var isSelectAllItem = $(e.target).hasClass(SELECT_ALL_ITEM_CLASS);\r\n        if (isSelectAllItem || this.option(\"focusedElement\")) {\r\n            clearTimeout(this._setFocusedItemTimeout);\r\n            var element = isSelectAllItem ? getPublicElement(this._$selectAllItem) : $(this.option(\"focusedElement\"));\r\n            this._setFocusedItemTimeout = setTimeout(() => {\r\n                this._setFocusedItem(element)\r\n            });\r\n            return\r\n        }\r\n        var $activeItem = this._getActiveItem();\r\n        this.option(\"focusedElement\", getPublicElement($activeItem.closest(\".\" + NODE_CLASS)))\r\n    },\r\n    _setFocusedItem: function($target) {\r\n        if (!$target || !$target.length) {\r\n            return\r\n        }\r\n        if (!$target.children().hasClass(DISABLED_STATE_CLASS)) {\r\n            this.callBase($target)\r\n        }\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        var $target = $(e.target).closest(\".\" + NODE_CLASS + \", .\" + SELECT_ALL_ITEM_CLASS);\r\n        if (!$target.length) {\r\n            return\r\n        }\r\n        var itemElement = $target.hasClass(DISABLED_STATE_CLASS) ? null : $target;\r\n        this.option(\"focusedElement\", getPublicElement(itemElement))\r\n    },\r\n    _findNonDisabledNodes: function($nodes) {\r\n        return $nodes.not((function() {\r\n            return $(this).children(\".\" + ITEM_CLASS).hasClass(DISABLED_STATE_CLASS)\r\n        }))\r\n    },\r\n    _moveFocus: function(location, e) {\r\n        var FOCUS_UP = \"up\";\r\n        var FOCUS_DOWN = \"down\";\r\n        var FOCUS_FIRST = \"first\";\r\n        var FOCUS_LAST = \"last\";\r\n        var FOCUS_LEFT = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        var FOCUS_RIGHT = this.option(\"rtlEnabled\") ? \"left\" : \"right\";\r\n        this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).each((function() {\r\n            fx.stop(this, true)\r\n        }));\r\n        var $items = this._findNonDisabledNodes(this._nodeElements());\r\n        if (!$items || !$items.length) {\r\n            return\r\n        }\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                var $prevItem = this._prevItem($items);\r\n                this.option(\"focusedElement\", getPublicElement($prevItem));\r\n                var prevItemElement = this._getNodeItemElement($prevItem);\r\n                this.getScrollable().scrollToElement(prevItemElement);\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateItemSelection(true, prevItemElement)\r\n                }\r\n                break;\r\n            case FOCUS_DOWN:\r\n                var $nextItem = this._nextItem($items);\r\n                this.option(\"focusedElement\", getPublicElement($nextItem));\r\n                var nextItemElement = this._getNodeItemElement($nextItem);\r\n                this.getScrollable().scrollToElement(nextItemElement);\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateItemSelection(true, nextItemElement)\r\n                }\r\n                break;\r\n            case FOCUS_FIRST:\r\n                var $firstItem = $items.first();\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateSelectionToFirstItem($items, $items.index(this._prevItem($items)))\r\n                }\r\n                this.option(\"focusedElement\", getPublicElement($firstItem));\r\n                this.getScrollable().scrollToElement(this._getNodeItemElement($firstItem));\r\n                break;\r\n            case FOCUS_LAST:\r\n                var $lastItem = $items.last();\r\n                if (e.shiftKey && this._showCheckboxes()) {\r\n                    this._updateSelectionToLastItem($items, $items.index(this._nextItem($items)))\r\n                }\r\n                this.option(\"focusedElement\", getPublicElement($lastItem));\r\n                this.getScrollable().scrollToElement(this._getNodeItemElement($lastItem));\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                this._expandFocusedContainer();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                this._collapseFocusedContainer();\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n        }\r\n    },\r\n    _getNodeItemElement: function($node) {\r\n        return $node.find(\".\" + ITEM_CLASS).get(0)\r\n    },\r\n    _nodeElements: function() {\r\n        return this.$element().find(\".\" + NODE_CLASS).not(\":hidden\")\r\n    },\r\n    _expandFocusedContainer: function() {\r\n        var $focusedNode = $(this.option(\"focusedElement\"));\r\n        if (!$focusedNode.length || $focusedNode.hasClass(IS_LEAF)) {\r\n            return\r\n        }\r\n        var $node = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\r\n        if ($node.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\r\n            var $nextItem = this._nextItem(this._findNonDisabledNodes(this._nodeElements()));\r\n            this.option(\"focusedElement\", getPublicElement($nextItem));\r\n            this.getScrollable().scrollToElement(this._getNodeItemElement($nextItem));\r\n            return\r\n        }\r\n        var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\r\n        this._toggleExpandedState(node, true)\r\n    },\r\n    _getClosestNonDisabledNode: function($node) {\r\n        do {\r\n            $node = $node.parent().closest(\".\" + NODE_CLASS)\r\n        } while ($node.children(\".dx-treeview-item.dx-state-disabled\").length);\r\n        return $node\r\n    },\r\n    _collapseFocusedContainer: function() {\r\n        var $focusedNode = $(this.option(\"focusedElement\"));\r\n        if (!$focusedNode.length) {\r\n            return\r\n        }\r\n        var nodeElement = $focusedNode.find(\".\".concat(NODE_CONTAINER_CLASS)).eq(0);\r\n        if (!$focusedNode.hasClass(IS_LEAF) && nodeElement.hasClass(OPENED_NODE_CONTAINER_CLASS)) {\r\n            var node = this._getNodeByElement($focusedNode.children(\".\" + ITEM_CLASS));\r\n            this._toggleExpandedState(node, false)\r\n        } else {\r\n            var collapsedNode = this._getClosestNonDisabledNode($focusedNode);\r\n            collapsedNode.length && this.option(\"focusedElement\", getPublicElement(collapsedNode));\r\n            this.getScrollable().scrollToElement(this._getNodeItemElement(collapsedNode))\r\n        }\r\n    },\r\n    _encodeString: function(value) {\r\n        return isString(value) ? encodeURI(value) : value\r\n    },\r\n    _decodeString: function(value) {\r\n        return isString(value) ? decodeURI(value) : value\r\n    },\r\n    getScrollable: function() {\r\n        return this._scrollable\r\n    },\r\n    updateDimensions: function() {\r\n        var deferred = new Deferred;\r\n        var scrollable = this.getScrollable();\r\n        if (scrollable) {\r\n            scrollable.update().done(() => {\r\n                deferred.resolveWith(this)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(this)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    selectItem: function(itemElement) {\r\n        return this._updateItemSelection(true, itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        return this._updateItemSelection(false, itemElement)\r\n    },\r\n    expandItem: function(itemElement) {\r\n        return this._toggleExpandedState(itemElement, true)\r\n    },\r\n    collapseItem: function(itemElement) {\r\n        return this._toggleExpandedState(itemElement, false)\r\n    },\r\n    getNodes: function() {\r\n        return this._dataAdapter.getTreeNodes()\r\n    },\r\n    getSelectedNodes: function() {\r\n        return this.getSelectedNodeKeys().map(key => {\r\n            var node = this._dataAdapter.getNodeByKey(key);\r\n            return this._dataAdapter.getPublicNode(node)\r\n        })\r\n    },\r\n    getSelectedNodeKeys: function() {\r\n        return this._dataAdapter.getSelectedNodesKeys()\r\n    },\r\n    selectAll: function() {\r\n        if (this._selectAllEnabled()) {\r\n            this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", true)\r\n        } else {\r\n            this._toggleSelectAll({\r\n                value: true\r\n            })\r\n        }\r\n    },\r\n    unselectAll: function() {\r\n        if (this._selectAllEnabled()) {\r\n            this._$selectAllItem.dxCheckBox(\"instance\").option(\"value\", false)\r\n        } else {\r\n            this._toggleSelectAll({\r\n                value: false\r\n            })\r\n        }\r\n    },\r\n    _allItemsExpandedHandler: function() {\r\n        this._skipContentReadyAndItemExpanded = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    expandAll: function() {\r\n        var nodes = this._dataAdapter.getData();\r\n        var expandingPromises = [];\r\n        this._skipContentReadyAndItemExpanded = true;\r\n        nodes.forEach(node => expandingPromises.push(this._toggleExpandedState(node.internalFields.key, true)));\r\n        Promise.allSettled(expandingPromises).then(() => {\r\n            var _this$_allItemsExpand;\r\n            return null === (_this$_allItemsExpand = this._allItemsExpanded) || void 0 === _this$_allItemsExpand ? void 0 : _this$_allItemsExpand.call(this)\r\n        })\r\n    },\r\n    collapseAll: function() {\r\n        each(this._dataAdapter.getExpandedNodesKeys(), function(_, key) {\r\n            this._toggleExpandedState(key, false)\r\n        }.bind(this))\r\n    },\r\n    scrollToItem: function(keyOrItemOrElement) {\r\n        var node = this._getNode(keyOrItemOrElement);\r\n        if (!node) {\r\n            return (new Deferred).reject().promise()\r\n        }\r\n        var nodeKeysToExpand = [];\r\n        var parentNode = node.internalFields.publicNode.parent;\r\n        while (null != parentNode) {\r\n            if (!parentNode.expanded) {\r\n                nodeKeysToExpand.push(parentNode.key)\r\n            }\r\n            parentNode = parentNode.parent\r\n        }\r\n        var scrollCallback = new Deferred;\r\n        this._expandNodes(nodeKeysToExpand.reverse()).always(() => {\r\n            var $element = this._getNodeElement(node);\r\n            if ($element && $element.length) {\r\n                this.scrollToElementTopLeft($element.get(0));\r\n                scrollCallback.resolve()\r\n            } else {\r\n                scrollCallback.reject()\r\n            }\r\n        });\r\n        return scrollCallback.promise()\r\n    },\r\n    scrollToElementTopLeft: function(targetElement) {\r\n        var scrollable = this.getScrollable();\r\n        var {\r\n            scrollDirection: scrollDirection,\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        var targetLocation = {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        var relativeOffset = getRelativeOffset(SCROLLABLE_CONTENT_CLASS, targetElement);\r\n        if (scrollDirection !== DIRECTION_VERTICAL) {\r\n            var containerElement = $(scrollable.container()).get(0);\r\n            targetLocation.left = rtlEnabled ? relativeOffset.left + targetElement.offsetWidth - containerElement.clientWidth : relativeOffset.left\r\n        }\r\n        if (scrollDirection !== DIRECTION_HORIZONTAL) {\r\n            targetLocation.top = relativeOffset.top\r\n        }\r\n        scrollable.scrollTo(targetLocation)\r\n    },\r\n    _expandNodes: function(keysToExpand) {\r\n        if (!keysToExpand || 0 === keysToExpand.length) {\r\n            return (new Deferred).resolve().promise()\r\n        }\r\n        var resultCallback = new Deferred;\r\n        var callbacksByNodes = keysToExpand.map(key => this.expandItem(key));\r\n        when.apply($, callbacksByNodes).done(() => resultCallback.resolve()).fail(() => resultCallback.reject());\r\n        return resultCallback.promise()\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._setFocusedItemTimeout);\r\n        this._allItemsExpandedHandler = null\r\n    }\r\n});\r\nexport default TreeViewBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}