{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport registerComponent from \"../core/component_registrator\";\nimport { extend } from \"../core/utils/extend\";\nimport Draggable from \"./draggable\";\nimport { getPublicElement } from \"../core/element\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport { resetPosition } from \"../animation/translator\";\nimport fx from \"../animation/fx\";\nimport { Deferred } from \"../core/utils/deferred\";\nvar window = getWindow();\nvar SORTABLE = \"dxSortable\";\nvar PLACEHOLDER_CLASS = \"placeholder\";\nvar CLONE_CLASS = \"clone\";\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\nvar animate = (element, config) => {\n  var _config$to, _config$to2;\n  if (!element) {\n    return;\n  }\n  var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\n  var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\n  element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing);\n};\nvar stopAnimation = element => {\n  if (!element) {\n    return;\n  }\n  element.style.transform = \"\";\n  element.style.transition = \"\";\n};\nfunction getScrollableBoundary($scrollable) {\n  var offset = $scrollable.offset();\n  var style = $scrollable[0].style;\n  var paddingLeft = parseFloat(style.paddingLeft) || 0;\n  var paddingRight = parseFloat(style.paddingRight) || 0;\n  var paddingTop = parseFloat(style.paddingTop) || 0;\n  var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\n  var height = getHeight($scrollable);\n  var left = offset.left + paddingLeft;\n  var top = offset.top + paddingTop;\n  return {\n    left: left,\n    right: left + width,\n    top: top,\n    bottom: top + height\n  };\n}\nvar Sortable = Draggable.inherit({\n  _init: function () {\n    this.callBase();\n    this._sourceScrollHandler = this._handleSourceScroll.bind(this);\n    this._sourceScrollableInfo = null;\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      clone: true,\n      filter: \"> *\",\n      itemOrientation: \"vertical\",\n      dropFeedbackMode: \"push\",\n      allowDropInsideItem: false,\n      allowReordering: true,\n      moveItemOnDrop: false,\n      onDragChange: null,\n      onAdd: null,\n      onRemove: null,\n      onReorder: null,\n      onPlaceholderPrepared: null,\n      animation: {\n        type: \"slide\",\n        duration: 300,\n        easing: \"ease\"\n      },\n      fromIndex: null,\n      toIndex: null,\n      dropInsideItem: false,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      offset: 0,\n      autoUpdate: false,\n      draggableElementSize: 0\n    });\n  },\n  reset: function () {\n    this.option({\n      dropInsideItem: false,\n      toIndex: null,\n      fromIndex: null,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      draggableElementSize: 0\n    });\n    if (this._$placeholderElement) {\n      this._$placeholderElement.remove();\n    }\n    this._$placeholderElement = null;\n    if (!this._isIndicateMode() && this._$modifiedItem) {\n      this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\n      this._$modifiedItem = null;\n    }\n  },\n  _getPrevVisibleItem: function (items, index) {\n    return items.slice(0, index).reverse().filter(isElementVisible)[0];\n  },\n  _dragStartHandler: function (e) {\n    this.callBase.apply(this, arguments);\n    if (true === e.cancel) {\n      return;\n    }\n    var $sourceElement = this._getSourceElement();\n    this._updateItemPoints();\n    this._subscribeToSourceScroll(e);\n    this.option(\"fromIndex\", this._getElementIndex($sourceElement));\n    this.option(\"fromIndexOffset\", this.option(\"offset\"));\n  },\n  _subscribeToSourceScroll: function (e) {\n    var $scrollable = this._getScrollable($(e.target));\n    if ($scrollable) {\n      this._sourceScrollableInfo = {\n        element: $scrollable,\n        scrollLeft: $scrollable.scrollLeft(),\n        scrollTop: $scrollable.scrollTop()\n      };\n      eventsEngine.off($scrollable, \"scroll\", this._sourceScrollHandler);\n      eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler);\n    }\n  },\n  _unsubscribeFromSourceScroll: function () {\n    if (this._sourceScrollableInfo) {\n      eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\n      this._sourceScrollableInfo = null;\n    }\n  },\n  _handleSourceScroll: function (e) {\n    var sourceScrollableInfo = this._sourceScrollableInfo;\n    if (sourceScrollableInfo) {\n      [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\n        if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\n          var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\n          this._correctItemPoints(scrollBy);\n          this._movePlaceholder();\n          sourceScrollableInfo[scrollProp] = e.target[scrollProp];\n        }\n      });\n    }\n  },\n  _dragEnterHandler: function (e) {\n    this.callBase.apply(this, arguments);\n    if (this === this._getSourceDraggable()) {\n      return;\n    }\n    this._subscribeToSourceScroll(e);\n    this._updateItemPoints();\n    this.option(\"fromIndex\", -1);\n    if (!this._isIndicateMode()) {\n      var itemPoints = this.option(\"itemPoints\");\n      var lastItemPoint = itemPoints[itemPoints.length - 1];\n      if (lastItemPoint) {\n        var $element = this.$element();\n        var $sourceElement = this._getSourceElement();\n        var isVertical = this._isVerticalOrientation();\n        var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\n        var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\n        var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\n        var positionProp = isVertical ? \"top\" : \"left\";\n        var lastPointPosition = lastItemPoint[positionProp];\n        var elementPosition = $element.offset()[positionProp];\n        var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\n        if (freeSize < sourceElementSize) {\n          if (isVertical) {\n            var items = this._getItems();\n            var $lastItem = $(this._getPrevVisibleItem(items));\n            this._$modifiedItem = $lastItem;\n            this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\n            $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\n            var $sortable = $lastItem.closest(\".dx-sortable\");\n            var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\n            sortable && sortable.update();\n          }\n        }\n      }\n    }\n  },\n  _dragLeaveHandler: function () {\n    this.callBase.apply(this, arguments);\n    if (this !== this._getSourceDraggable()) {\n      this._unsubscribeFromSourceScroll();\n    }\n  },\n  dragEnter: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", -1);\n    }\n  },\n  dragLeave: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    }\n  },\n  _allowDrop: function (event) {\n    var targetDraggable = this._getTargetDraggable();\n    var $targetDraggable = targetDraggable.$element();\n    var $scrollable = this._getScrollable($targetDraggable);\n    if ($scrollable) {\n      var {\n        left: left,\n        right: right,\n        top: top,\n        bottom: bottom\n      } = getScrollableBoundary($scrollable);\n      var toIndex = this.option(\"toIndex\");\n      var itemPoints = this.option(\"itemPoints\");\n      var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\n      if (itemPoint && void 0 !== itemPoint.top) {\n        var isVertical = this._isVerticalOrientation();\n        if (isVertical) {\n          return top <= Math.ceil(itemPoint.top) && Math.floor(itemPoint.top) <= bottom;\n        } else {\n          return left <= Math.ceil(itemPoint.left) && Math.floor(itemPoint.left) <= right;\n        }\n      }\n    }\n    return true;\n  },\n  dragEnd: function (sourceEvent) {\n    this._unsubscribeFromSourceScroll();\n    var $sourceElement = this._getSourceElement();\n    var sourceDraggable = this._getSourceDraggable();\n    var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\n    var toIndex = this.option(\"toIndex\");\n    var event = sourceEvent.event;\n    var allowDrop = this._allowDrop(event);\n    if (null !== toIndex && toIndex >= 0 && allowDrop) {\n      var cancelAdd;\n      var cancelRemove;\n      if (sourceDraggable !== this) {\n        cancelAdd = this._fireAddEvent(event);\n        if (!cancelAdd) {\n          cancelRemove = this._fireRemoveEvent(event);\n        }\n      }\n      if (isSourceDraggable) {\n        resetPosition($sourceElement);\n      }\n      if (this.option(\"moveItemOnDrop\")) {\n        !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove);\n      }\n      if (sourceDraggable === this) {\n        return this._fireReorderEvent(event);\n      }\n    }\n    return new Deferred().resolve();\n  },\n  dragMove: function (e) {\n    var itemPoints = this.option(\"itemPoints\");\n    if (!itemPoints) {\n      return;\n    }\n    var isVertical = this._isVerticalOrientation();\n    var axisName = isVertical ? \"top\" : \"left\";\n    var cursorPosition = isVertical ? e.pageY : e.pageX;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var itemPoint;\n    for (var i = itemPoints.length - 1; i >= 0; i--) {\n      var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\n      if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\n        itemPoint = itemPoints[i];\n      } else {\n        break;\n      }\n    }\n    if (itemPoint) {\n      this._updatePlaceholderPosition(e, itemPoint);\n      if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\n        this._movePlaceholder();\n      }\n    }\n  },\n  _isIndicateMode: function () {\n    return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\");\n  },\n  _createPlaceholder: function () {\n    var $placeholderContainer;\n    if (this._isIndicateMode()) {\n      $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement);\n    }\n    this._$placeholderElement = $placeholderContainer;\n    return $placeholderContainer;\n  },\n  _getItems: function () {\n    var itemsSelector = this._getItemsSelector();\n    return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray();\n  },\n  _allowReordering: function () {\n    var sourceDraggable = this._getSourceDraggable();\n    var targetDraggable = this._getTargetDraggable();\n    return sourceDraggable !== targetDraggable || this.option(\"allowReordering\");\n  },\n  _isValidPoint: function (visibleIndex, draggableVisibleIndex, dropInsideItem) {\n    var allowDropInsideItem = this.option(\"allowDropInsideItem\");\n    var allowReordering = dropInsideItem || this._allowReordering();\n    if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\n      return false;\n    }\n    if (!this._isIndicateMode()) {\n      return true;\n    }\n    return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1);\n  },\n  _getItemPoints: function () {\n    var result = [];\n    var $item;\n    var offset;\n    var itemWidth;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var isVertical = this._isVerticalOrientation();\n    var itemElements = this._getItems();\n    var visibleItemElements = itemElements.filter(isElementVisible);\n    var visibleItemCount = visibleItemElements.length;\n    var $draggableItem = this._getDraggableElement();\n    var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\n    if (visibleItemCount) {\n      for (var i = 0; i <= visibleItemCount; i++) {\n        var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\n        var needCorrectTopPosition = isVertical && i === visibleItemCount;\n        if (i < visibleItemCount) {\n          $item = $(visibleItemElements[i]);\n          offset = $item.offset();\n          itemWidth = getOuterWidth($item);\n        }\n        result.push({\n          dropInsideItem: false,\n          left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\n          top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\n          index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\n          $item: $item,\n          width: getOuterWidth($item),\n          height: getOuterHeight($item),\n          isValid: this._isValidPoint(i, draggableVisibleIndex)\n        });\n      }\n      if (this.option(\"allowDropInsideItem\")) {\n        var points = result;\n        result = [];\n        for (var _i = 0; _i < points.length; _i++) {\n          result.push(points[_i]);\n          if (points[_i + 1]) {\n            result.push(extend({}, points[_i], {\n              dropInsideItem: true,\n              top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\n              left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\n              isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\n            }));\n          }\n        }\n      }\n    } else {\n      result.push({\n        dropInsideItem: false,\n        index: 0,\n        isValid: true\n      });\n    }\n    return result;\n  },\n  _updateItemPoints: function (forceUpdate) {\n    if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\n      this.option(\"itemPoints\", this._getItemPoints());\n    }\n  },\n  _correctItemPoints: function (scrollBy) {\n    var itemPoints = this.option(\"itemPoints\");\n    if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\n      var isVertical = this._isVerticalOrientation();\n      var positionPropName = isVertical ? \"top\" : \"left\";\n      itemPoints.forEach(itemPoint => {\n        itemPoint[positionPropName] -= scrollBy;\n      });\n    }\n  },\n  _getElementIndex: function ($itemElement) {\n    return this._getItems().indexOf($itemElement.get(0));\n  },\n  _getDragTemplateArgs: function ($element) {\n    var args = this.callBase.apply(this, arguments);\n    args.model.fromIndex = this._getElementIndex($element);\n    return args;\n  },\n  _togglePlaceholder: function (value) {\n    this._$placeholderElement && this._$placeholderElement.toggle(value);\n  },\n  _isVerticalOrientation: function () {\n    return \"vertical\" === this.option(\"itemOrientation\");\n  },\n  _normalizeToIndex: function (toIndex, skipOffsetting) {\n    var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\n    var fromIndex = this._getActualFromIndex();\n    if (null === toIndex) {\n      return fromIndex;\n    }\n    return Math.max(isAnotherDraggable || fromIndex >= toIndex || skipOffsetting ? toIndex : toIndex - 1, 0);\n  },\n  _updatePlaceholderPosition: function (e, itemPoint) {\n    var sourceDraggable = this._getSourceDraggable();\n    var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\n    var eventArgs = extend(this._getEventArgs(e), {\n      toIndex: toIndex,\n      dropInsideItem: itemPoint.dropInsideItem\n    });\n    itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\n    if (eventArgs.cancel || !itemPoint.isValid) {\n      if (!itemPoint.isValid) {\n        this.option({\n          dropInsideItem: false,\n          toIndex: null\n        });\n      }\n      return;\n    }\n    this.option({\n      dropInsideItem: itemPoint.dropInsideItem,\n      toIndex: itemPoint.index\n    });\n    this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\n      placeholderElement: getPublicElement(this._$placeholderElement),\n      dragElement: getPublicElement(sourceDraggable._$dragElement)\n    }));\n    this._updateItemPoints();\n  },\n  _makeWidthCorrection: function ($item, width) {\n    this._$scrollable = this._getScrollable($item);\n    if (this._$scrollable) {\n      var scrollableWidth = getWidth(this._$scrollable);\n      var overflowLeft = this._$scrollable.offset().left - $item.offset().left;\n      var overflowRight = getOuterWidth($item) - overflowLeft - scrollableWidth;\n      if (overflowLeft > 0) {\n        width -= overflowLeft;\n      }\n      if (overflowRight > 0) {\n        width -= overflowRight;\n      }\n    }\n    return width;\n  },\n  _updatePlaceholderSizes: function ($placeholderElement, itemElement) {\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var $item = $(itemElement);\n    var isVertical = this._isVerticalOrientation();\n    var width = \"\";\n    var height = \"\";\n    $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\n    if (isVertical || dropInsideItem) {\n      width = getOuterWidth($item);\n    }\n    if (!isVertical || dropInsideItem) {\n      height = getOuterHeight($item);\n    }\n    width = this._makeWidthCorrection($item, width);\n    $placeholderElement.css({\n      width: width,\n      height: height\n    });\n  },\n  _moveItem: function ($itemElement, index, cancelRemove) {\n    var $prevTargetItemElement;\n    var $itemElements = this._getItems();\n    var $targetItemElement = $itemElements[index];\n    var sourceDraggable = this._getSourceDraggable();\n    if (cancelRemove) {\n      $itemElement = $itemElement.clone();\n      sourceDraggable._toggleDragSourceClass(false, $itemElement);\n    }\n    if (!$targetItemElement) {\n      $prevTargetItemElement = $itemElements[index - 1];\n    }\n    this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement);\n  },\n  _moveItemCore: function ($targetItem, item, prevItem) {\n    if (!item && !prevItem) {\n      $targetItem.appendTo(this.$element());\n    } else if (prevItem) {\n      $targetItem.insertAfter($(prevItem));\n    } else {\n      $targetItem.insertBefore($(item));\n    }\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: this._getElementIndex($itemElement)\n    });\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n    var targetDraggable = this._getTargetDraggable();\n    var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: sourceDraggable.option(\"fromIndex\"),\n      toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\n      dropInsideItem: dropInsideItem\n    });\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n    switch (name) {\n      case \"onDragChange\":\n      case \"onPlaceholderPrepared\":\n      case \"onAdd\":\n      case \"onRemove\":\n      case \"onReorder\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n      case \"itemOrientation\":\n      case \"allowDropInsideItem\":\n      case \"moveItemOnDrop\":\n      case \"dropFeedbackMode\":\n      case \"itemPoints\":\n      case \"animation\":\n      case \"allowReordering\":\n      case \"fromIndexOffset\":\n      case \"offset\":\n      case \"draggableElementSize\":\n      case \"autoUpdate\":\n        break;\n      case \"fromIndex\":\n        [false, true].forEach(isDragSource => {\n          var fromIndex = isDragSource ? args.value : args.previousValue;\n          if (null !== fromIndex) {\n            var $fromElement = $(this._getItems()[fromIndex]);\n            this._toggleDragSourceClass(isDragSource, $fromElement);\n          }\n        });\n        break;\n      case \"dropInsideItem\":\n        this._optionChangedDropInsideItem(args);\n        break;\n      case \"toIndex\":\n        this._optionChangedToIndex(args);\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _optionChangedDropInsideItem: function () {\n    if (this._isIndicateMode() && this._$placeholderElement) {\n      this._movePlaceholder();\n    }\n  },\n  _isPositionVisible: function (position) {\n    var $element = this.$element();\n    var scrollContainer;\n    if (\"hidden\" !== $element.css(\"overflow\")) {\n      scrollContainer = $element.get(0);\n    } else {\n      $element.parents().each(function () {\n        if (\"visible\" !== $(this).css(\"overflow\")) {\n          scrollContainer = this;\n          return false;\n        }\n      });\n    }\n    if (scrollContainer) {\n      var clientRect = getBoundingRect(scrollContainer);\n      var isVerticalOrientation = this._isVerticalOrientation();\n      var start = isVerticalOrientation ? \"top\" : \"left\";\n      var end = isVerticalOrientation ? \"bottom\" : \"right\";\n      var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\n      if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\n        return false;\n      }\n    }\n    return true;\n  },\n  _optionChangedToIndex: function (args) {\n    var toIndex = args.value;\n    if (this._isIndicateMode()) {\n      var showPlaceholder = null !== toIndex && toIndex >= 0;\n      this._togglePlaceholder(showPlaceholder);\n      if (showPlaceholder) {\n        this._movePlaceholder();\n      }\n    } else {\n      this._moveItems(args.previousValue, args.value, args.fullUpdate);\n    }\n  },\n  update: function () {\n    if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\n      return;\n    }\n    this._updateItemPoints(true);\n    this._updateDragSourceClass();\n    var toIndex = this.option(\"toIndex\");\n    this._optionChangedToIndex({\n      value: toIndex,\n      fullUpdate: true\n    });\n  },\n  _updateDragSourceClass: function () {\n    var fromIndex = this._getActualFromIndex();\n    var $fromElement = $(this._getItems()[fromIndex]);\n    if ($fromElement.length) {\n      this._$sourceElement = $fromElement;\n      this._toggleDragSourceClass(true, $fromElement);\n    }\n  },\n  _makeLeftCorrection: function (left) {\n    var $scrollable = this._$scrollable;\n    if ($scrollable && this._isVerticalOrientation()) {\n      var overflowLeft = $scrollable.offset().left - left;\n      if (overflowLeft > 0) {\n        left += overflowLeft;\n      }\n    }\n    return left;\n  },\n  _movePlaceholder: function () {\n    var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\n    if (!$placeholderElement) {\n      return;\n    }\n    var items = this._getItems();\n    var toIndex = this.option(\"toIndex\");\n    var isVerticalOrientation = this._isVerticalOrientation();\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var position = null;\n    var itemElement = items[toIndex];\n    if (itemElement) {\n      var $itemElement = $(itemElement);\n      position = $itemElement.offset();\n      if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\n        position.left += getOuterWidth($itemElement, true);\n      }\n    } else {\n      var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\n      if (prevVisibleItemElement) {\n        position = $(prevVisibleItemElement).offset();\n        if (isVerticalOrientation) {\n          position.top += getOuterHeight(prevVisibleItemElement, true);\n        } else if (!rtlEnabled) {\n          position.left += getOuterWidth(prevVisibleItemElement, true);\n        }\n      }\n    }\n    this._updatePlaceholderSizes($placeholderElement, itemElement);\n    if (position && !this._isPositionVisible(position)) {\n      position = null;\n    }\n    if (position) {\n      var isLastVerticalPosition = isVerticalOrientation && toIndex === items.length;\n      var outerPlaceholderHeight = getOuterHeight($placeholderElement);\n      position.left = this._makeLeftCorrection(position.left);\n      position.top = isLastVerticalPosition && position.top >= outerPlaceholderHeight ? position.top - outerPlaceholderHeight : position.top;\n      this._move(position, $placeholderElement);\n    }\n    $placeholderElement.toggle(!!position);\n  },\n  _getPositions: function (items, elementSize, fromIndex, toIndex) {\n    var positions = [];\n    for (var i = 0; i < items.length; i++) {\n      var position = 0;\n      if (null === toIndex || null === fromIndex) {\n        positions.push(position);\n        continue;\n      }\n      if (-1 === fromIndex) {\n        if (i >= toIndex) {\n          position = elementSize;\n        }\n      } else if (-1 === toIndex) {\n        if (i > fromIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex < toIndex) {\n        if (i > fromIndex && i < toIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex > toIndex) {\n        if (i >= toIndex && i < fromIndex) {\n          position = elementSize;\n        }\n      }\n      positions.push(position);\n    }\n    return positions;\n  },\n  _getDraggableElementSize: function (isVerticalOrientation) {\n    var $draggableItem = this._getDraggableElement();\n    var size = this.option(\"draggableElementSize\");\n    if (!size) {\n      size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\n      if (!this.option(\"autoUpdate\")) {\n        this.option(\"draggableElementSize\", size);\n      }\n    }\n    return size;\n  },\n  _getActualFromIndex: function () {\n    var {\n      fromIndex: fromIndex,\n      fromIndexOffset: fromIndexOffset,\n      offset: offset\n    } = this.option();\n    return null == fromIndex ? null : fromIndex + fromIndexOffset - offset;\n  },\n  _moveItems: function (prevToIndex, toIndex, fullUpdate) {\n    var fromIndex = this._getActualFromIndex();\n    var isVerticalOrientation = this._isVerticalOrientation();\n    var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\n    var elementSize = this._getDraggableElementSize(isVerticalOrientation);\n    var items = this._getItems();\n    var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\n    var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\n    var animationConfig = this.option(\"animation\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    for (var i = 0; i < items.length; i++) {\n      var itemElement = items[i];\n      var prevPosition = prevPositions[i];\n      var position = positions[i];\n      if (null === toIndex || null === fromIndex) {\n        stopAnimation(itemElement);\n      } else if (prevPosition !== position || fullUpdate && position) {\n        animate(itemElement, extend({}, animationConfig, {\n          to: {\n            [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\n          }\n        }));\n      }\n    }\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    this.callBase.apply(this, arguments);\n    if (!this._isIndicateMode()) {\n      $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value);\n    }\n  },\n  _dispose: function () {\n    this.reset();\n    this.callBase();\n  },\n  _fireAddEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onAdd\")(args);\n    return args.cancel;\n  },\n  _fireRemoveEvent: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n    var args = this._getEventArgs(sourceEvent);\n    sourceDraggable._getAction(\"onRemove\")(args);\n    return args.cancel;\n  },\n  _fireReorderEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onReorder\")(args);\n    return args.promise || new Deferred().resolve();\n  }\n});\nregisterComponent(SORTABLE, Sortable);\nexport default Sortable;","map":{"version":3,"names":["getHeight","getOuterHeight","getOuterWidth","getWidth","$","eventsEngine","registerComponent","extend","Draggable","getPublicElement","getWindow","getBoundingRect","resetPosition","fx","Deferred","window","SORTABLE","PLACEHOLDER_CLASS","CLONE_CLASS","isElementVisible","itemElement","is","animate","element","config","_config$to","_config$to2","left","to","top","style","transform","concat","transition","off","duration","easing","stopAnimation","getScrollableBoundary","$scrollable","offset","paddingLeft","parseFloat","paddingRight","paddingTop","width","clientWidth","height","right","bottom","Sortable","inherit","_init","callBase","_sourceScrollHandler","_handleSourceScroll","bind","_sourceScrollableInfo","_getDefaultOptions","clone","filter","itemOrientation","dropFeedbackMode","allowDropInsideItem","allowReordering","moveItemOnDrop","onDragChange","onAdd","onRemove","onReorder","onPlaceholderPrepared","animation","type","fromIndex","toIndex","dropInsideItem","itemPoints","fromIndexOffset","autoUpdate","draggableElementSize","reset","option","_$placeholderElement","remove","_isIndicateMode","_$modifiedItem","css","_modifiedItemMargin","_getPrevVisibleItem","items","index","slice","reverse","_dragStartHandler","e","apply","arguments","cancel","$sourceElement","_getSourceElement","_updateItemPoints","_subscribeToSourceScroll","_getElementIndex","_getScrollable","target","scrollLeft","scrollTop","on","_unsubscribeFromSourceScroll","sourceScrollableInfo","forEach","scrollProp","scrollBy","_correctItemPoints","_movePlaceholder","_dragEnterHandler","_getSourceDraggable","lastItemPoint","length","$element","isVertical","_isVerticalOrientation","sourceElementSize","scrollSize","get","scrollPosition","positionProp","lastPointPosition","elementPosition","freeSize","_getItems","$lastItem","marginBottom","$sortable","closest","sortable","data","update","_dragLeaveHandler","dragEnter","_getTargetDraggable","dragLeave","_allowDrop","event","targetDraggable","$targetDraggable","itemPoint","item","Math","ceil","floor","dragEnd","sourceEvent","sourceDraggable","isSourceDraggable","NAME","allowDrop","cancelAdd","cancelRemove","_fireAddEvent","_fireRemoveEvent","_moveItem","_fireReorderEvent","resolve","dragMove","axisName","cursorPosition","pageY","pageX","rtlEnabled","i","centerPosition","_updatePlaceholderPosition","_verticalScrollHelper","isScrolling","_createPlaceholder","$placeholderContainer","addClass","_addWidgetPrefix","insertBefore","_$dragElement","itemsSelector","_getItemsSelector","_$content","find","not","toArray","_allowReordering","_isValidPoint","visibleIndex","draggableVisibleIndex","_getItemPoints","result","$item","itemWidth","itemElements","visibleItemElements","visibleItemCount","$draggableItem","_getDraggableElement","indexOf","needCorrectLeftPosition","needCorrectTopPosition","push","isValid","points","_i","forceUpdate","positionPropName","$itemElement","_getDragTemplateArgs","args","model","_togglePlaceholder","value","toggle","_normalizeToIndex","skipOffsetting","isAnotherDraggable","_getActualFromIndex","max","eventArgs","_getEventArgs","_getAction","placeholderElement","dragElement","_makeWidthCorrection","_$scrollable","scrollableWidth","overflowLeft","overflowRight","_updatePlaceholderSizes","$placeholderElement","toggleClass","$prevTargetItemElement","$itemElements","$targetItemElement","_toggleDragSourceClass","_moveItemCore","$targetItem","prevItem","appendTo","insertAfter","_getDragStartArgs","_optionChanged","name","_createActionByOption","isDragSource","previousValue","$fromElement","_optionChangedDropInsideItem","_optionChangedToIndex","_isPositionVisible","position","scrollContainer","parents","each","clientRect","isVerticalOrientation","start","end","pageOffset","pageYOffset","pageXOffset","showPlaceholder","_moveItems","fullUpdate","_updateDragSourceClass","_$sourceElement","_makeLeftCorrection","prevVisibleItemElement","isLastVerticalPosition","outerPlaceholderHeight","_move","_getPositions","elementSize","positions","_getDraggableElementSize","size","prevToIndex","prevPositions","animationConfig","prevPosition","_dispose","promise"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/sortable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport Draggable from \"./draggable\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport {\r\n    resetPosition\r\n} from \"../animation/translator\";\r\nimport fx from \"../animation/fx\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar window = getWindow();\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\r\nvar animate = (element, config) => {\r\n    var _config$to, _config$to2;\r\n    if (!element) {\r\n        return\r\n    }\r\n    var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\r\n    var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\r\n    element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\r\n    element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing)\r\n};\r\nvar stopAnimation = element => {\r\n    if (!element) {\r\n        return\r\n    }\r\n    element.style.transform = \"\";\r\n    element.style.transition = \"\"\r\n};\r\n\r\nfunction getScrollableBoundary($scrollable) {\r\n    var offset = $scrollable.offset();\r\n    var style = $scrollable[0].style;\r\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n    var paddingRight = parseFloat(style.paddingRight) || 0;\r\n    var paddingTop = parseFloat(style.paddingTop) || 0;\r\n    var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\r\n    var height = getHeight($scrollable);\r\n    var left = offset.left + paddingLeft;\r\n    var top = offset.top + paddingTop;\r\n    return {\r\n        left: left,\r\n        right: left + width,\r\n        top: top,\r\n        bottom: top + height\r\n    }\r\n}\r\nvar Sortable = Draggable.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._sourceScrollHandler = this._handleSourceScroll.bind(this);\r\n        this._sourceScrollableInfo = null\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                easing: \"ease\"\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            offset: 0,\r\n            autoUpdate: false,\r\n            draggableElementSize: 0\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            draggableElementSize: 0\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this._subscribeToSourceScroll(e);\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement));\r\n        this.option(\"fromIndexOffset\", this.option(\"offset\"))\r\n    },\r\n    _subscribeToSourceScroll: function(e) {\r\n        var $scrollable = this._getScrollable($(e.target));\r\n        if ($scrollable) {\r\n            this._sourceScrollableInfo = {\r\n                element: $scrollable,\r\n                scrollLeft: $scrollable.scrollLeft(),\r\n                scrollTop: $scrollable.scrollTop()\r\n            };\r\n            eventsEngine.off($scrollable, \"scroll\", this._sourceScrollHandler);\r\n            eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler)\r\n        }\r\n    },\r\n    _unsubscribeFromSourceScroll: function() {\r\n        if (this._sourceScrollableInfo) {\r\n            eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\r\n            this._sourceScrollableInfo = null\r\n        }\r\n    },\r\n    _handleSourceScroll: function(e) {\r\n        var sourceScrollableInfo = this._sourceScrollableInfo;\r\n        if (sourceScrollableInfo) {\r\n            [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\r\n                if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\r\n                    var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\r\n                    this._correctItemPoints(scrollBy);\r\n                    this._movePlaceholder();\r\n                    sourceScrollableInfo[scrollProp] = e.target[scrollProp]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._subscribeToSourceScroll(e);\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = $(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _dragLeaveHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this !== this._getSourceDraggable()) {\r\n            this._unsubscribeFromSourceScroll()\r\n        }\r\n    },\r\n    dragEnter: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    _allowDrop: function(event) {\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var $targetDraggable = targetDraggable.$element();\r\n        var $scrollable = this._getScrollable($targetDraggable);\r\n        if ($scrollable) {\r\n            var {\r\n                left: left,\r\n                right: right,\r\n                top: top,\r\n                bottom: bottom\r\n            } = getScrollableBoundary($scrollable);\r\n            var toIndex = this.option(\"toIndex\");\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\r\n            if (itemPoint && void 0 !== itemPoint.top) {\r\n                var isVertical = this._isVerticalOrientation();\r\n                if (isVertical) {\r\n                    return top <= Math.ceil(itemPoint.top) && Math.floor(itemPoint.top) <= bottom\r\n                } else {\r\n                    return left <= Math.ceil(itemPoint.left) && Math.floor(itemPoint.left) <= right\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        this._unsubscribeFromSourceScroll();\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        var event = sourceEvent.event;\r\n        var allowDrop = this._allowDrop(event);\r\n        if (null !== toIndex && toIndex >= 0 && allowDrop) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(event);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(event)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                resetPosition($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                return this._fireReorderEvent(event)\r\n            }\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var result = [];\r\n        var $item;\r\n        var offset;\r\n        var itemWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isVertical = this._isVerticalOrientation();\r\n        var itemElements = this._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var visibleItemCount = visibleItemElements.length;\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        if (visibleItemCount) {\r\n            for (var i = 0; i <= visibleItemCount; i++) {\r\n                var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\r\n                var needCorrectTopPosition = isVertical && i === visibleItemCount;\r\n                if (i < visibleItemCount) {\r\n                    $item = $(visibleItemElements[i]);\r\n                    offset = $item.offset();\r\n                    itemWidth = getOuterWidth($item)\r\n                }\r\n                result.push({\r\n                    dropInsideItem: false,\r\n                    left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\r\n                    top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\r\n                    index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\r\n                    $item: $item,\r\n                    width: getOuterWidth($item),\r\n                    height: getOuterHeight($item),\r\n                    isValid: this._isValidPoint(i, draggableVisibleIndex)\r\n                })\r\n            }\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var _i = 0; _i < points.length; _i++) {\r\n                    result.push(points[_i]);\r\n                    if (points[_i + 1]) {\r\n                        result.push(extend({}, points[_i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\r\n                            left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function(forceUpdate) {\r\n        if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\r\n            this.option(\"itemPoints\", this._getItemPoints())\r\n        }\r\n    },\r\n    _correctItemPoints: function(scrollBy) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\r\n            var isVertical = this._isVerticalOrientation();\r\n            var positionPropName = isVertical ? \"top\" : \"left\";\r\n            itemPoints.forEach(itemPoint => {\r\n                itemPoint[positionPropName] -= scrollBy\r\n            })\r\n        }\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, skipOffsetting) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this._getActualFromIndex();\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || skipOffsetting ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = extend(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\r\n            placeholderElement: getPublicElement(this._$placeholderElement),\r\n            dragElement: getPublicElement(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        this._$scrollable = this._getScrollable($item);\r\n        if (this._$scrollable) {\r\n            var scrollableWidth = getWidth(this._$scrollable);\r\n            var overflowLeft = this._$scrollable.offset().left - $item.offset().left;\r\n            var overflowRight = getOuterWidth($item) - overflowLeft - scrollableWidth;\r\n            if (overflowLeft > 0) {\r\n                width -= overflowLeft\r\n            }\r\n            if (overflowRight > 0) {\r\n                width -= overflowRight\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var $item = $(itemElement);\r\n        var isVertical = this._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = getOuterWidth($item)\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = getOuterHeight($item)\r\n        }\r\n        width = this._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else if (prevItem) {\r\n            $targetItem.insertAfter($(prevItem))\r\n        } else {\r\n            $targetItem.insertBefore($(item))\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n            case \"fromIndexOffset\":\r\n            case \"offset\":\r\n            case \"draggableElementSize\":\r\n            case \"autoUpdate\":\r\n                break;\r\n            case \"fromIndex\":\r\n                [false, true].forEach(isDragSource => {\r\n                    var fromIndex = isDragSource ? args.value : args.previousValue;\r\n                    if (null !== fromIndex) {\r\n                        var $fromElement = $(this._getItems()[fromIndex]);\r\n                        this._toggleDragSourceClass(isDragSource, $fromElement)\r\n                    }\r\n                });\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function() {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            this._movePlaceholder()\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each((function() {\r\n                if (\"visible\" !== $(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = getBoundingRect(scrollContainer);\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\r\n            if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value, args.fullUpdate)\r\n        }\r\n    },\r\n    update: function() {\r\n        if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\r\n            return\r\n        }\r\n        this._updateItemPoints(true);\r\n        this._updateDragSourceClass();\r\n        var toIndex = this.option(\"toIndex\");\r\n        this._optionChangedToIndex({\r\n            value: toIndex,\r\n            fullUpdate: true\r\n        })\r\n    },\r\n    _updateDragSourceClass: function() {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var $fromElement = $(this._getItems()[fromIndex]);\r\n        if ($fromElement.length) {\r\n            this._$sourceElement = $fromElement;\r\n            this._toggleDragSourceClass(true, $fromElement)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left) {\r\n        var $scrollable = this._$scrollable;\r\n        if ($scrollable && this._isVerticalOrientation()) {\r\n            var overflowLeft = $scrollable.offset().left - left;\r\n            if (overflowLeft > 0) {\r\n                left += overflowLeft\r\n            }\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\r\n        if (!$placeholderElement) {\r\n            return\r\n        }\r\n        var items = this._getItems();\r\n        var toIndex = this.option(\"toIndex\");\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var position = null;\r\n        var itemElement = items[toIndex];\r\n        if (itemElement) {\r\n            var $itemElement = $(itemElement);\r\n            position = $itemElement.offset();\r\n            if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\r\n                position.left += getOuterWidth($itemElement, true)\r\n            }\r\n        } else {\r\n            var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = $(prevVisibleItemElement).offset();\r\n                if (isVerticalOrientation) {\r\n                    position.top += getOuterHeight(prevVisibleItemElement, true)\r\n                } else if (!rtlEnabled) {\r\n                    position.left += getOuterWidth(prevVisibleItemElement, true)\r\n                }\r\n            }\r\n        }\r\n        this._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (position && !this._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            var isLastVerticalPosition = isVerticalOrientation && toIndex === items.length;\r\n            var outerPlaceholderHeight = getOuterHeight($placeholderElement);\r\n            position.left = this._makeLeftCorrection(position.left);\r\n            position.top = isLastVerticalPosition && position.top >= outerPlaceholderHeight ? position.top - outerPlaceholderHeight : position.top;\r\n            this._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (-1 === fromIndex) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else if (-1 === toIndex) {\r\n                if (i > fromIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex < toIndex) {\r\n                if (i > fromIndex && i < toIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex > toIndex) {\r\n                if (i >= toIndex && i < fromIndex) {\r\n                    position = elementSize\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _getDraggableElementSize: function(isVerticalOrientation) {\r\n        var $draggableItem = this._getDraggableElement();\r\n        var size = this.option(\"draggableElementSize\");\r\n        if (!size) {\r\n            size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\r\n            if (!this.option(\"autoUpdate\")) {\r\n                this.option(\"draggableElementSize\", size)\r\n            }\r\n        }\r\n        return size\r\n    },\r\n    _getActualFromIndex: function() {\r\n        var {\r\n            fromIndex: fromIndex,\r\n            fromIndexOffset: fromIndexOffset,\r\n            offset: offset\r\n        } = this.option();\r\n        return null == fromIndex ? null : fromIndex + fromIndexOffset - offset\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex, fullUpdate) {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var elementSize = this._getDraggableElementSize(isVerticalOrientation);\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var itemElement = items[i];\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                stopAnimation(itemElement)\r\n            } else if (prevPosition !== position || fullUpdate && position) {\r\n                animate(itemElement, extend({}, animationConfig, {\r\n                    to: {\r\n                        [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args);\r\n        return args.promise || (new Deferred).resolve()\r\n    }\r\n});\r\nregisterComponent(SORTABLE, Sortable);\r\nexport default Sortable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}