{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninad\\\\zavrsni\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LoginPage from './pages/LoginPage.js';\nimport RegisterPage from './pages/RegisterPage.js';\nimport Header from './components/Header/Header.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [setBackendData] = useState([{}]);\n  const [session, setSession] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const refreshSession = async () => {\n    setIsLoading(true);\n    try {\n      const res = await axios.get(`${import.meta.env.VITE_API}/auth/session`, {\n        withCredentials: true\n      });\n      if (res.data) {\n        setSession({\n          exists: true,\n          ...res.data,\n          refresh: refreshSession\n        });\n      } else {\n        setSession({\n          exists: false,\n          refresh: refreshSession\n        });\n      }\n    } catch (err) {\n      setSession({\n        exists: false\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // First session load\n    refreshSession();\n  }, []);\n\n  //////////////////////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    fetch(\"/\").then(response => response.json()).then(data => {\n      setBackendData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UK54aqDvbLu+rLgiJDmuHBM2tNM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","BrowserRouter","Routes","Route","LoginPage","RegisterPage","Header","jsxDEV","_jsxDEV","App","_s","setBackendData","session","setSession","isLoading","setIsLoading","refreshSession","res","get","import","meta","env","VITE_API","withCredentials","data","exists","refresh","err","fetch","then","response","json","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ninad/zavrsni/client/src/App.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LoginPage from './pages/LoginPage.js';\nimport RegisterPage from './pages/RegisterPage.js';\nimport Header from './components/Header/Header.js';\n\nfunction App() {\n\n  const [ setBackendData] = useState([{}])\n  const [session, setSession] = useState(null);\n  const [isLoading, setIsLoading] = useState(true)\n\n  const refreshSession = async () => {\n    setIsLoading(true);\n\n    try {\n      const res = await axios.get(\n        `${import.meta.env.VITE_API}/auth/session`,\n        { withCredentials: true }\n      );\n      if (res.data) {\n        setSession({\n          exists: true,\n          ...res.data,\n          refresh: refreshSession,\n        });\n      } else {\n        setSession({ exists: false, refresh: refreshSession });\n      }\n    } catch (err) {\n      setSession({ exists: false });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // First session load\n    refreshSession();\n  }, []);\n\n  //////////////////////////////////////////////////////////////////////////////////\n\n\n  useEffect(() => {\n    fetch(\"/\").then(\n      response => response.json()\n    ).then(\n      data => {\n        setBackendData(data)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/register\" element={<RegisterPage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCD,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAME,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CACxB,GAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAS,eAAc,EAC1C;QAAEC,eAAe,EAAE;MAAK,CAC1B,CAAC;MACD,IAAIN,GAAG,CAACO,IAAI,EAAE;QACZX,UAAU,CAAC;UACTY,MAAM,EAAE,IAAI;UACZ,GAAGR,GAAG,CAACO,IAAI;UACXE,OAAO,EAAEV;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACLH,UAAU,CAAC;UAAEY,MAAM,EAAE,KAAK;UAAEC,OAAO,EAAEV;QAAe,CAAC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZd,UAAU,CAAC;QAAEY,MAAM,EAAE;MAAM,CAAC,CAAC;IAC/B,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd;IACAkB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAGAlB,SAAS,CAAC,MAAM;IACd8B,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAACF,IAAI,CACJL,IAAI,IAAI;MACNb,cAAc,CAACa,IAAI,CAAC;IACtB,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAwB,QAAA,eACExB,OAAA,CAACP,aAAa;MAAA+B,QAAA,eACZxB,OAAA,CAACN,MAAM;QAAA8B,QAAA,gBACLxB,OAAA,CAACL,KAAK;UAAC8B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAE1B,OAAA,CAACJ,SAAS;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/C9B,OAAA,CAACL,KAAK;UAAC8B,IAAI,EAAC,WAAW;UAACC,OAAO,eAAE1B,OAAA,CAACH,YAAY;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAC5B,EAAA,CA1DQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}