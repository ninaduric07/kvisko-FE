{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport * as clickEvent from \"../../events/click\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\nimport pointerEvents from \"../../events/pointer\";\nexport function subscribeToEvent(eventName) {\n  return (element, handler, eventData, namespace) => {\n    var event = namespace ? addNamespace(eventName, namespace) : eventName;\n    if (handler) {\n      eventsEngine.on(element, event, eventData, handler);\n      return () => {\n        eventsEngine.off(element, event, handler);\n      };\n    }\n    return;\n  };\n}\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\nexport var subscribeToDXPointerMoveEvent = subscribeToEvent(pointerEvents.move);\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\nexport var subscribeToDxActiveEvent = subscribeToEvent(\"dxactive\");\nexport var subscribeToDxInactiveEvent = subscribeToEvent(\"dxinactive\");\nexport var subscribeToDxHoverStartEvent = subscribeToEvent(\"dxhoverstart\");\nexport var subscribeToDxHoverEndEvent = subscribeToEvent(\"dxhoverend\");\nexport var subscribeToDxFocusInEvent = subscribeToEvent(\"focusin\");\nexport var subscribeToDxFocusOutEvent = subscribeToEvent(\"focusout\");","map":{"version":3,"names":["eventsEngine","clickEvent","addNamespace","scrollEvents","pointerEvents","subscribeToEvent","eventName","element","handler","eventData","namespace","event","on","off","subscribeToClickEvent","name","subscribeToScrollEvent","scroll","subscribeToScrollInitEvent","init","subscribeToDXScrollStartEvent","start","subscribeToDXScrollMoveEvent","move","subscribeToDXScrollEndEvent","end","subscribeToDXScrollStopEvent","stop","subscribeToDXScrollCancelEvent","cancel","subscribeToDXPointerDownEvent","down","subscribeToDXPointerUpEvent","up","subscribeToDXPointerMoveEvent","subscribeToMouseEnterEvent","subscribeToMouseLeaveEvent","subscribeToKeyDownEvent","subscribeToDxActiveEvent","subscribeToDxInactiveEvent","subscribeToDxHoverStartEvent","subscribeToDxHoverEndEvent","subscribeToDxFocusInEvent","subscribeToDxFocusOutEvent"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/renovation/utils/subscribe_to_event.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport * as clickEvent from \"../../events/click\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nexport function subscribeToEvent(eventName) {\r\n    return (element, handler, eventData, namespace) => {\r\n        var event = namespace ? addNamespace(eventName, namespace) : eventName;\r\n        if (handler) {\r\n            eventsEngine.on(element, event, eventData, handler);\r\n            return () => {\r\n                eventsEngine.off(element, event, handler)\r\n            }\r\n        }\r\n        return\r\n    }\r\n}\r\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\r\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\r\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\r\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\r\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\r\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\r\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\r\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\r\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\r\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\r\nexport var subscribeToDXPointerMoveEvent = subscribeToEvent(pointerEvents.move);\r\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\r\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\r\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\r\nexport var subscribeToDxActiveEvent = subscribeToEvent(\"dxactive\");\r\nexport var subscribeToDxInactiveEvent = subscribeToEvent(\"dxinactive\");\r\nexport var subscribeToDxHoverStartEvent = subscribeToEvent(\"dxhoverstart\");\r\nexport var subscribeToDxHoverEndEvent = subscribeToEvent(\"dxhoverend\");\r\nexport var subscribeToDxFocusInEvent = subscribeToEvent(\"focusin\");\r\nexport var subscribeToDxFocusOutEvent = subscribeToEvent(\"focusout\");\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,iCAAiC;AAC1D,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAChD,SACIC,YAAY,QACT,0BAA0B;AACjC,OAAOC,YAAY,MAAM,6CAA6C;AACtE,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACxC,OAAO,CAACC,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,KAAK;IAC/C,IAAIC,KAAK,GAAGD,SAAS,GAAGR,YAAY,CAACI,SAAS,EAAEI,SAAS,CAAC,GAAGJ,SAAS;IACtE,IAAIE,OAAO,EAAE;MACTR,YAAY,CAACY,EAAE,CAACL,OAAO,EAAEI,KAAK,EAAEF,SAAS,EAAED,OAAO,CAAC;MACnD,OAAO,MAAM;QACTR,YAAY,CAACa,GAAG,CAACN,OAAO,EAAEI,KAAK,EAAEH,OAAO,CAAC;MAC7C,CAAC;IACL;IACA;EACJ,CAAC;AACL;AACA,OAAO,IAAIM,qBAAqB,GAAGT,gBAAgB,CAACJ,UAAU,CAACc,IAAI,CAAC;AACpE,OAAO,IAAIC,sBAAsB,GAAGX,gBAAgB,CAACF,YAAY,CAACc,MAAM,CAAC;AACzE,OAAO,IAAIC,0BAA0B,GAAGb,gBAAgB,CAACF,YAAY,CAACgB,IAAI,CAAC;AAC3E,OAAO,IAAIC,6BAA6B,GAAGf,gBAAgB,CAACF,YAAY,CAACkB,KAAK,CAAC;AAC/E,OAAO,IAAIC,4BAA4B,GAAGjB,gBAAgB,CAACF,YAAY,CAACoB,IAAI,CAAC;AAC7E,OAAO,IAAIC,2BAA2B,GAAGnB,gBAAgB,CAACF,YAAY,CAACsB,GAAG,CAAC;AAC3E,OAAO,IAAIC,4BAA4B,GAAGrB,gBAAgB,CAACF,YAAY,CAACwB,IAAI,CAAC;AAC7E,OAAO,IAAIC,8BAA8B,GAAGvB,gBAAgB,CAACF,YAAY,CAAC0B,MAAM,CAAC;AACjF,OAAO,IAAIC,6BAA6B,GAAGzB,gBAAgB,CAACD,aAAa,CAAC2B,IAAI,CAAC;AAC/E,OAAO,IAAIC,2BAA2B,GAAG3B,gBAAgB,CAACD,aAAa,CAAC6B,EAAE,CAAC;AAC3E,OAAO,IAAIC,6BAA6B,GAAG7B,gBAAgB,CAACD,aAAa,CAACmB,IAAI,CAAC;AAC/E,OAAO,IAAIY,0BAA0B,GAAG9B,gBAAgB,CAAC,YAAY,CAAC;AACtE,OAAO,IAAI+B,0BAA0B,GAAG/B,gBAAgB,CAAC,YAAY,CAAC;AACtE,OAAO,IAAIgC,uBAAuB,GAAGhC,gBAAgB,CAAC,SAAS,CAAC;AAChE,OAAO,IAAIiC,wBAAwB,GAAGjC,gBAAgB,CAAC,UAAU,CAAC;AAClE,OAAO,IAAIkC,0BAA0B,GAAGlC,gBAAgB,CAAC,YAAY,CAAC;AACtE,OAAO,IAAImC,4BAA4B,GAAGnC,gBAAgB,CAAC,cAAc,CAAC;AAC1E,OAAO,IAAIoC,0BAA0B,GAAGpC,gBAAgB,CAAC,YAAY,CAAC;AACtE,OAAO,IAAIqC,yBAAyB,GAAGrC,gBAAgB,CAAC,SAAS,CAAC;AAClE,OAAO,IAAIsC,0BAA0B,GAAGtC,gBAAgB,CAAC,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}