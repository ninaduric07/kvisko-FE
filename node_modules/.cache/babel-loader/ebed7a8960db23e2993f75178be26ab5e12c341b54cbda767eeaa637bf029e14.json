{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport Guid from \"../../core/guid\";\nimport { ensureDefined } from \"../../core/utils/common\";\nimport config from \"../../core/config\";\nimport { isDefined, isEmptyObject, isObject, isString } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { triggerResizeEvent, triggerShownEvent } from \"../../events/visibility_change\";\nimport { getPublicElement } from \"../../core/element\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport Editor from \"../editor/editor\";\nimport { defaultScreenFactorFunc, getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport ValidationEngine from \"../validation_engine\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport TabPanel from \"../tab_panel\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { isMaterial } from \"../themes\";\nimport tryCreateItemOptionAction from \"./ui.form.item_options_actions\";\nimport resizeObserverSingleton from \"../../core/resize_observer\";\nimport \"./ui.form.layout_manager\";\nimport { concatPaths, createItemPathByIndex, getFullOptionName, getOptionNameFromFullName, tryGetTabPath, getTextWithoutSpaces, isEqualToDataFieldOrNameOrTitleOrCaption, isFullPathContainsTabs, getItemPath, convertToLayoutManagerOptions } from \"./ui.form.utils\";\nimport { convertToLabelMarkOptions } from \"./ui.form.layout_manager.utils\";\nimport { setLabelWidthByMaxLabelWidth } from \"./components/label\";\nimport \"../validation_summary\";\nimport \"../validation_group\";\nimport { FORM_CLASS, FIELD_ITEM_CLASS, FORM_GROUP_CLASS, FORM_GROUP_CONTENT_CLASS, FIELD_ITEM_CONTENT_HAS_GROUP_CLASS, FIELD_ITEM_CONTENT_HAS_TABS_CLASS, FORM_GROUP_WITH_CAPTION_CLASS, FORM_GROUP_CAPTION_CLASS, FIELD_ITEM_TAB_CLASS, FORM_FIELD_ITEM_COL_CLASS, GROUP_COL_COUNT_CLASS, GROUP_COL_COUNT_ATTR, FIELD_ITEM_CONTENT_CLASS, FORM_VALIDATION_SUMMARY, ROOT_SIMPLE_ITEM_CLASS, FORM_UNDERLINED_CLASS } from \"./constants\";\nimport { TOOLBAR_CLASS } from \"../toolbar/constants\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\nvar Form = Widget.inherit({\n  _init: function () {\n    this.callBase();\n    this._cachedColCountOptions = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n    this._groupsColCount = [];\n    this._attachSyncSubscriptions();\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      formID: \"dx-\" + new Guid(),\n      formData: {},\n      colCount: 1,\n      screenByWidth: defaultScreenFactorFunc,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      readOnly: false,\n      onFieldDataChanged: null,\n      customizeItem: null,\n      onEditorEnterKey: null,\n      minColWidth: 200,\n      alignItemLabels: true,\n      alignItemLabelsInAllGroups: true,\n      alignRootItemLabels: true,\n      showColonAfterLabel: true,\n      showRequiredMark: true,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\n      showValidationSummary: false,\n      items: void 0,\n      scrollingEnabled: false,\n      validationGroup: void 0,\n      stylingMode: config().editorStylingMode,\n      labelMode: \"outside\"\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        showColonAfterLabel: false,\n        labelLocation: \"top\"\n      }\n    }]);\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      formData: true,\n      validationGroup: true\n    });\n  },\n  _getGroupColCount: function ($element) {\n    return parseInt($element.attr(GROUP_COL_COUNT_ATTR));\n  },\n  _applyLabelsWidthByCol: function ($container, index) {\n    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n    var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;\n    var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\n    var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\".concat(FIELD_ITEM_TAB_CLASS, \")\") : \"\";\n    setLabelWidthByMaxLabelWidth($container, \".\".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);\n    return;\n  },\n  _applyLabelsWidth: function ($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {\n    colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed,\n      inOneColumn: inOneColumn\n    };\n    var i;\n    for (i = 0; i < colCount; i++) {\n      this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions);\n    }\n  },\n  _getGroupElementsInColumn: function ($container, columnIndex, colCount) {\n    var cssColCountSelector = isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\n    var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\n    return $container.find(groupSelector);\n  },\n  _applyLabelsWidthWithGroups: function ($container, colCount, excludeTabbed, labelMarkOptions) {\n    if (true === this.option(\"alignRootItemLabels\")) {\n      var $rootSimpleItems = $container.find(\".\".concat(ROOT_SIMPLE_ITEM_CLASS));\n      for (var colIndex = 0; colIndex < colCount; colIndex++) {\n        this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions);\n      }\n    }\n    var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\n    if (alignItemLabelsInAllGroups) {\n      this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions);\n    } else {\n      var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\n      var i;\n      for (i = 0; i < $groups.length; i++) {\n        this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions);\n      }\n    }\n  },\n  _applyLabelsWidthWithNestedGroups: function ($container, colCount, excludeTabbed, labelMarkOptions) {\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed\n    };\n    var colIndex;\n    var groupsColIndex;\n    var groupColIndex;\n    var $groupsByCol;\n    for (colIndex = 0; colIndex < colCount; colIndex++) {\n      $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\n      this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);\n      for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\n        $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\n        var groupColCount = this._getGroupColCount($groupsByCol);\n        for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\n          this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions);\n        }\n      }\n    }\n  },\n  _labelLocation: function () {\n    return this.option(\"labelLocation\");\n  },\n  _alignLabelsInColumn: function (_ref) {\n    var {\n      layoutManager: layoutManager,\n      inOneColumn: inOneColumn,\n      $container: $container,\n      excludeTabbed: excludeTabbed,\n      items: items\n    } = _ref;\n    if (!hasWindow() || \"top\" === this._labelLocation()) {\n      return;\n    }\n    var labelMarkOptions = convertToLabelMarkOptions(layoutManager._getMarkOptions());\n    if (inOneColumn) {\n      this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions);\n    } else if (this._checkGrouping(items)) {\n      this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions);\n    } else {\n      this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions);\n    }\n  },\n  _prepareFormData: function () {\n    if (!isDefined(this.option(\"formData\"))) {\n      this.option(\"formData\", {});\n    }\n  },\n  _setStylingModeClass: function () {\n    if (\"underlined\" === this.option(\"stylingMode\")) {\n      this.$element().addClass(FORM_UNDERLINED_CLASS);\n    }\n  },\n  _initMarkup: function () {\n    ValidationEngine.addGroup(this._getValidationGroup());\n    this._clearCachedInstances();\n    this._prepareFormData();\n    this.$element().addClass(FORM_CLASS);\n    this._setStylingModeClass();\n    this.callBase();\n    this.setAria(\"role\", \"form\", this.$element());\n    if (this.option(\"scrollingEnabled\")) {\n      this._renderScrollable();\n    }\n    this._renderLayout();\n    this._renderValidationSummary();\n    this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();\n    this._attachResizeObserverSubscription();\n  },\n  _attachResizeObserverSubscription: function () {\n    if (hasWindow()) {\n      var formRootElement = this.$element().get(0);\n      resizeObserverSingleton.unobserve(formRootElement);\n      resizeObserverSingleton.observe(formRootElement, () => {\n        this._resizeHandler();\n      });\n    }\n  },\n  _resizeHandler: function () {\n    if (this._cachedLayoutManagers.length) {\n      each(this._cachedLayoutManagers, (_, layoutManager) => {\n        var _layoutManager$option;\n        null === (_layoutManager$option = layoutManager.option(\"onLayoutChanged\")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode());\n      });\n    }\n  },\n  _getCurrentScreenFactor: function () {\n    return hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n  },\n  _clearCachedInstances: function () {\n    this._itemsRunTimeInfo.clear();\n    this._cachedLayoutManagers = [];\n  },\n  _alignLabels: function (layoutManager, inOneColumn) {\n    this._alignLabelsInColumn({\n      $container: this.$element(),\n      layoutManager: layoutManager,\n      excludeTabbed: true,\n      items: this.option(\"items\"),\n      inOneColumn: inOneColumn\n    });\n    triggerResizeEvent(this.$element().find(\".\".concat(TOOLBAR_CLASS)));\n  },\n  _clean: function () {\n    this._clearValidationSummary();\n    this.callBase();\n    this._groupsColCount = [];\n    this._cachedColCountOptions = [];\n    this._lastMarkupScreenFactor = void 0;\n    resizeObserverSingleton.unobserve(this.$element().get(0));\n  },\n  _renderScrollable: function () {\n    var useNativeScrolling = this.option(\"useNativeScrolling\");\n    this._scrollable = new Scrollable(this.$element(), {\n      useNative: !!useNativeScrolling,\n      useSimulatedScrollbar: !useNativeScrolling,\n      useKeyboard: false,\n      direction: \"both\",\n      bounceEnabled: false\n    });\n  },\n  _getContent: function () {\n    return this.option(\"scrollingEnabled\") ? $(this._scrollable.content()) : this.$element();\n  },\n  _clearValidationSummary: function () {\n    var _this$_$validationSum;\n    null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();\n    this._$validationSummary = void 0;\n    this._validationSummary = void 0;\n  },\n  _renderValidationSummary: function () {\n    this._clearValidationSummary();\n    if (this.option(\"showValidationSummary\")) {\n      this._$validationSummary = $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\n      this._validationSummary = this._$validationSummary.dxValidationSummary({\n        validationGroup: this._getValidationGroup()\n      }).dxValidationSummary(\"instance\");\n    }\n  },\n  _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {\n    if (items) {\n      var result = [];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var path = concatPaths(currentPath, createItemPathByIndex(i, isTabs));\n        var itemRunTimeInfo = {\n          item: item,\n          itemIndex: i,\n          path: path\n        };\n        var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);\n        if (isString(item)) {\n          item = {\n            dataField: item\n          };\n        }\n        if (isObject(item)) {\n          var preparedItem = _extends({}, item);\n          itemRunTimeInfo.preparedItem = preparedItem;\n          preparedItem.guid = guid;\n          this._tryPrepareGroupItem(preparedItem);\n          this._tryPrepareTabbedItem(preparedItem, path);\n          this._tryPrepareItemTemplate(preparedItem);\n          if (parentIsTabbedItem) {\n            preparedItem.cssItemClass = FIELD_ITEM_TAB_CLASS;\n          }\n          if (preparedItem.items) {\n            preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path);\n          }\n          result.push(preparedItem);\n        } else {\n          result.push(item);\n        }\n      }\n      return result;\n    }\n  },\n  _tryPrepareGroupItem: function (item) {\n    if (\"group\" === item.itemType) {\n      item.alignItemLabels = ensureDefined(item.alignItemLabels, true);\n      item._prepareGroupItemTemplate = itemTemplate => {\n        if (item.template) {\n          item.groupContentTemplate = this._getTemplate(itemTemplate);\n        }\n        item.template = this._itemGroupTemplate.bind(this, item);\n      };\n      item._prepareGroupItemTemplate(item.template);\n    }\n  },\n  _tryPrepareTabbedItem: function (item, path) {\n    if (\"tabbed\" === item.itemType) {\n      item.template = this._itemTabbedTemplate.bind(this, item);\n      item.tabs = this._prepareItems(item.tabs, true, path, true);\n    }\n  },\n  _tryPrepareItemTemplate: function (item) {\n    if (item.template) {\n      item.template = this._getTemplate(item.template);\n    }\n  },\n  _checkGrouping: function (items) {\n    if (items) {\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        if (\"group\" === item.itemType) {\n          return true;\n        }\n      }\n    }\n  },\n  _renderLayout: function () {\n    var that = this;\n    var items = that.option(\"items\");\n    var $content = that._getContent();\n    items = that._prepareItems(items);\n    that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {\n      isRoot: true,\n      colCount: that.option(\"colCount\"),\n      alignItemLabels: that.option(\"alignItemLabels\"),\n      screenByWidth: this.option(\"screenByWidth\"),\n      colCountByScreen: this.option(\"colCountByScreen\"),\n      onLayoutChanged: function (inOneColumn) {\n        that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn);\n      },\n      onContentReady: function (e) {\n        that._alignLabels(e.component, e.component.isSingleColumnMode());\n      }\n    }));\n  },\n  _tryGetItemsForTemplate: function (item) {\n    return item.items || [];\n  },\n  _itemTabbedTemplate: function (item, e, $container) {\n    var _item$tabs;\n    var $tabPanel = $(\"<div>\").appendTo($container);\n    var tabPanelOptions = extend({}, item.tabPanelOptions, {\n      dataSource: item.tabs,\n      onItemRendered: args => {\n        var _item$tabPanelOptions, _item$tabPanelOptions2;\n        null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);\n        triggerShownEvent(args.itemElement);\n      },\n      itemTemplate: (itemData, e, container) => {\n        var $container = $(container);\n        var alignItemLabels = ensureDefined(itemData.alignItemLabels, true);\n        var layoutManager = this._renderLayoutManager($container, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(itemData), {\n          colCount: itemData.colCount,\n          alignItemLabels: alignItemLabels,\n          screenByWidth: this.option(\"screenByWidth\"),\n          colCountByScreen: itemData.colCountByScreen,\n          cssItemClass: itemData.cssItemClass,\n          onLayoutChanged: inOneColumn => {\n            this._alignLabelsInColumn({\n              $container: $container,\n              layoutManager: layoutManager,\n              items: itemData.items,\n              inOneColumn: inOneColumn\n            });\n          }\n        }));\n        if (this._itemsRunTimeInfo) {\n          this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\n            layoutManager: layoutManager\n          });\n        }\n        if (alignItemLabels) {\n          this._alignLabelsInColumn({\n            $container: $container,\n            layoutManager: layoutManager,\n            items: itemData.items,\n            inOneColumn: layoutManager.isSingleColumnMode()\n          });\n        }\n      }\n    });\n    var tryUpdateTabPanelInstance = (items, instance) => {\n      if (Array.isArray(items)) {\n        items.forEach(item => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n          widgetInstance: instance\n        }));\n      }\n    };\n    var tabPanel = this._createComponent($tabPanel, TabPanel, tabPanelOptions);\n    $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_TABS_CLASS);\n    tabPanel.on(\"optionChanged\", e => {\n      if (\"dataSource\" === e.fullName) {\n        tryUpdateTabPanelInstance(e.value, e.component);\n      }\n    });\n    tryUpdateTabPanelInstance([{\n      guid: item.guid\n    }, ...(null !== (_item$tabs = item.tabs) && void 0 !== _item$tabs ? _item$tabs : [])], tabPanel);\n  },\n  _itemGroupTemplate: function (item, e, $container) {\n    var $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\n    $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);\n    var colCount;\n    var layoutManager;\n    if (item.caption) {\n      $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group);\n    }\n    var $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\n    if (item.groupContentTemplate) {\n      item._renderGroupContentTemplate = () => {\n        $groupContent.empty();\n        var data = {\n          formData: this.option(\"formData\"),\n          component: this\n        };\n        item.groupContentTemplate.render({\n          model: data,\n          container: getPublicElement($groupContent)\n        });\n      };\n      item._renderGroupContentTemplate();\n    } else {\n      layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {\n        colCount: item.colCount,\n        colCountByScreen: item.colCountByScreen,\n        alignItemLabels: item.alignItemLabels,\n        cssItemClass: item.cssItemClass\n      }));\n      this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n        layoutManager: layoutManager\n      });\n      colCount = layoutManager._getColCount();\n      if (!this._groupsColCount.includes(colCount)) {\n        this._groupsColCount.push(colCount);\n      }\n      $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\n      $group.attr(GROUP_COL_COUNT_ATTR, colCount);\n    }\n  },\n  _createLayoutManagerOptions: function (items, extendedLayoutManagerOptions) {\n    return convertToLayoutManagerOptions({\n      form: this,\n      formOptions: this.option(),\n      $formElement: this.$element(),\n      items: items,\n      validationGroup: this._getValidationGroup(),\n      extendedLayoutManagerOptions: extendedLayoutManagerOptions,\n      onFieldDataChanged: args => {\n        if (!this._isDataUpdating) {\n          this._triggerOnFieldDataChanged(args);\n        }\n      },\n      onContentReady: args => {\n        this._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\n        extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args);\n      },\n      onDisposing: _ref2 => {\n        var {\n          component: component\n        } = _ref2;\n        var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\n        this._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo);\n      },\n      onFieldItemRendered: () => {\n        var _this$_validationSumm;\n        null === (_this$_validationSumm = this._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup();\n      }\n    });\n  },\n  _renderLayoutManager: function ($parent, layoutManagerOptions) {\n    var baseColCountByScreen = {\n      lg: layoutManagerOptions.colCount,\n      md: layoutManagerOptions.colCount,\n      sm: layoutManagerOptions.colCount,\n      xs: 1\n    };\n    this._cachedColCountOptions.push({\n      colCountByScreen: extend(baseColCountByScreen, layoutManagerOptions.colCountByScreen)\n    });\n    var $element = $(\"<div>\");\n    $element.appendTo($parent);\n    var instance = this._createComponent($element, \"dxLayoutManager\", layoutManagerOptions);\n    instance.on(\"autoColCountChanged\", () => {\n      this._clearAutoColCountChangedTimeout();\n      this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0);\n    });\n    this._cachedLayoutManagers.push(instance);\n    return instance;\n  },\n  _getValidationGroup: function () {\n    return this.option(\"validationGroup\") || this;\n  },\n  _createComponent: function ($element, type, config) {\n    config = config || {};\n    this._extendConfig(config, {\n      readOnly: this.option(\"readOnly\")\n    });\n    return this.callBase($element, type, config);\n  },\n  _attachSyncSubscriptions: function () {\n    var that = this;\n    that.on(\"optionChanged\", function (args) {\n      var optionFullName = args.fullName;\n      if (\"formData\" === optionFullName) {\n        if (!isDefined(args.value)) {\n          that._options.silent(\"formData\", args.value = {});\n        }\n        that._triggerOnFieldDataChangedByDataSet(args.value);\n      }\n      if (that._cachedLayoutManagers.length) {\n        each(that._cachedLayoutManagers, function (index, layoutManager) {\n          if (\"formData\" === optionFullName) {\n            that._isDataUpdating = true;\n            layoutManager.option(\"layoutData\", args.value);\n            that._isDataUpdating = false;\n          }\n          if (\"readOnly\" === args.name || \"disabled\" === args.name) {\n            layoutManager.option(optionFullName, args.value);\n          }\n        });\n      }\n    });\n  },\n  _optionChanged: function (args) {\n    var splitFullName = args.fullName.split(\".\");\n    if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"items\") && this._itemsOptionChangedHandler(args)) {\n      return;\n    }\n    if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"formData\") && this._formDataOptionChangedHandler(args)) {\n      return;\n    }\n    this._defaultOptionChangedHandler(args);\n  },\n  _defaultOptionChangedHandler: function (args) {\n    switch (args.name) {\n      case \"formData\":\n        if (!this.option(\"items\")) {\n          this._invalidate();\n        } else if (isEmptyObject(args.value)) {\n          this._resetValues();\n        }\n        break;\n      case \"onFieldDataChanged\":\n        break;\n      case \"items\":\n      case \"colCount\":\n      case \"onEditorEnterKey\":\n      case \"labelLocation\":\n      case \"labelMode\":\n      case \"alignItemLabels\":\n      case \"showColonAfterLabel\":\n      case \"customizeItem\":\n      case \"alignItemLabelsInAllGroups\":\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n      case \"requiredMessage\":\n      case \"scrollingEnabled\":\n      case \"formID\":\n      case \"colCountByScreen\":\n      case \"screenByWidth\":\n      case \"stylingMode\":\n        this._invalidate();\n        break;\n      case \"showValidationSummary\":\n        this._renderValidationSummary();\n        break;\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._invalidate();\n        }\n        break;\n      case \"alignRootItemLabels\":\n      case \"readOnly\":\n        break;\n      case \"width\":\n        this.callBase(args);\n        this._rootLayoutManager.option(args.name, args.value);\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n        break;\n      case \"validationGroup\":\n        ValidationEngine.removeGroup(args.previousValue || this);\n        this._invalidate();\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _itemsOptionChangedHandler: function (args) {\n    var nameParts = args.fullName.split(\".\");\n    var value = args.value;\n    var itemPath = this._getItemPath(nameParts);\n    var item = this.option(itemPath);\n    var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\n    var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\n    var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\n    var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);\n    if (!result && item) {\n      this._changeItemOption(item, optionNameWithoutPath, value);\n      var items = this._generateItemsFromData(this.option(\"items\"));\n      this.option(\"items\", items);\n      result = true;\n    }\n    return result;\n  },\n  _formDataOptionChangedHandler: function (args) {\n    var nameParts = args.fullName.split(\".\");\n    var value = args.value;\n    var dataField = nameParts.slice(1).join(\".\");\n    var editor = this.getEditor(dataField);\n    if (editor) {\n      editor.option(\"value\", value);\n    } else {\n      this._triggerOnFieldDataChanged({\n        dataField: dataField,\n        value: value\n      });\n    }\n    return true;\n  },\n  _tryCreateItemOptionAction: function (optionName, item, value, previousValue, itemPath) {\n    if (\"tabs\" === optionName) {\n      this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\n      value = this._prepareItems(value, true, itemPath, true);\n    }\n    return tryCreateItemOptionAction(optionName, {\n      item: item,\n      value: value,\n      previousValue: previousValue,\n      itemsRunTimeInfo: this._itemsRunTimeInfo\n    });\n  },\n  _tryExecuteItemOptionAction: function (action) {\n    return action && action.tryExecute();\n  },\n  _updateValidationGroupAndSummaryIfNeeded: function (fullName) {\n    var optionName = getOptionNameFromFullName(fullName);\n    if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\n      ValidationEngine.addGroup(this._getValidationGroup());\n      if (this.option(\"showValidationSummary\")) {\n        var _this$_validationSumm2;\n        null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup();\n      }\n    }\n  },\n  _setLayoutManagerItemOption(layoutManager, optionName, value, path) {\n    if (this._updateLockCount > 0) {\n      !layoutManager._updateLockCount && layoutManager.beginUpdate();\n      var key = this._itemsRunTimeInfo.findKeyByPath(path);\n      this.postponedOperations.add(key, () => {\n        !layoutManager._disposed && layoutManager.endUpdate();\n        return new Deferred().resolve();\n      });\n    }\n    var contentReadyHandler = e => {\n      e.component.off(\"contentReady\", contentReadyHandler);\n      if (isFullPathContainsTabs(path)) {\n        var tabPath = tryGetTabPath(path);\n        var tabLayoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);\n        if (tabLayoutManager) {\n          this._alignLabelsInColumn({\n            items: tabLayoutManager.option(\"items\"),\n            layoutManager: tabLayoutManager,\n            $container: tabLayoutManager.$element(),\n            inOneColumn: tabLayoutManager.isSingleColumnMode()\n          });\n        }\n      } else {\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n      }\n    };\n    layoutManager.on(\"contentReady\", contentReadyHandler);\n    layoutManager.option(optionName, value);\n    this._updateValidationGroupAndSummaryIfNeeded(optionName);\n  },\n  _tryChangeLayoutManagerItemOption(fullName, value) {\n    var nameParts = fullName.split(\".\");\n    var optionName = getOptionNameFromFullName(fullName);\n    if (\"items\" === optionName && nameParts.length > 1) {\n      var itemPath = this._getItemPath(nameParts);\n      var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);\n      if (layoutManager) {\n        this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\n        var items = this._prepareItems(value, false, itemPath);\n        this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\n        return true;\n      }\n    } else if (nameParts.length > 2) {\n      var endPartIndex = nameParts.length - 2;\n      var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\n      var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);\n      if (_layoutManager) {\n        var fullOptionName = getFullOptionName(nameParts[endPartIndex], optionName);\n        if (\"editorType\" === optionName) {\n          if (_layoutManager.option(fullOptionName) !== value) {\n            return false;\n          }\n        }\n        if (\"visible\" === optionName) {\n          var formItems = this.option(getFullOptionName(_itemPath, \"items\"));\n          if (formItems && formItems.length) {\n            var layoutManagerItems = _layoutManager.option(\"items\");\n            formItems.forEach((item, index) => {\n              var layoutItem = layoutManagerItems[index];\n              layoutItem.visibleIndex = item.visibleIndex;\n            });\n          }\n        }\n        this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\n        return true;\n      }\n    }\n    return false;\n  },\n  _tryChangeLayoutManagerItemOptions(itemPath, options) {\n    var result;\n    this.beginUpdate();\n    each(options, (optionName, optionValue) => {\n      result = this._tryChangeLayoutManagerItemOption(getFullOptionName(itemPath, optionName), optionValue);\n      if (!result) {\n        return false;\n      }\n    });\n    this.endUpdate();\n    return result;\n  },\n  _getItemPath: function (nameParts) {\n    var itemPath = nameParts[0];\n    var i;\n    for (i = 1; i < nameParts.length; i++) {\n      if (-1 !== nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/)) {\n        itemPath += \".\" + nameParts[i];\n      } else {\n        break;\n      }\n    }\n    return itemPath;\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _triggerOnFieldDataChangedByDataSet: function (data) {\n    var that = this;\n    if (data && isObject(data)) {\n      each(data, function (dataField, value) {\n        that._triggerOnFieldDataChanged({\n          dataField: dataField,\n          value: value\n        });\n      });\n    }\n  },\n  _updateFieldValue: function (dataField, value) {\n    if (isDefined(this.option(\"formData\"))) {\n      var editor = this.getEditor(dataField);\n      this.option(\"formData.\" + dataField, value);\n      if (editor) {\n        var editorValue = editor.option(\"value\");\n        if (editorValue !== value) {\n          editor.option(\"value\", value);\n        }\n      }\n    }\n  },\n  _generateItemsFromData: function (items) {\n    var formData = this.option(\"formData\");\n    var result = [];\n    if (!items && isDefined(formData)) {\n      each(formData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n    if (items) {\n      each(items, function (index, item) {\n        if (isObject(item)) {\n          result.push(item);\n        } else {\n          result.push({\n            dataField: item\n          });\n        }\n      });\n    }\n    return result;\n  },\n  _getItemByField: function (field, items) {\n    var that = this;\n    var fieldParts = isObject(field) ? field : that._getFieldParts(field);\n    var fieldName = fieldParts.fieldName;\n    var fieldPath = fieldParts.fieldPath;\n    var resultItem;\n    if (items.length) {\n      each(items, function (index, item) {\n        var itemType = item.itemType;\n        if (fieldPath.length) {\n          var path = fieldPath.slice();\n          item = that._getItemByFieldPath(path, fieldName, item);\n        } else if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\n          var subItemsField = that._getSubItemField(itemType);\n          item.items = that._generateItemsFromData(item.items);\n          item = that._getItemByField({\n            fieldName: fieldName,\n            fieldPath: fieldPath\n          }, item[subItemsField]);\n        }\n        if (isEqualToDataFieldOrNameOrTitleOrCaption(item, fieldName)) {\n          resultItem = item;\n          return false;\n        }\n      });\n    }\n    return resultItem;\n  },\n  _getFieldParts: function (field) {\n    var fieldName = field;\n    var separatorIndex = fieldName.indexOf(\".\");\n    var resultPath = [];\n    while (-1 !== separatorIndex) {\n      resultPath.push(fieldName.substr(0, separatorIndex));\n      fieldName = fieldName.substr(separatorIndex + 1);\n      separatorIndex = fieldName.indexOf(\".\");\n    }\n    return {\n      fieldName: fieldName,\n      fieldPath: resultPath.reverse()\n    };\n  },\n  _getItemByFieldPath: function (path, fieldName, item) {\n    var itemType = item.itemType;\n    var subItemsField = this._getSubItemField(itemType);\n    var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\n    var result;\n    do {\n      if (isItemWithSubItems) {\n        var name = item.name || item.caption || item.title;\n        var isGroupWithName = isDefined(name);\n        var nameWithoutSpaces = getTextWithoutSpaces(name);\n        var pathNode = void 0;\n        item[subItemsField] = this._generateItemsFromData(item[subItemsField]);\n        if (isGroupWithName) {\n          pathNode = path.pop();\n        }\n        if (!path.length) {\n          result = this._getItemByField(fieldName, item[subItemsField]);\n          if (result) {\n            break;\n          }\n        }\n        if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\n          if (path.length) {\n            result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField]);\n          }\n        }\n      } else {\n        break;\n      }\n    } while (path.length && !isDefined(result));\n    return result;\n  },\n  _getSubItemField: function (itemType) {\n    return \"tabbed\" === itemType ? \"tabs\" : \"items\";\n  },\n  _searchItemInEverySubItem: function (path, fieldName, items) {\n    var that = this;\n    var result;\n    each(items, function (index, groupItem) {\n      result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\n      if (result) {\n        return false;\n      }\n    });\n    if (!result) {\n      result = false;\n    }\n    return result;\n  },\n  _changeItemOption: function (item, option, value) {\n    if (isObject(item)) {\n      item[option] = value;\n    }\n  },\n  _dimensionChanged: function () {\n    var currentScreenFactor = this._getCurrentScreenFactor();\n    if (this._lastMarkupScreenFactor !== currentScreenFactor) {\n      if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\n        this._targetScreenFactor = currentScreenFactor;\n        this._refresh();\n        this._targetScreenFactor = void 0;\n      }\n      this._lastMarkupScreenFactor = currentScreenFactor;\n    }\n  },\n  _isColCountChanged: function (oldScreenSize, newScreenSize) {\n    var isChanged = false;\n    each(this._cachedColCountOptions, function (index, item) {\n      if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\n        isChanged = true;\n        return false;\n      }\n    });\n    return isChanged;\n  },\n  _refresh: function () {\n    var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\n    eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\n    this.callBase();\n  },\n  _resetValues: function () {\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if (isDefined(itemRunTimeInfo.widgetInstance) && Editor.isEditor(itemRunTimeInfo.widgetInstance)) {\n        itemRunTimeInfo.widgetInstance.reset();\n        itemRunTimeInfo.widgetInstance.option(\"isValid\", true);\n      }\n    });\n    ValidationEngine.resetGroup(this._getValidationGroup());\n  },\n  _updateData: function (data, value, isComplexData) {\n    var that = this;\n    var _data = isComplexData ? value : data;\n    if (isObject(_data)) {\n      each(_data, function (dataField, fieldValue) {\n        that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, isObject(fieldValue));\n      });\n    } else if (isString(data)) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  registerKeyHandler: function (key, handler) {\n    this.callBase(key, handler);\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if (isDefined(itemRunTimeInfo.widgetInstance)) {\n        itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler);\n      }\n    });\n  },\n  _focusTarget: function () {\n    return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first();\n  },\n  _visibilityChanged: function () {\n    this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n  },\n  _clearAutoColCountChangedTimeout: function () {\n    if (this.autoColCountChangedTimeoutId) {\n      clearTimeout(this.autoColCountChangedTimeoutId);\n      this.autoColCountChangedTimeoutId = void 0;\n    }\n  },\n  _dispose: function () {\n    this._clearAutoColCountChangedTimeout();\n    ValidationEngine.removeGroup(this._getValidationGroup());\n    this.callBase();\n  },\n  resetValues: function () {\n    this._resetValues();\n  },\n  updateData: function (data, value) {\n    this._updateData(data, value);\n  },\n  getEditor: function (dataField) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField);\n  },\n  getButton: function (name) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByName(name);\n  },\n  updateDimensions: function () {\n    var that = this;\n    var deferred = new Deferred();\n    if (that._scrollable) {\n      that._scrollable.update().done(function () {\n        deferred.resolveWith(that);\n      });\n    } else {\n      deferred.resolveWith(that);\n    }\n    return deferred.promise();\n  },\n  itemOption: function (id, option, value) {\n    var items = this._generateItemsFromData(this.option(\"items\"));\n    var item = this._getItemByField(id, items);\n    var path = getItemPath(items, item);\n    if (!item) {\n      return;\n    }\n    switch (arguments.length) {\n      case 1:\n        return item;\n      case 3:\n        var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\n        this._changeItemOption(item, option, value);\n        var fullName = getFullOptionName(path, option);\n        if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\n          this.option(\"items\", items);\n        }\n        break;\n      default:\n        if (isObject(option)) {\n          if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\n            var allowUpdateItems;\n            each(option, (optionName, optionValue) => {\n              var itemAction = this._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\n              this._changeItemOption(item, optionName, optionValue);\n              if (!allowUpdateItems && !this._tryExecuteItemOptionAction(itemAction)) {\n                allowUpdateItems = true;\n              }\n            });\n            allowUpdateItems && this.option(\"items\", items);\n          }\n        }\n    }\n  },\n  validate: function () {\n    return ValidationEngine.validateGroup(this._getValidationGroup());\n  },\n  getItemID: function (name) {\n    return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid());\n  },\n  getTargetScreenFactor: function () {\n    return this._targetScreenFactor;\n  }\n});\nregisterComponent(\"dxForm\", Form);\nexport default Form;","map":{"version":3,"names":["_extends","$","eventsEngine","registerComponent","Guid","ensureDefined","config","isDefined","isEmptyObject","isObject","isString","each","extend","triggerResizeEvent","triggerShownEvent","getPublicElement","messageLocalization","Widget","Editor","defaultScreenFactorFunc","getCurrentScreenFactor","hasWindow","ValidationEngine","default","FormItemsRunTimeInfo","TabPanel","Scrollable","Deferred","isMaterial","tryCreateItemOptionAction","resizeObserverSingleton","concatPaths","createItemPathByIndex","getFullOptionName","getOptionNameFromFullName","tryGetTabPath","getTextWithoutSpaces","isEqualToDataFieldOrNameOrTitleOrCaption","isFullPathContainsTabs","getItemPath","convertToLayoutManagerOptions","convertToLabelMarkOptions","setLabelWidthByMaxLabelWidth","FORM_CLASS","FIELD_ITEM_CLASS","FORM_GROUP_CLASS","FORM_GROUP_CONTENT_CLASS","FIELD_ITEM_CONTENT_HAS_GROUP_CLASS","FIELD_ITEM_CONTENT_HAS_TABS_CLASS","FORM_GROUP_WITH_CAPTION_CLASS","FORM_GROUP_CAPTION_CLASS","FIELD_ITEM_TAB_CLASS","FORM_FIELD_ITEM_COL_CLASS","GROUP_COL_COUNT_CLASS","GROUP_COL_COUNT_ATTR","FIELD_ITEM_CONTENT_CLASS","FORM_VALIDATION_SUMMARY","ROOT_SIMPLE_ITEM_CLASS","FORM_UNDERLINED_CLASS","TOOLBAR_CLASS","FOCUSED_STATE_CLASS","ITEM_OPTIONS_FOR_VALIDATION_UPDATING","Form","inherit","_init","callBase","_cachedColCountOptions","_itemsRunTimeInfo","_groupsColCount","_attachSyncSubscriptions","_getDefaultOptions","formID","formData","colCount","screenByWidth","colCountByScreen","labelLocation","readOnly","onFieldDataChanged","customizeItem","onEditorEnterKey","minColWidth","alignItemLabels","alignItemLabelsInAllGroups","alignRootItemLabels","showColonAfterLabel","showRequiredMark","showOptionalMark","requiredMark","optionalMark","format","requiredMessage","getFormatter","showValidationSummary","items","scrollingEnabled","validationGroup","stylingMode","editorStylingMode","labelMode","_defaultOptionsRules","concat","device","options","_setOptionsByReference","_optionsByReference","_getGroupColCount","$element","parseInt","attr","_applyLabelsWidthByCol","$container","index","arguments","length","labelMarkOptions","fieldItemClass","inOneColumn","cssExcludeTabbedSelector","excludeTabbed","_applyLabelsWidth","applyLabelsOptions","i","_getGroupElementsInColumn","columnIndex","cssColCountSelector","groupSelector","find","_applyLabelsWidthWithGroups","option","$rootSimpleItems","colIndex","_applyLabelsWidthWithNestedGroups","$groups","eq","groupsColIndex","groupColIndex","$groupsByCol","groupColCount","_labelLocation","_alignLabelsInColumn","_ref","layoutManager","_getMarkOptions","_checkGrouping","_getColCount","_prepareFormData","_setStylingModeClass","addClass","_initMarkup","addGroup","_getValidationGroup","_clearCachedInstances","setAria","_renderScrollable","_renderLayout","_renderValidationSummary","_lastMarkupScreenFactor","_targetScreenFactor","_getCurrentScreenFactor","_attachResizeObserverSubscription","formRootElement","get","unobserve","observe","_resizeHandler","_cachedLayoutManagers","_","_layoutManager$option","isSingleColumnMode","clear","_alignLabels","_clean","_clearValidationSummary","useNativeScrolling","_scrollable","useNative","useSimulatedScrollbar","useKeyboard","direction","bounceEnabled","_getContent","content","_this$_$validationSum","_$validationSummary","remove","_validationSummary","appendTo","dxValidationSummary","_prepareItems","parentIsTabbedItem","currentPath","isTabs","result","item","path","itemRunTimeInfo","itemIndex","guid","add","dataField","preparedItem","_tryPrepareGroupItem","_tryPrepareTabbedItem","_tryPrepareItemTemplate","cssItemClass","push","itemType","_prepareGroupItemTemplate","itemTemplate","template","groupContentTemplate","_getTemplate","_itemGroupTemplate","bind","_itemTabbedTemplate","tabs","that","$content","_rootLayoutManager","_renderLayoutManager","_createLayoutManagerOptions","isRoot","onLayoutChanged","onContentReady","e","component","_tryGetItemsForTemplate","_item$tabs","$tabPanel","tabPanelOptions","dataSource","onItemRendered","args","_item$tabPanelOptions","_item$tabPanelOptions2","call","itemElement","itemData","container","extendRunTimeItemInfoByKey","tryUpdateTabPanelInstance","instance","Array","isArray","forEach","widgetInstance","tabPanel","_createComponent","parent","on","fullName","value","$group","toggleClass","caption","text","$groupContent","_renderGroupContentTemplate","empty","data","render","model","includes","extendedLayoutManagerOptions","form","formOptions","$formElement","_isDataUpdating","_triggerOnFieldDataChanged","addItemsOrExtendFrom","onDisposing","_ref2","nestedItemsRunTimeInfo","getItemsRunTimeInfo","removeItemsByItems","onFieldItemRendered","_this$_validationSumm","refreshValidationGroup","$parent","layoutManagerOptions","baseColCountByScreen","lg","md","sm","xs","_clearAutoColCountChangedTimeout","autoColCountChangedTimeoutId","setTimeout","_disposed","_refresh","type","_extendConfig","optionFullName","_options","silent","_triggerOnFieldDataChangedByDataSet","name","_optionChanged","splitFullName","split","search","_itemsOptionChangedHandler","_formDataOptionChangedHandler","_defaultOptionChangedHandler","_invalidate","_resetValues","removeGroup","previousValue","nameParts","itemPath","_getItemPath","optionNameWithoutPath","replace","simpleOptionName","itemAction","_tryCreateItemOptionAction","_tryExecuteItemOptionAction","_tryChangeLayoutManagerItemOption","_changeItemOption","_generateItemsFromData","slice","join","editor","getEditor","optionName","removeItemsByPathStartWith","itemsRunTimeInfo","action","tryExecute","_updateValidationGroupAndSummaryIfNeeded","indexOf","_this$_validationSumm2","_setLayoutManagerItemOption","_updateLockCount","beginUpdate","key","findKeyByPath","postponedOperations","endUpdate","resolve","contentReadyHandler","off","tabPath","tabLayoutManager","findGroupOrTabLayoutManagerByPath","endPartIndex","_itemPath","_layoutManager","fullOptionName","formItems","layoutManagerItems","layoutItem","visibleIndex","_tryChangeLayoutManagerItemOptions","optionValue","_createActionByOption","_updateFieldValue","editorValue","_getItemByField","field","fieldParts","_getFieldParts","fieldName","fieldPath","resultItem","_getItemByFieldPath","subItemsField","_getSubItemField","separatorIndex","resultPath","substr","reverse","isItemWithSubItems","title","isGroupWithName","nameWithoutSpaces","pathNode","pop","_searchItemInEverySubItem","groupItem","_dimensionChanged","currentScreenFactor","_isColCountChanged","oldScreenSize","newScreenSize","isChanged","editorSelector","trigger","isEditor","reset","resetGroup","_updateData","isComplexData","_data","fieldValue","registerKeyHandler","handler","_focusTarget","first","_visibilityChanged","clearTimeout","_dispose","resetValues","updateData","findWidgetInstanceByDataField","findWidgetInstanceByName","getButton","updateDimensions","deferred","update","done","resolveWith","promise","itemOption","id","allowUpdateItems","validate","validateGroup","getItemID","getTargetScreenFactor"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/form/ui.form.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    triggerResizeEvent,\r\n    triggerShownEvent\r\n} from \"../../events/visibility_change\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport Editor from \"../editor/editor\";\r\nimport {\r\n    defaultScreenFactorFunc,\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport TabPanel from \"../tab_panel\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport tryCreateItemOptionAction from \"./ui.form.item_options_actions\";\r\nimport resizeObserverSingleton from \"../../core/resize_observer\";\r\nimport \"./ui.form.layout_manager\";\r\nimport {\r\n    concatPaths,\r\n    createItemPathByIndex,\r\n    getFullOptionName,\r\n    getOptionNameFromFullName,\r\n    tryGetTabPath,\r\n    getTextWithoutSpaces,\r\n    isEqualToDataFieldOrNameOrTitleOrCaption,\r\n    isFullPathContainsTabs,\r\n    getItemPath,\r\n    convertToLayoutManagerOptions\r\n} from \"./ui.form.utils\";\r\nimport {\r\n    convertToLabelMarkOptions\r\n} from \"./ui.form.layout_manager.utils\";\r\nimport {\r\n    setLabelWidthByMaxLabelWidth\r\n} from \"./components/label\";\r\nimport \"../validation_summary\";\r\nimport \"../validation_group\";\r\nimport {\r\n    FORM_CLASS,\r\n    FIELD_ITEM_CLASS,\r\n    FORM_GROUP_CLASS,\r\n    FORM_GROUP_CONTENT_CLASS,\r\n    FIELD_ITEM_CONTENT_HAS_GROUP_CLASS,\r\n    FIELD_ITEM_CONTENT_HAS_TABS_CLASS,\r\n    FORM_GROUP_WITH_CAPTION_CLASS,\r\n    FORM_GROUP_CAPTION_CLASS,\r\n    FIELD_ITEM_TAB_CLASS,\r\n    FORM_FIELD_ITEM_COL_CLASS,\r\n    GROUP_COL_COUNT_CLASS,\r\n    GROUP_COL_COUNT_ATTR,\r\n    FIELD_ITEM_CONTENT_CLASS,\r\n    FORM_VALIDATION_SUMMARY,\r\n    ROOT_SIMPLE_ITEM_CLASS,\r\n    FORM_UNDERLINED_CLASS\r\n} from \"./constants\";\r\nimport {\r\n    TOOLBAR_CLASS\r\n} from \"../toolbar/constants\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\r\nvar Form = Widget.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._groupsColCount = [];\r\n        this._attachSyncSubscriptions()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            formID: \"dx-\" + new Guid,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: defaultScreenFactorFunc,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            alignRootItemLabels: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: config().editorStylingMode,\r\n            labelMode: \"outside\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getGroupColCount: function($element) {\r\n        return parseInt($element.attr(GROUP_COL_COUNT_ATTR))\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index) {\r\n        var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n        var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;\r\n        var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\r\n        var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\".concat(FIELD_ITEM_TAB_CLASS, \")\") : \"\";\r\n        setLabelWidthByMaxLabelWidth($container, \".\".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);\r\n        return\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        var i;\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\r\n        var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        if (true === this.option(\"alignRootItemLabels\")) {\r\n            var $rootSimpleItems = $container.find(\".\".concat(ROOT_SIMPLE_ITEM_CLASS));\r\n            for (var colIndex = 0; colIndex < colCount; colIndex++) {\r\n                this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions)\r\n            }\r\n        }\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions)\r\n        } else {\r\n            var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\r\n            var i;\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        var colIndex;\r\n        var groupsColIndex;\r\n        var groupColIndex;\r\n        var $groupsByCol;\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getGroupColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _labelLocation: function() {\r\n        return this.option(\"labelLocation\")\r\n    },\r\n    _alignLabelsInColumn: function(_ref) {\r\n        var {\r\n            layoutManager: layoutManager,\r\n            inOneColumn: inOneColumn,\r\n            $container: $container,\r\n            excludeTabbed: excludeTabbed,\r\n            items: items\r\n        } = _ref;\r\n        if (!hasWindow() || \"top\" === this._labelLocation()) {\r\n            return\r\n        }\r\n        var labelMarkOptions = convertToLabelMarkOptions(layoutManager._getMarkOptions());\r\n        if (inOneColumn) {\r\n            this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions)\r\n        } else if (this._checkGrouping(items)) {\r\n            this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions)\r\n        } else {\r\n            this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions)\r\n        }\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!isDefined(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _setStylingModeClass: function() {\r\n        if (\"underlined\" === this.option(\"stylingMode\")) {\r\n            this.$element().addClass(FORM_UNDERLINED_CLASS)\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        ValidationEngine.addGroup(this._getValidationGroup());\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(FORM_CLASS);\r\n        this._setStylingModeClass();\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();\r\n        this._attachResizeObserverSubscription()\r\n    },\r\n    _attachResizeObserverSubscription: function() {\r\n        if (hasWindow()) {\r\n            var formRootElement = this.$element().get(0);\r\n            resizeObserverSingleton.unobserve(formRootElement);\r\n            resizeObserverSingleton.observe(formRootElement, () => {\r\n                this._resizeHandler()\r\n            })\r\n        }\r\n    },\r\n    _resizeHandler: function() {\r\n        if (this._cachedLayoutManagers.length) {\r\n            each(this._cachedLayoutManagers, (_, layoutManager) => {\r\n                var _layoutManager$option;\r\n                null === (_layoutManager$option = layoutManager.option(\"onLayoutChanged\")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode())\r\n            })\r\n        }\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        });\r\n        triggerResizeEvent(this.$element().find(\".\".concat(TOOLBAR_CLASS)))\r\n    },\r\n    _clean: function() {\r\n        this._clearValidationSummary();\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        this._lastMarkupScreenFactor = void 0;\r\n        resizeObserverSingleton.unobserve(this.$element().get(0))\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new Scrollable(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? $(this._scrollable.content()) : this.$element()\r\n    },\r\n    _clearValidationSummary: function() {\r\n        var _this$_$validationSum;\r\n        null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();\r\n        this._$validationSummary = void 0;\r\n        this._validationSummary = void 0\r\n    },\r\n    _renderValidationSummary: function() {\r\n        this._clearValidationSummary();\r\n        if (this.option(\"showValidationSummary\")) {\r\n            this._$validationSummary = $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\r\n            this._validationSummary = this._$validationSummary.dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).dxValidationSummary(\"instance\")\r\n        }\r\n    },\r\n    _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {\r\n        if (items) {\r\n            var result = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                var path = concatPaths(currentPath, createItemPathByIndex(i, isTabs));\r\n                var itemRunTimeInfo = {\r\n                    item: item,\r\n                    itemIndex: i,\r\n                    path: path\r\n                };\r\n                var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);\r\n                if (isString(item)) {\r\n                    item = {\r\n                        dataField: item\r\n                    }\r\n                }\r\n                if (isObject(item)) {\r\n                    var preparedItem = _extends({}, item);\r\n                    itemRunTimeInfo.preparedItem = preparedItem;\r\n                    preparedItem.guid = guid;\r\n                    this._tryPrepareGroupItem(preparedItem);\r\n                    this._tryPrepareTabbedItem(preparedItem, path);\r\n                    this._tryPrepareItemTemplate(preparedItem);\r\n                    if (parentIsTabbedItem) {\r\n                        preparedItem.cssItemClass = FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    if (preparedItem.items) {\r\n                        preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path)\r\n                    }\r\n                    result.push(preparedItem)\r\n                } else {\r\n                    result.push(item)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    _tryPrepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = ensureDefined(item.alignItemLabels, true);\r\n            item._prepareGroupItemTemplate = itemTemplate => {\r\n                if (item.template) {\r\n                    item.groupContentTemplate = this._getTemplate(itemTemplate)\r\n                }\r\n                item.template = this._itemGroupTemplate.bind(this, item)\r\n            };\r\n            item._prepareGroupItemTemplate(item.template)\r\n        }\r\n    },\r\n    _tryPrepareTabbedItem: function(item, path) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true, path, true)\r\n        }\r\n    },\r\n    _tryPrepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this;\r\n        var items = that.option(\"items\");\r\n        var $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {\r\n            isRoot: true,\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        }))\r\n    },\r\n    _tryGetItemsForTemplate: function(item) {\r\n        return item.items || []\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var _item$tabs;\r\n        var $tabPanel = $(\"<div>\").appendTo($container);\r\n        var tabPanelOptions = extend({}, item.tabPanelOptions, {\r\n            dataSource: item.tabs,\r\n            onItemRendered: args => {\r\n                var _item$tabPanelOptions, _item$tabPanelOptions2;\r\n                null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);\r\n                triggerShownEvent(args.itemElement)\r\n            },\r\n            itemTemplate: (itemData, e, container) => {\r\n                var $container = $(container);\r\n                var alignItemLabels = ensureDefined(itemData.alignItemLabels, true);\r\n                var layoutManager = this._renderLayoutManager($container, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(itemData), {\r\n                    colCount: itemData.colCount,\r\n                    alignItemLabels: alignItemLabels,\r\n                    screenByWidth: this.option(\"screenByWidth\"),\r\n                    colCountByScreen: itemData.colCountByScreen,\r\n                    cssItemClass: itemData.cssItemClass,\r\n                    onLayoutChanged: inOneColumn => {\r\n                        this._alignLabelsInColumn({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: inOneColumn\r\n                        })\r\n                    }\r\n                }));\r\n                if (this._itemsRunTimeInfo) {\r\n                    this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\r\n                        layoutManager: layoutManager\r\n                    })\r\n                }\r\n                if (alignItemLabels) {\r\n                    this._alignLabelsInColumn({\r\n                        $container: $container,\r\n                        layoutManager: layoutManager,\r\n                        items: itemData.items,\r\n                        inOneColumn: layoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        var tryUpdateTabPanelInstance = (items, instance) => {\r\n            if (Array.isArray(items)) {\r\n                items.forEach(item => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                    widgetInstance: instance\r\n                }))\r\n            }\r\n        };\r\n        var tabPanel = this._createComponent($tabPanel, TabPanel, tabPanelOptions);\r\n        $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_TABS_CLASS);\r\n        tabPanel.on(\"optionChanged\", e => {\r\n            if (\"dataSource\" === e.fullName) {\r\n                tryUpdateTabPanelInstance(e.value, e.component)\r\n            }\r\n        });\r\n        tryUpdateTabPanelInstance([{\r\n            guid: item.guid\r\n        }, ...null !== (_item$tabs = item.tabs) && void 0 !== _item$tabs ? _item$tabs : []], tabPanel)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\r\n        $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);\r\n        var colCount;\r\n        var layoutManager;\r\n        if (item.caption) {\r\n            $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        var $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            item._renderGroupContentTemplate = () => {\r\n                $groupContent.empty();\r\n                var data = {\r\n                    formData: this.option(\"formData\"),\r\n                    component: this\r\n                };\r\n                item.groupContentTemplate.render({\r\n                    model: data,\r\n                    container: getPublicElement($groupContent)\r\n                })\r\n            };\r\n            item._renderGroupContentTemplate()\r\n        } else {\r\n            layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            }));\r\n            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                layoutManager: layoutManager\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if (!this._groupsColCount.includes(colCount)) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\r\n            $group.attr(GROUP_COL_COUNT_ATTR, colCount)\r\n        }\r\n    },\r\n    _createLayoutManagerOptions: function(items, extendedLayoutManagerOptions) {\r\n        return convertToLayoutManagerOptions({\r\n            form: this,\r\n            formOptions: this.option(),\r\n            $formElement: this.$element(),\r\n            items: items,\r\n            validationGroup: this._getValidationGroup(),\r\n            extendedLayoutManagerOptions: extendedLayoutManagerOptions,\r\n            onFieldDataChanged: args => {\r\n                if (!this._isDataUpdating) {\r\n                    this._triggerOnFieldDataChanged(args)\r\n                }\r\n            },\r\n            onContentReady: args => {\r\n                this._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\r\n                extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args)\r\n            },\r\n            onDisposing: _ref2 => {\r\n                var {\r\n                    component: component\r\n                } = _ref2;\r\n                var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\r\n                this._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo)\r\n            },\r\n            onFieldItemRendered: () => {\r\n                var _this$_validationSumm;\r\n                null === (_this$_validationSumm = this._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup()\r\n            }\r\n        })\r\n    },\r\n    _renderLayoutManager: function($parent, layoutManagerOptions) {\r\n        var baseColCountByScreen = {\r\n            lg: layoutManagerOptions.colCount,\r\n            md: layoutManagerOptions.colCount,\r\n            sm: layoutManagerOptions.colCount,\r\n            xs: 1\r\n        };\r\n        this._cachedColCountOptions.push({\r\n            colCountByScreen: extend(baseColCountByScreen, layoutManagerOptions.colCountByScreen)\r\n        });\r\n        var $element = $(\"<div>\");\r\n        $element.appendTo($parent);\r\n        var instance = this._createComponent($element, \"dxLayoutManager\", layoutManagerOptions);\r\n        instance.on(\"autoColCountChanged\", () => {\r\n            this._clearAutoColCountChangedTimeout();\r\n            this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0)\r\n        });\r\n        this._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        config = config || {};\r\n        this._extendConfig(config, {\r\n            readOnly: this.option(\"readOnly\")\r\n        });\r\n        return this.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.on(\"optionChanged\", (function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!isDefined(args.value)) {\r\n                    that._options.silent(\"formData\", args.value = {})\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                each(that._cachedLayoutManagers, (function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _optionChanged: function(args) {\r\n        var splitFullName = args.fullName.split(\".\");\r\n        if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"items\") && this._itemsOptionChangedHandler(args)) {\r\n            return\r\n        }\r\n        if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"formData\") && this._formDataOptionChangedHandler(args)) {\r\n            return\r\n        }\r\n        this._defaultOptionChangedHandler(args)\r\n    },\r\n    _defaultOptionChangedHandler: function(args) {\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else if (isEmptyObject(args.value)) {\r\n                    this._resetValues()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"labelMode\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"alignRootItemLabels\":\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"validationGroup\":\r\n                ValidationEngine.removeGroup(args.previousValue || this);\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemsOptionChangedHandler: function(args) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        var itemPath = this._getItemPath(nameParts);\r\n        var item = this.option(itemPath);\r\n        var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\r\n        var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\r\n        var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\r\n        var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);\r\n        if (!result && item) {\r\n            this._changeItemOption(item, optionNameWithoutPath, value);\r\n            var items = this._generateItemsFromData(this.option(\"items\"));\r\n            this.option(\"items\", items);\r\n            result = true\r\n        }\r\n        return result\r\n    },\r\n    _formDataOptionChangedHandler: function(args) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        var dataField = nameParts.slice(1).join(\".\");\r\n        var editor = this.getEditor(dataField);\r\n        if (editor) {\r\n            editor.option(\"value\", value)\r\n        } else {\r\n            this._triggerOnFieldDataChanged({\r\n                dataField: dataField,\r\n                value: value\r\n            })\r\n        }\r\n        return true\r\n    },\r\n    _tryCreateItemOptionAction: function(optionName, item, value, previousValue, itemPath) {\r\n        if (\"tabs\" === optionName) {\r\n            this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\r\n            value = this._prepareItems(value, true, itemPath, true)\r\n        }\r\n        return tryCreateItemOptionAction(optionName, {\r\n            item: item,\r\n            value: value,\r\n            previousValue: previousValue,\r\n            itemsRunTimeInfo: this._itemsRunTimeInfo\r\n        })\r\n    },\r\n    _tryExecuteItemOptionAction: function(action) {\r\n        return action && action.tryExecute()\r\n    },\r\n    _updateValidationGroupAndSummaryIfNeeded: function(fullName) {\r\n        var optionName = getOptionNameFromFullName(fullName);\r\n        if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\r\n            ValidationEngine.addGroup(this._getValidationGroup());\r\n            if (this.option(\"showValidationSummary\")) {\r\n                var _this$_validationSumm2;\r\n                null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup()\r\n            }\r\n        }\r\n    },\r\n    _setLayoutManagerItemOption(layoutManager, optionName, value, path) {\r\n        if (this._updateLockCount > 0) {\r\n            !layoutManager._updateLockCount && layoutManager.beginUpdate();\r\n            var key = this._itemsRunTimeInfo.findKeyByPath(path);\r\n            this.postponedOperations.add(key, () => {\r\n                !layoutManager._disposed && layoutManager.endUpdate();\r\n                return (new Deferred).resolve()\r\n            })\r\n        }\r\n        var contentReadyHandler = e => {\r\n            e.component.off(\"contentReady\", contentReadyHandler);\r\n            if (isFullPathContainsTabs(path)) {\r\n                var tabPath = tryGetTabPath(path);\r\n                var tabLayoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);\r\n                if (tabLayoutManager) {\r\n                    this._alignLabelsInColumn({\r\n                        items: tabLayoutManager.option(\"items\"),\r\n                        layoutManager: tabLayoutManager,\r\n                        $container: tabLayoutManager.$element(),\r\n                        inOneColumn: tabLayoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            } else {\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())\r\n            }\r\n        };\r\n        layoutManager.on(\"contentReady\", contentReadyHandler);\r\n        layoutManager.option(optionName, value);\r\n        this._updateValidationGroupAndSummaryIfNeeded(optionName)\r\n    },\r\n    _tryChangeLayoutManagerItemOption(fullName, value) {\r\n        var nameParts = fullName.split(\".\");\r\n        var optionName = getOptionNameFromFullName(fullName);\r\n        if (\"items\" === optionName && nameParts.length > 1) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);\r\n            if (layoutManager) {\r\n                this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\r\n                var items = this._prepareItems(value, false, itemPath);\r\n                this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\r\n                return true\r\n            }\r\n        } else if (nameParts.length > 2) {\r\n            var endPartIndex = nameParts.length - 2;\r\n            var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\r\n            var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);\r\n            if (_layoutManager) {\r\n                var fullOptionName = getFullOptionName(nameParts[endPartIndex], optionName);\r\n                if (\"editorType\" === optionName) {\r\n                    if (_layoutManager.option(fullOptionName) !== value) {\r\n                        return false\r\n                    }\r\n                }\r\n                if (\"visible\" === optionName) {\r\n                    var formItems = this.option(getFullOptionName(_itemPath, \"items\"));\r\n                    if (formItems && formItems.length) {\r\n                        var layoutManagerItems = _layoutManager.option(\"items\");\r\n                        formItems.forEach((item, index) => {\r\n                            var layoutItem = layoutManagerItems[index];\r\n                            layoutItem.visibleIndex = item.visibleIndex\r\n                        })\r\n                    }\r\n                }\r\n                this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _tryChangeLayoutManagerItemOptions(itemPath, options) {\r\n        var result;\r\n        this.beginUpdate();\r\n        each(options, (optionName, optionValue) => {\r\n            result = this._tryChangeLayoutManagerItemOption(getFullOptionName(itemPath, optionName), optionValue);\r\n            if (!result) {\r\n                return false\r\n            }\r\n        });\r\n        this.endUpdate();\r\n        return result\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var itemPath = nameParts[0];\r\n        var i;\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (-1 !== nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/)) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && isObject(data)) {\r\n            each(data, (function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            }))\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if (isDefined(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\");\r\n        var result = [];\r\n        if (!items && isDefined(formData)) {\r\n            each(formData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        if (items) {\r\n            each(items, (function(index, item) {\r\n                if (isObject(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var that = this;\r\n        var fieldParts = isObject(field) ? field : that._getFieldParts(field);\r\n        var fieldName = fieldParts.fieldName;\r\n        var fieldPath = fieldParts.fieldPath;\r\n        var resultItem;\r\n        if (items.length) {\r\n            each(items, (function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\r\n                    var subItemsField = that._getSubItemField(itemType);\r\n                    item.items = that._generateItemsFromData(item.items);\r\n                    item = that._getItemByField({\r\n                        fieldName: fieldName,\r\n                        fieldPath: fieldPath\r\n                    }, item[subItemsField])\r\n                }\r\n                if (isEqualToDataFieldOrNameOrTitleOrCaption(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldName = field;\r\n        var separatorIndex = fieldName.indexOf(\".\");\r\n        var resultPath = [];\r\n        while (-1 !== separatorIndex) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(\".\")\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var itemType = item.itemType;\r\n        var subItemsField = this._getSubItemField(itemType);\r\n        var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        var result;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var name = item.name || item.caption || item.title;\r\n                var isGroupWithName = isDefined(name);\r\n                var nameWithoutSpaces = getTextWithoutSpaces(name);\r\n                var pathNode = void 0;\r\n                item[subItemsField] = this._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = this._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !isDefined(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var that = this;\r\n        var result;\r\n        each(items, (function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        }));\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if (isObject(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._lastMarkupScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\r\n                this._targetScreenFactor = currentScreenFactor;\r\n                this._refresh();\r\n                this._targetScreenFactor = void 0\r\n            }\r\n            this._lastMarkupScreenFactor = currentScreenFactor\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        each(this._cachedColCountOptions, (function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        }));\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {\r\n            if (isDefined(itemRunTimeInfo.widgetInstance) && Editor.isEditor(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.reset();\r\n                itemRunTimeInfo.widgetInstance.option(\"isValid\", true)\r\n            }\r\n        }));\r\n        ValidationEngine.resetGroup(this._getValidationGroup())\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this;\r\n        var _data = isComplexData ? value : data;\r\n        if (isObject(_data)) {\r\n            each(_data, (function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, isObject(fieldValue))\r\n            }))\r\n        } else if (isString(data)) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {\r\n            if (isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler)\r\n            }\r\n        }))\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())\r\n    },\r\n    _clearAutoColCountChangedTimeout: function() {\r\n        if (this.autoColCountChangedTimeoutId) {\r\n            clearTimeout(this.autoColCountChangedTimeoutId);\r\n            this.autoColCountChangedTimeoutId = void 0\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._clearAutoColCountChangedTimeout();\r\n        ValidationEngine.removeGroup(this._getValidationGroup());\r\n        this.callBase()\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField)\r\n    },\r\n    getButton: function(name) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByName(name)\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done((function() {\r\n                deferred.resolveWith(that)\r\n            }))\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var items = this._generateItemsFromData(this.option(\"items\"));\r\n        var item = this._getItemByField(id, items);\r\n        var path = getItemPath(items, item);\r\n        if (!item) {\r\n            return\r\n        }\r\n        switch (arguments.length) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\r\n                this._changeItemOption(item, option, value);\r\n                var fullName = getFullOptionName(path, option);\r\n                if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            default:\r\n                if (isObject(option)) {\r\n                    if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\r\n                        var allowUpdateItems;\r\n                        each(option, (optionName, optionValue) => {\r\n                            var itemAction = this._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\r\n                            this._changeItemOption(item, optionName, optionValue);\r\n                            if (!allowUpdateItems && !this._tryExecuteItemOptionAction(itemAction)) {\r\n                                allowUpdateItems = true\r\n                            }\r\n                        });\r\n                        allowUpdateItems && this.option(\"items\", items)\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    validate: function() {\r\n        return ValidationEngine.validateGroup(this._getValidationGroup())\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid)\r\n    },\r\n    getTargetScreenFactor: function() {\r\n        return this._targetScreenFactor\r\n    }\r\n});\r\nregisterComponent(\"dxForm\", Form);\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}