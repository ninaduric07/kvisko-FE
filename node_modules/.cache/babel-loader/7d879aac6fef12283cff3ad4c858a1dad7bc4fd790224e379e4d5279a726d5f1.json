{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/array.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"./type\";\nimport { orderEach } from \"./object\";\nimport config from \"../config\";\nfunction createOccurrenceMap(array) {\n  return array.reduce((map, value) => {\n    var _map$get;\n    var count = (null !== (_map$get = map.get(value)) && void 0 !== _map$get ? _map$get : 0) + 1;\n    map.set(value, count);\n    return map;\n  }, new Map());\n}\nexport var wrapToArray = function (item) {\n  return Array.isArray(item) ? item : [item];\n};\nexport var getUniqueValues = function (values) {\n  return [...new Set(values)];\n};\nexport var getIntersection = function (firstArray, secondArray) {\n  var toRemoveMap = createOccurrenceMap(secondArray);\n  return firstArray.filter(value => {\n    var occurrencesCount = toRemoveMap.get(value);\n    occurrencesCount && toRemoveMap.set(value, occurrencesCount - 1);\n    return occurrencesCount;\n  });\n};\nexport var removeDuplicates = function () {\n  var from = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  var toRemove = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\n  var toRemoveMap = createOccurrenceMap(toRemove);\n  return from.filter(value => {\n    var occurrencesCount = toRemoveMap.get(value);\n    occurrencesCount && toRemoveMap.set(value, occurrencesCount - 1);\n    return !occurrencesCount;\n  });\n};\nexport var normalizeIndexes = function (items, indexPropName, currentItem, needIndexCallback) {\n  var indexedItems = {};\n  var {\n    useLegacyVisibleIndex: useLegacyVisibleIndex\n  } = config();\n  var currentIndex = 0;\n  var shouldUpdateIndex = item => !isDefined(item[indexPropName]) && (!needIndexCallback || needIndexCallback(item));\n  items.forEach(item => {\n    var index = item[indexPropName];\n    if (index >= 0) {\n      indexedItems[index] = indexedItems[index] || [];\n      if (item === currentItem) {\n        indexedItems[index].unshift(item);\n      } else {\n        indexedItems[index].push(item);\n      }\n    } else {\n      item[indexPropName] = void 0;\n    }\n  });\n  if (!useLegacyVisibleIndex) {\n    items.forEach(item => {\n      if (shouldUpdateIndex(item)) {\n        while (indexedItems[currentIndex]) {\n          currentIndex++;\n        }\n        indexedItems[currentIndex] = [item];\n        currentIndex++;\n      }\n    });\n  }\n  currentIndex = 0;\n  orderEach(indexedItems, function (index, items) {\n    items.forEach(item => {\n      if (index >= 0) {\n        item[indexPropName] = currentIndex++;\n      }\n    });\n  });\n  if (useLegacyVisibleIndex) {\n    items.forEach(item => {\n      if (shouldUpdateIndex(item)) {\n        item[indexPropName] = currentIndex++;\n      }\n    });\n  }\n};\nexport var groupBy = (array, getGroupName) => array.reduce((groupedResult, item) => {\n  var _groupedResult$groupN;\n  var groupName = getGroupName(item);\n  groupedResult[groupName] = null !== (_groupedResult$groupN = groupedResult[groupName]) && void 0 !== _groupedResult$groupN ? _groupedResult$groupN : [];\n  groupedResult[groupName].push(item);\n  return groupedResult;\n}, {});","map":{"version":3,"names":["isDefined","orderEach","config","createOccurrenceMap","array","reduce","map","value","_map$get","count","get","set","Map","wrapToArray","item","Array","isArray","getUniqueValues","values","Set","getIntersection","firstArray","secondArray","toRemoveMap","filter","occurrencesCount","removeDuplicates","from","arguments","length","toRemove","normalizeIndexes","items","indexPropName","currentItem","needIndexCallback","indexedItems","useLegacyVisibleIndex","currentIndex","shouldUpdateIndex","forEach","index","unshift","push","groupBy","getGroupName","groupedResult","_groupedResult$groupN","groupName"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/utils/array.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/array.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"./type\";\r\nimport {\r\n    orderEach\r\n} from \"./object\";\r\nimport config from \"../config\";\r\n\r\nfunction createOccurrenceMap(array) {\r\n    return array.reduce((map, value) => {\r\n        var _map$get;\r\n        var count = (null !== (_map$get = map.get(value)) && void 0 !== _map$get ? _map$get : 0) + 1;\r\n        map.set(value, count);\r\n        return map\r\n    }, new Map)\r\n}\r\nexport var wrapToArray = function(item) {\r\n    return Array.isArray(item) ? item : [item]\r\n};\r\nexport var getUniqueValues = function(values) {\r\n    return [...new Set(values)]\r\n};\r\nexport var getIntersection = function(firstArray, secondArray) {\r\n    var toRemoveMap = createOccurrenceMap(secondArray);\r\n    return firstArray.filter(value => {\r\n        var occurrencesCount = toRemoveMap.get(value);\r\n        occurrencesCount && toRemoveMap.set(value, occurrencesCount - 1);\r\n        return occurrencesCount\r\n    })\r\n};\r\nexport var removeDuplicates = function() {\r\n    var from = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    var toRemove = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\r\n    var toRemoveMap = createOccurrenceMap(toRemove);\r\n    return from.filter(value => {\r\n        var occurrencesCount = toRemoveMap.get(value);\r\n        occurrencesCount && toRemoveMap.set(value, occurrencesCount - 1);\r\n        return !occurrencesCount\r\n    })\r\n};\r\nexport var normalizeIndexes = function(items, indexPropName, currentItem, needIndexCallback) {\r\n    var indexedItems = {};\r\n    var {\r\n        useLegacyVisibleIndex: useLegacyVisibleIndex\r\n    } = config();\r\n    var currentIndex = 0;\r\n    var shouldUpdateIndex = item => !isDefined(item[indexPropName]) && (!needIndexCallback || needIndexCallback(item));\r\n    items.forEach(item => {\r\n        var index = item[indexPropName];\r\n        if (index >= 0) {\r\n            indexedItems[index] = indexedItems[index] || [];\r\n            if (item === currentItem) {\r\n                indexedItems[index].unshift(item)\r\n            } else {\r\n                indexedItems[index].push(item)\r\n            }\r\n        } else {\r\n            item[indexPropName] = void 0\r\n        }\r\n    });\r\n    if (!useLegacyVisibleIndex) {\r\n        items.forEach(item => {\r\n            if (shouldUpdateIndex(item)) {\r\n                while (indexedItems[currentIndex]) {\r\n                    currentIndex++\r\n                }\r\n                indexedItems[currentIndex] = [item];\r\n                currentIndex++\r\n            }\r\n        })\r\n    }\r\n    currentIndex = 0;\r\n    orderEach(indexedItems, (function(index, items) {\r\n        items.forEach(item => {\r\n            if (index >= 0) {\r\n                item[indexPropName] = currentIndex++\r\n            }\r\n        })\r\n    }));\r\n    if (useLegacyVisibleIndex) {\r\n        items.forEach(item => {\r\n            if (shouldUpdateIndex(item)) {\r\n                item[indexPropName] = currentIndex++\r\n            }\r\n        })\r\n    }\r\n};\r\nexport var groupBy = (array, getGroupName) => array.reduce((groupedResult, item) => {\r\n    var _groupedResult$groupN;\r\n    var groupName = getGroupName(item);\r\n    groupedResult[groupName] = null !== (_groupedResult$groupN = groupedResult[groupName]) && void 0 !== _groupedResult$groupN ? _groupedResult$groupN : [];\r\n    groupedResult[groupName].push(item);\r\n    return groupedResult\r\n}, {});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}