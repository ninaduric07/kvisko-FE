{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"isChecked\", \"size\"];\nimport { createVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\nimport { hasWindow } from \"../../../../core/utils/window\";\nimport { normalizeStyleProp } from \"../../../../core/utils/style\";\nimport { isNumeric as isNumber } from \"../../../../core/utils/type\";\nimport { getFontSizeByIconSize } from \"./utils\";\nexport var viewFunction = viewModel => {\n  var {\n    cssStyles: cssStyles,\n    elementRef: elementRef\n  } = viewModel;\n  return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\n    style: normalizeStyles(cssStyles)\n  }, null, elementRef);\n};\nexport var CheckBoxIconProps = {\n  isChecked: false\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class CheckBoxIcon extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.elementRef = infernoCreateRef();\n    this.__getterCache = {};\n    this.updateFontSize = this.updateFontSize.bind(this);\n    this.setIconFontSize = this.setIconFontSize.bind(this);\n    this.getIconSize = this.getIconSize.bind(this);\n    this.getComputedIconSize = this.getComputedIconSize.bind(this);\n  }\n  createEffects() {\n    return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])];\n  }\n  updateEffects() {\n    var _this$_effects$;\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size]);\n  }\n  updateFontSize() {\n    var {\n      isChecked: isChecked,\n      size: size\n    } = this.props;\n    if (hasWindow() && size) {\n      var newIconSize = this.getIconSize(size);\n      var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\n      this.setIconFontSize(newFontSize);\n    }\n  }\n  setIconFontSize(fontSize) {\n    var element = this.elementRef.current;\n    element.style.fontSize = \"\".concat(fontSize, \"px\");\n  }\n  getIconSize(size) {\n    if (isNumber(size)) {\n      return size;\n    }\n    if (size.endsWith(\"px\")) {\n      return parseInt(size, 10);\n    }\n    return this.getComputedIconSize();\n  }\n  getComputedIconSize() {\n    var element = this.elementRef.current;\n    var iconComputedStyle = getElementComputedStyle(element);\n    var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\n    return computedIconSize;\n  }\n  get cssStyles() {\n    if (void 0 !== this.__getterCache.cssStyles) {\n      return this.__getterCache.cssStyles;\n    }\n    return this.__getterCache.cssStyles = (() => {\n      var {\n        size: size\n      } = this.props;\n      var width = normalizeStyleProp(\"width\", size);\n      var height = normalizeStyleProp(\"height\", size);\n      return {\n        height: height,\n        width: width\n      };\n    })();\n  }\n  get restAttributes() {\n    var _this$props = this.props,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    return restProps;\n  }\n  componentWillUpdate(nextProps, nextState, context) {\n    super.componentWillUpdate();\n    if (this.props.size !== nextProps.size) {\n      this.__getterCache.cssStyles = void 0;\n    }\n  }\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      elementRef: this.elementRef,\n      setIconFontSize: this.setIconFontSize,\n      getIconSize: this.getIconSize,\n      getComputedIconSize: this.getComputedIconSize,\n      cssStyles: this.cssStyles,\n      restAttributes: this.restAttributes\n    });\n  }\n}\nCheckBoxIcon.defaultProps = CheckBoxIconProps;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","InfernoEffect","InfernoComponent","normalizeStyles","getElementComputedStyle","hasWindow","normalizeStyleProp","isNumeric","isNumber","getFontSizeByIconSize","viewFunction","viewModel","cssStyles","elementRef","style","CheckBoxIconProps","isChecked","createRef","infernoCreateRef","CheckBoxIcon","constructor","props","state","__getterCache","updateFontSize","bind","setIconFontSize","getIconSize","getComputedIconSize","createEffects","size","updateEffects","_this$_effects$","_effects","update","newIconSize","newFontSize","fontSize","element","current","concat","endsWith","parseInt","iconComputedStyle","computedIconSize","width","height","restAttributes","_this$props","restProps","componentWillUpdate","nextProps","nextState","context","render","defaultProps"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/renovation/ui/editors/check_box/check_box_icon.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isChecked\", \"size\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../../core/utils/window\";\r\nimport {\r\n    normalizeStyleProp\r\n} from \"../../../../core/utils/style\";\r\nimport {\r\n    isNumeric as isNumber\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    getFontSizeByIconSize\r\n} from \"./utils\";\r\nexport var viewFunction = viewModel => {\r\n    var {\r\n        cssStyles: cssStyles,\r\n        elementRef: elementRef\r\n    } = viewModel;\r\n    return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\r\n        style: normalizeStyles(cssStyles)\r\n    }, null, elementRef)\r\n};\r\nexport var CheckBoxIconProps = {\r\n    isChecked: false\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class CheckBoxIcon extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.elementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.updateFontSize = this.updateFontSize.bind(this);\r\n        this.setIconFontSize = this.setIconFontSize.bind(this);\r\n        this.getIconSize = this.getIconSize.bind(this);\r\n        this.getComputedIconSize = this.getComputedIconSize.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size])\r\n    }\r\n    updateFontSize() {\r\n        var {\r\n            isChecked: isChecked,\r\n            size: size\r\n        } = this.props;\r\n        if (hasWindow() && size) {\r\n            var newIconSize = this.getIconSize(size);\r\n            var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\r\n            this.setIconFontSize(newFontSize)\r\n        }\r\n    }\r\n    setIconFontSize(fontSize) {\r\n        var element = this.elementRef.current;\r\n        element.style.fontSize = \"\".concat(fontSize, \"px\")\r\n    }\r\n    getIconSize(size) {\r\n        if (isNumber(size)) {\r\n            return size\r\n        }\r\n        if (size.endsWith(\"px\")) {\r\n            return parseInt(size, 10)\r\n        }\r\n        return this.getComputedIconSize()\r\n    }\r\n    getComputedIconSize() {\r\n        var element = this.elementRef.current;\r\n        var iconComputedStyle = getElementComputedStyle(element);\r\n        var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\r\n        return computedIconSize\r\n    }\r\n    get cssStyles() {\r\n        if (void 0 !== this.__getterCache.cssStyles) {\r\n            return this.__getterCache.cssStyles\r\n        }\r\n        return this.__getterCache.cssStyles = (() => {\r\n            var {\r\n                size: size\r\n            } = this.props;\r\n            var width = normalizeStyleProp(\"width\", size);\r\n            var height = normalizeStyleProp(\"height\", size);\r\n            return {\r\n                height: height,\r\n                width: width\r\n            }\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.size !== nextProps.size) {\r\n            this.__getterCache.cssStyles = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            elementRef: this.elementRef,\r\n            setIconFontSize: this.setIconFontSize,\r\n            getIconSize: this.getIconSize,\r\n            getComputedIconSize: this.getComputedIconSize,\r\n            cssStyles: this.cssStyles,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nCheckBoxIcon.defaultProps = CheckBoxIconProps;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}