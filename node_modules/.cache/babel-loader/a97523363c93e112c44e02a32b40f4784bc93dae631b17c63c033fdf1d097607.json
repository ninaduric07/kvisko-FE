{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth, getWidth, getOuterHeight, getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { data as elementData } from \"../../core/element_data\";\nimport pointerEvents from \"../../events/pointer\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { name as dblclickEvent } from \"../../events/double_click\";\nimport browser from \"../../core/utils/browser\";\nimport { noop } from \"../../core/utils/common\";\nimport { setWidth } from \"../../core/utils/style\";\nimport { getPublicElement } from \"../../core/element\";\nimport { isRenderer, isFunction, isString, isDefined, isNumeric } from \"../../core/utils/type\";\nimport { getBoundingRect, getDefaultAlignment } from \"../../core/utils/position\";\nimport * as iteratorUtils from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { nativeScrolling } from \"../../core/utils/support\";\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\nvar GROUP_SPACE_CLASS = \"group-space\";\nvar CONTENT_CLASS = \"content\";\nvar TABLE_CLASS = \"table\";\nvar TABLE_FIXED_CLASS = \"table-fixed\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar ROW_CLASS = \"dx-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar ERROR_ROW_CLASS = \"dx-error-row\";\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\nvar appendElementTemplate = {\n  render: function (options) {\n    options.container.append(options.content);\n  }\n};\nvar subscribeToRowEvents = function (that, $table) {\n  var touchTarget;\n  var touchCurrentTarget;\n  var timeoutId;\n  function clearTouchTargets(timeout) {\n    return setTimeout(function () {\n      touchTarget = touchCurrentTarget = null;\n    }, timeout);\n  }\n  eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", function (e) {\n    clearTimeout(timeoutId);\n    if (\"touchstart\" === e.type) {\n      touchTarget = e.target;\n      touchCurrentTarget = e.currentTarget;\n      timeoutId = clearTouchTargets(1e3);\n    } else {\n      timeoutId = clearTouchTargets();\n    }\n  });\n  eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction(function (e) {\n    var event = e.event;\n    if (touchTarget) {\n      event.target = touchTarget;\n      event.currentTarget = touchCurrentTarget;\n    }\n    if (!$(event.target).closest(\"a\").length) {\n      e.rowIndex = that.getRowIndex(event.currentTarget);\n      if (e.rowIndex >= 0) {\n        e.rowElement = getPublicElement($(event.currentTarget));\n        e.columns = that.getColumns();\n        if (event.type === pointerEvents.down) {\n          that._rowPointerDown(e);\n        } else if (event.type === clickEventName) {\n          that._rowClick(e);\n        } else {\n          that._rowDblClick(e);\n        }\n      }\n    }\n  }));\n};\nvar getWidthStyle = function (width) {\n  if (\"auto\" === width) {\n    return \"\";\n  }\n  return isNumeric(width) ? width + \"px\" : width;\n};\nvar setCellWidth = function (cell, column, width) {\n  cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width;\n};\nvar copyAttributes = function (element, newElement) {\n  if (!element || !newElement) {\n    return;\n  }\n  var oldAttributes = element.attributes;\n  var newAttributes = newElement.attributes;\n  var i;\n  for (i = 0; i < oldAttributes.length; i++) {\n    var name = oldAttributes[i].nodeName;\n    if (!newElement.hasAttribute(name)) {\n      element.removeAttribute(name);\n    }\n  }\n  for (i = 0; i < newAttributes.length; i++) {\n    element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue);\n  }\n};\nvar columnsViewMembers = {\n  _createScrollableOptions: function () {\n    var scrollingOptions = this.option(\"scrolling\");\n    var useNativeScrolling = this.option(\"scrolling.useNative\");\n    var options = extend({}, scrollingOptions, {\n      direction: \"both\",\n      bounceEnabled: false,\n      useKeyboard: false\n    });\n    if (void 0 === useNativeScrolling) {\n      useNativeScrolling = true;\n    }\n    if (\"auto\" === useNativeScrolling) {\n      delete options.useNative;\n      delete options.useSimulatedScrollbar;\n    } else {\n      options.useNative = !!useNativeScrolling;\n      options.useSimulatedScrollbar = !useNativeScrolling;\n    }\n    return options;\n  },\n  _updateCell: function ($cell, parameters) {\n    if (parameters.rowType) {\n      this._cellPrepared($cell, parameters);\n    }\n  },\n  _createCell: function (options) {\n    var column = options.column;\n    var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\n    var cell = domAdapter.createElement(\"td\");\n    cell.style.textAlign = alignment;\n    var $cell = $(cell);\n    if (\"data\" === options.rowType && column.headerId && !column.type) {\n      if (this.component.option(\"showColumnHeaders\")) {\n        this.setAria(\"describedby\", column.headerId, $cell);\n      }\n    }\n    if (column.cssClass) {\n      $cell.addClass(column.cssClass);\n    }\n    if (\"expand\" === column.command) {\n      $cell.addClass(column.cssClass);\n      $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS));\n    }\n    if (column.colspan > 1) {\n      $cell.attr(\"colSpan\", column.colspan);\n    } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\n      if (column.width || column.minWidth) {\n        cell.style.minWidth = getWidthStyle(column.minWidth || column.width);\n      }\n      if (column.width) {\n        setCellWidth(cell, column, getWidthStyle(column.width));\n      }\n    }\n    return $cell;\n  },\n  _createRow: function (rowObject, tagName) {\n    tagName = tagName || \"tr\";\n    var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\n    this.setAria(\"role\", \"row\", $element);\n    return $element;\n  },\n  _isAltRow: function (row) {\n    return row && row.dataIndex % 2 === 1;\n  },\n  _createTable: function (columns, isAppend) {\n    var that = this;\n    var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\n    if (columns && !isAppend) {\n      $table.append(that._createColGroup(columns));\n      if (browser.safari) {\n        $table.append($(\"<thead>\").append(\"<tr>\"));\n      }\n      that.setAria(\"role\", \"presentation\", $table);\n    } else {\n      that.setAria(\"hidden\", true, $table);\n    }\n    this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\n    if (isAppend) {\n      return $table;\n    }\n    if (browser.mozilla) {\n      eventsEngine.on($table, \"mousedown\", \"td\", function (e) {\n        if (e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n    if (that.option(\"cellHintEnabled\")) {\n      eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction(function (args) {\n        var e = args.event;\n        var $element = $(e.target);\n        var $cell = $(e.currentTarget);\n        var $row = $cell.parent();\n        var visibleColumns = that._columnsController.getVisibleColumns();\n        var rowOptions = $row.data(\"options\");\n        var columnIndex = $cell.index();\n        var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\n        var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\n        var isHeaderRow = $row.hasClass(\"dx-header-row\");\n        var isDataRow = $row.hasClass(\"dx-data-row\");\n        var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\n        var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\n        var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\n        var isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\n        var isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\n        var isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\n        var isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\n        var shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\n        if (shouldShowHint) {\n          if ($element.data(CELL_HINT_VISIBLE)) {\n            $element.removeAttr(\"title\");\n            $element.data(CELL_HINT_VISIBLE, false);\n          }\n          var difference = $element[0].scrollWidth - $element[0].clientWidth;\n          if (difference > 0 && !isDefined($element.attr(\"title\"))) {\n            $element.attr(\"title\", $element.text());\n            $element.data(CELL_HINT_VISIBLE, true);\n          }\n        }\n      }));\n    }\n    var getOptions = function (event) {\n      var $cell = $(event.currentTarget);\n      var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\n      var $row = $cell.parent();\n      var rowOptions = $row.data(\"options\");\n      var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\n      if (!$cell.closest(\"table\").is(event.delegateTarget)) {\n        return;\n      }\n      var resultOptions = extend({}, options, {\n        cellElement: getPublicElement($cell),\n        event: event,\n        eventType: event.type\n      });\n      resultOptions.rowIndex = that.getRowIndex($row);\n      if ($fieldItemContent.length) {\n        var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\n        if (formItemOptions.column) {\n          resultOptions.column = formItemOptions.column;\n          resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index);\n        }\n      }\n      return resultOptions;\n    };\n    eventsEngine.on($table, \"mouseover\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, \"mouseout\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, clickEventName, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellClick\", options);\n    });\n    eventsEngine.on($table, dblclickEvent, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellDblClick\", options);\n    });\n    subscribeToRowEvents(that, $table);\n    return $table;\n  },\n  _rowPointerDown: noop,\n  _rowClick: noop,\n  _rowDblClick: noop,\n  _createColGroup: function (columns) {\n    var colgroupElement = $(\"<colgroup>\");\n    for (var i = 0; i < columns.length; i++) {\n      var colspan = columns[i].colspan || 1;\n      for (var j = 0; j < colspan; j++) {\n        colgroupElement.append(this._createCol(columns[i]));\n      }\n    }\n    return colgroupElement;\n  },\n  _createCol: function (column) {\n    var width = column.visibleWidth || column.width;\n    if (\"adaptiveHidden\" === width) {\n      width = HIDDEN_COLUMNS_WIDTH;\n    }\n    var col = $(\"<col>\");\n    setWidth(col, width);\n    return col;\n  },\n  renderDelayedTemplates: function (change) {\n    var delayedTemplates = this._delayedTemplates;\n    var syncTemplates = delayedTemplates.filter(template => !template.async);\n    var asyncTemplates = delayedTemplates.filter(template => template.async);\n    this._delayedTemplates = [];\n    this._renderDelayedTemplatesCore(syncTemplates, false, change);\n    this._renderDelayedTemplatesCoreAsync(asyncTemplates);\n  },\n  _renderDelayedTemplatesCoreAsync: function (templates) {\n    var that = this;\n    if (templates.length) {\n      that._templateTimeout = getWindow().setTimeout(function () {\n        that._renderDelayedTemplatesCore(templates, true);\n      });\n    }\n  },\n  _renderDelayedTemplatesCore: function (templates, isAsync, change) {\n    var date = new Date();\n    while (templates.length) {\n      var templateParameters = templates.shift();\n      var options = templateParameters.options;\n      var doc = domAdapter.getRootNode($(options.container).get(0));\n      var needWaitAsyncTemplates = this.needWaitAsyncTemplates();\n      if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\n        if (change) {\n          options.change = change;\n        }\n        templateParameters.template.render(options);\n      }\n      if (isAsync && new Date() - date > 30) {\n        this._renderDelayedTemplatesCoreAsync(templates);\n        break;\n      }\n    }\n    if (!templates.length && this._delayedTemplates.length) {\n      this.renderDelayedTemplates();\n    }\n  },\n  _processTemplate: function (template) {\n    var renderingTemplate;\n    if (template && template.render && !isRenderer(template)) {\n      renderingTemplate = {\n        allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\n        render: function (options) {\n          template.render(options.container, options.model, options.change);\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else if (isFunction(template)) {\n      renderingTemplate = {\n        render: function (options) {\n          var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\n          if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\n            options.container.append(renderedTemplate);\n          }\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else {\n      var templateID = isString(template) ? template : $(template).attr(\"id\");\n      if (!templateID) {\n        renderingTemplate = this.getTemplate(template);\n      } else {\n        if (!this._templatesCache[templateID]) {\n          this._templatesCache[templateID] = this.getTemplate(template);\n        }\n        renderingTemplate = this._templatesCache[templateID];\n      }\n    }\n    return renderingTemplate;\n  },\n  renderTemplate: function (container, template, options, allowRenderToDetachedContainer, change) {\n    var that = this;\n    var renderingTemplate = that._processTemplate(template, options);\n    var column = options.column;\n    var isDataRow = \"data\" === options.rowType;\n    var templateDeferred = new Deferred();\n    var templateOptions = {\n      container: container,\n      model: options,\n      deferred: templateDeferred,\n      onRendered: () => {\n        if (that.component._disposed) {\n          return;\n        }\n        templateDeferred.resolve();\n      }\n    };\n    if (renderingTemplate) {\n      options.component = that.component;\n      var async = column && (column.renderAsync && isDataRow || that.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\n      if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\n        renderingTemplate.render(templateOptions);\n      } else {\n        that._delayedTemplates.push({\n          template: renderingTemplate,\n          options: templateOptions,\n          async: async\n        });\n      }\n      this._templateDeferreds.add(templateDeferred);\n    } else {\n      templateDeferred.reject();\n    }\n    return templateDeferred.promise().always(() => {\n      this._templateDeferreds.delete(templateDeferred);\n    });\n  },\n  _getBodies: function (tableElement) {\n    return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\");\n  },\n  _needWrapRow: function ($tableElement) {\n    var _this$_getBodies;\n    var hasRowTemplate = !!this.option().rowTemplate;\n    return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".\" + ROW_CLASS).length);\n  },\n  _wrapRowIfNeed: function ($table, $row, isRefreshing) {\n    var $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\n    var needWrapRow = this._needWrapRow($tableElement);\n    if (needWrapRow) {\n      var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\n      this.setAria(\"role\", \"presentation\", $tbody);\n      return $tbody.append($row);\n    }\n    return $row;\n  },\n  _appendRow: function ($table, $row, appendTemplate) {\n    appendTemplate = appendTemplate || appendElementTemplate;\n    appendTemplate.render({\n      content: $row,\n      container: $table\n    });\n  },\n  _resizeCore: function () {\n    var scrollLeft = this._scrollLeft;\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  _renderCore: function (e) {\n    var $root = this.element().parent();\n    if (!$root || $root.parent().length) {\n      this.renderDelayedTemplates(e);\n    }\n  },\n  _renderTable: function (options) {\n    options = options || {};\n    options.columns = this._columnsController.getVisibleColumns();\n    var changeType = options.change && options.change.changeType;\n    var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\n    this._renderRows($table, options);\n    return $table;\n  },\n  _renderRows: function ($table, options) {\n    var rows = this._getRows(options.change);\n    var columnIndices = options.change && options.change.columnIndices || [];\n    var changeTypes = options.change && options.change.changeTypes || [];\n    for (var i = 0; i < rows.length; i++) {\n      this._renderRow($table, extend({\n        row: rows[i],\n        columnIndices: columnIndices[i],\n        changeType: changeTypes[i]\n      }, options));\n    }\n  },\n  _renderRow: function ($table, options) {\n    if (!options.columnIndices) {\n      options.row.cells = [];\n    }\n    var $row = this._createRow(options.row);\n    var $wrappedRow = this._wrapRowIfNeed($table, $row);\n    if (\"remove\" !== options.changeType) {\n      this._renderCells($row, options);\n    }\n    this._appendRow($table, $wrappedRow);\n    var rowOptions = extend({\n      columns: options.columns\n    }, options.row);\n    this._addWatchMethod(rowOptions, options.row);\n    this._rowPrepared($wrappedRow, rowOptions, options.row);\n  },\n  _needRenderCell: function (columnIndex, columnIndices) {\n    return !columnIndices || columnIndices.indexOf(columnIndex) >= 0;\n  },\n  _renderCells: function ($row, options) {\n    var columnIndex = 0;\n    var row = options.row;\n    var columns = options.columns;\n    for (var i = 0; i < columns.length; i++) {\n      if (this._needRenderCell(i, options.columnIndices)) {\n        this._renderCell($row, extend({\n          column: columns[i],\n          columnIndex: columnIndex,\n          value: row.values && row.values[columnIndex],\n          oldValue: row.oldValues && row.oldValues[columnIndex]\n        }, options));\n      }\n      if (columns[i].colspan > 1) {\n        columnIndex += columns[i].colspan;\n      } else {\n        columnIndex++;\n      }\n    }\n  },\n  _updateCells: function ($rowElement, $newRowElement, columnIndices) {\n    var $cells = $rowElement.children();\n    var $newCells = $newRowElement.children();\n    var highlightChanges = this.option(\"highlightChanges\");\n    var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\n    columnIndices.forEach(function (columnIndex, index) {\n      var $cell = $cells.eq(columnIndex);\n      var $newCell = $newCells.eq(index);\n      $cell.replaceWith($newCell);\n      if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\n        $newCell.addClass(cellUpdatedClass);\n      }\n    });\n    copyAttributes($rowElement.get(0), $newRowElement.get(0));\n  },\n  _setCellAriaAttributes: function ($cell, cellOptions) {\n    if (\"freeSpace\" !== cellOptions.rowType) {\n      this.setAria(\"role\", \"gridcell\", $cell);\n      var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n      var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\n      this.setAria(\"colindex\", ariaColIndex, $cell);\n    }\n  },\n  _renderCell: function ($row, options) {\n    var cellOptions = this._getCellOptions(options);\n    if (options.columnIndices) {\n      if (options.row.cells) {\n        var cellIndex = options.row.cells.findIndex(cell => cell.columnIndex === cellOptions.columnIndex);\n        options.row.cells[cellIndex] = cellOptions;\n      }\n    } else {\n      options.row.cells.push(cellOptions);\n    }\n    var $cell = this._createCell(cellOptions);\n    this._setCellAriaAttributes($cell, cellOptions);\n    this._renderCellContent($cell, cellOptions, options);\n    $row.get(0).appendChild($cell.get(0));\n    return $cell;\n  },\n  _renderCellContent: function ($cell, options, renderOptions) {\n    var template = this._getCellTemplate(options);\n    when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done(() => {\n      this._updateCell($cell, options);\n    });\n  },\n  _getCellTemplate: function () {},\n  _getRows: function () {\n    return [];\n  },\n  _getCellOptions: function (options) {\n    var cellOptions = {\n      column: options.column,\n      columnIndex: options.columnIndex,\n      rowType: options.row.rowType,\n      isAltRow: this._isAltRow(options.row)\n    };\n    this._addWatchMethod(cellOptions);\n    return cellOptions;\n  },\n  _addWatchMethod: function (options, source) {\n    if (!this.option(\"repaintChangesOnly\")) {\n      return;\n    }\n    var watchers = [];\n    source = source || options;\n    source.watch = source.watch || function (getter, updateValueFunc, updateRowFunc) {\n      var oldValue = getter(source.data);\n      var watcher = function (row) {\n        if (row && updateRowFunc) {\n          updateRowFunc(row);\n        }\n        var newValue = getter(source.data);\n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n          if (row) {\n            updateValueFunc(newValue);\n          }\n          oldValue = newValue;\n        }\n      };\n      watchers.push(watcher);\n      return function () {\n        var index = watchers.indexOf(watcher);\n        if (index >= 0) {\n          watchers.splice(index, 1);\n        }\n      };\n    };\n    source.update = source.update || function (row, keepRow) {\n      if (row) {\n        this.data = options.data = row.data;\n        this.rowIndex = options.rowIndex = row.rowIndex;\n        this.dataIndex = options.dataIndex = row.dataIndex;\n        this.isExpanded = options.isExpanded = row.isExpanded;\n        if (options.row && !keepRow) {\n          options.row = row;\n        }\n      }\n      watchers.forEach(function (watcher) {\n        watcher(row);\n      });\n    };\n    if (source !== options) {\n      options.watch = source.watch.bind(source);\n    }\n    return options;\n  },\n  _cellPrepared: function (cell, options) {\n    options.cellElement = getPublicElement($(cell));\n    this.executeAction(\"onCellPrepared\", options);\n  },\n  _rowPrepared: function ($row, options) {\n    elementData($row.get(0), \"options\", options);\n    options.rowElement = getPublicElement($row);\n    this.executeAction(\"onRowPrepared\", options);\n  },\n  _columnOptionChanged: function (e) {\n    var optionNames = e.optionNames;\n    if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n      var widths = iteratorUtils.map(visibleColumns, function (column) {\n        var width = column.visibleWidth || column.width;\n        return isDefined(width) ? width : \"auto\";\n      });\n      this.setColumnWidths({\n        widths: widths,\n        optionNames: optionNames\n      });\n      return;\n    }\n    if (!this._requireReady) {\n      this.render();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\n    return cellIndex;\n  },\n  getTableElements: function () {\n    return this._tableElement || $();\n  },\n  getTableElement: function () {\n    return this._tableElement;\n  },\n  setTableElement: function (tableElement) {\n    this._tableElement = tableElement;\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n    switch (args.name) {\n      case \"cellHintEnabled\":\n      case \"onCellPrepared\":\n      case \"onRowPrepared\":\n      case \"onCellHoverChanged\":\n        this._invalidate(true, true);\n        args.handled = true;\n    }\n  },\n  init: function () {\n    this._scrollLeft = -1;\n    this._columnsController = this.getController(\"columns\");\n    this._dataController = this.getController(\"data\");\n    this._delayedTemplates = [];\n    this._templateDeferreds = new Set();\n    this._templatesCache = {};\n    this.createAction(\"onCellClick\");\n    this.createAction(\"onRowClick\");\n    this.createAction(\"onCellDblClick\");\n    this.createAction(\"onRowDblClick\");\n    this.createAction(\"onCellHoverChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    this.createAction(\"onCellPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    this.createAction(\"onRowPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\",\n      afterExecute: e => {\n        this._afterRowPrepared(e);\n      }\n    });\n    this._columnsController.columnsChanged.add(this._columnOptionChanged.bind(this));\n    this._dataController && this._dataController.changed.add(this._handleDataChanged.bind(this));\n  },\n  _afterRowPrepared: noop,\n  _handleDataChanged: function () {},\n  callbackNames: function () {\n    return [\"scrollChanged\"];\n  },\n  _updateScrollLeftPosition: function () {\n    var scrollLeft = this._scrollLeft;\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  scrollTo: function (pos) {\n    var $element = this.element();\n    var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n    if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\n      this._scrollLeft = pos.left;\n      $scrollContainer && $scrollContainer.scrollLeft(pos.left);\n    }\n  },\n  _wrapTableInScrollContainer: function ($table) {\n    var $scrollContainer = $(\"<div>\");\n    var useNative = this.option(\"scrolling.useNative\");\n    if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\n      $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS));\n    }\n    eventsEngine.on($scrollContainer, \"scroll\", () => {\n      var scrollLeft = $scrollContainer.scrollLeft();\n      if (scrollLeft !== this._scrollLeft) {\n        this.scrollChanged.fire({\n          left: scrollLeft\n        }, this.name);\n      }\n    });\n    $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\n    this.setAria(\"role\", \"presentation\", $scrollContainer);\n    return $scrollContainer;\n  },\n  needWaitAsyncTemplates: function () {\n    return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\");\n  },\n  waitAsyncTemplates: function () {\n    var forceWaiting = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    var result = new Deferred();\n    var needWaitAsyncTemplates = forceWaiting || this.needWaitAsyncTemplates();\n    if (!needWaitAsyncTemplates) {\n      return result.resolve();\n    }\n    var waitTemplatesRecursion = () => when.apply(this, Array.from(this._templateDeferreds)).done(() => {\n      if (this._templateDeferreds.size > 0) {\n        waitTemplatesRecursion();\n      } else {\n        result.resolve();\n      }\n    }).fail(result.reject);\n    waitTemplatesRecursion();\n    return result.promise();\n  },\n  _updateContent: function ($newTableElement, change, isFixedTableRendering) {\n    return this.waitAsyncTemplates().done(() => {\n      this.setTableElement($newTableElement, isFixedTableRendering);\n      this._wrapTableInScrollContainer($newTableElement, isFixedTableRendering);\n    });\n  },\n  _findContentElement: noop,\n  _getWidths: function ($cellElements) {\n    var result = [];\n    var width;\n    if ($cellElements) {\n      iteratorUtils.each($cellElements, function (index, item) {\n        width = item.offsetWidth;\n        if (item.getBoundingClientRect) {\n          var clientRect = getBoundingRect(item);\n          if (clientRect.width > width - 1) {\n            width = clientRect.width;\n          }\n        }\n        result.push(width);\n      });\n    }\n    return result;\n  },\n  getColumnWidths: function ($tableElement) {\n    var result = [];\n    var $rows;\n    var $cells;\n    (this.option(\"forceApplyBindings\") || noop)();\n    $tableElement = $tableElement || this.getTableElement();\n    if ($tableElement) {\n      $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\n      for (var i = 0; i < $rows.length; i++) {\n        var $row = $rows.eq(i);\n        var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\n        if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\n          $cells = $row.children(\"td\");\n          break;\n        }\n      }\n      result = this._getWidths($cells);\n    }\n    return result;\n  },\n  getVisibleColumnIndex: function (columnIndex, rowIndex) {\n    return columnIndex;\n  },\n  setColumnWidths: function (_ref) {\n    var {\n      widths: widths,\n      $tableElement: $tableElement,\n      columns: columns,\n      fixed: fixed\n    } = _ref;\n    var $cols;\n    var width;\n    var minWidth;\n    var columnIndex;\n    var columnAutoWidth = this.option(\"columnAutoWidth\");\n    $tableElement = $tableElement || this.getTableElement();\n    if ($tableElement && $tableElement.length && widths) {\n      columnIndex = 0;\n      $cols = $tableElement.children(\"colgroup\").children(\"col\");\n      setWidth($cols, \"auto\");\n      columns = columns || this.getColumns(null, $tableElement);\n      for (var i = 0; i < columns.length; i++) {\n        if (columnAutoWidth && !fixed) {\n          width = columns[i].width;\n          if (width && !columns[i].command) {\n            width = columns[i].visibleWidth || width;\n            width = getWidthStyle(width);\n            minWidth = getWidthStyle(columns[i].minWidth || width);\n            var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\n            for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\n              var row = $rows[rowIndex];\n              var cell = void 0;\n              var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\n              if (row.classList.contains(GROUP_ROW_CLASS)) {\n                cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']:not(.\").concat(GROUP_CELL_CLASS, \")\"));\n              } else {\n                cell = row.cells[visibleIndex];\n              }\n              if (cell) {\n                setCellWidth(cell, columns[i], width);\n                cell.style.minWidth = minWidth;\n              }\n            }\n          }\n        }\n        if (columns[i].colspan) {\n          columnIndex += columns[i].colspan;\n          continue;\n        }\n        width = widths[columnIndex];\n        if (\"adaptiveHidden\" === width) {\n          width = HIDDEN_COLUMNS_WIDTH;\n        }\n        if (\"number\" === typeof width) {\n          width = width.toFixed(3) + \"px\";\n        }\n        setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\n        columnIndex++;\n      }\n    }\n  },\n  getCellElements: function (rowIndex) {\n    return this._getCellElementsCore(rowIndex);\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var $row = this._getRowElements().eq(rowIndex);\n    return $row.children();\n  },\n  _getCellElement: function (rowIndex, columnIdentifier) {\n    var $cell;\n    var $cells = this.getCellElements(rowIndex);\n    var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\n    if ($cells.length && columnVisibleIndex >= 0) {\n      $cell = $cells.eq(columnVisibleIndex);\n    }\n    if ($cell && $cell.length) {\n      return $cell;\n    }\n  },\n  _getRowElement: function (rowIndex) {\n    var that = this;\n    var $rowElement = $();\n    var $tableElements = that.getTableElements();\n    iteratorUtils.each($tableElements, function (_, tableElement) {\n      $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex));\n    });\n    if ($rowElement.length) {\n      return $rowElement;\n    }\n  },\n  getCellElement: function (rowIndex, columnIdentifier) {\n    return getPublicElement(this._getCellElement(rowIndex, columnIdentifier));\n  },\n  getRowElement: function (rowIndex) {\n    var $rows = this._getRowElement(rowIndex);\n    var elements = [];\n    if ($rows && !getPublicElement($rows).get) {\n      for (var i = 0; i < $rows.length; i++) {\n        elements.push($rows[i]);\n      }\n    } else {\n      elements = $rows;\n    }\n    return elements;\n  },\n  _getVisibleColumnIndex: function ($cells, rowIndex, columnIdentifier) {\n    if (isString(columnIdentifier)) {\n      var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\n      return this._columnsController.getVisibleIndex(columnIndex);\n    }\n    return columnIdentifier;\n  },\n  getColumnElements: function () {},\n  getColumns: function (rowIndex) {\n    return this._columnsController.getVisibleColumns(rowIndex);\n  },\n  getCell: function (cellPosition, rows, cells) {\n    var $rows = rows || this._getRowElements();\n    var $cells;\n    if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\n      if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\n        cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1;\n      }\n      $cells = cells || this.getCellElements(cellPosition.rowIndex);\n      if ($cells && $cells.length > 0) {\n        return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1);\n      }\n    }\n  },\n  getRowsCount: function () {\n    var tableElement = this.getTableElement();\n    if (tableElement && 1 === tableElement.length) {\n      return tableElement[0].rows.length;\n    }\n    return 0;\n  },\n  _getRowElementsCore: function (tableElement) {\n    tableElement = tableElement || this.getTableElement();\n    if (tableElement) {\n      var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\n      var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\n      return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS);\n    }\n    return $();\n  },\n  _getRowElements: function (tableElement) {\n    return this._getRowElementsCore(tableElement);\n  },\n  getRowIndex: function ($row) {\n    return this._getRowElements().index($row);\n  },\n  getBoundingRect: function () {},\n  getName: function () {},\n  setScrollerSpacing: function (width) {\n    var $element = this.element();\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    $element && $element.css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  },\n  isScrollbarVisible: function (isHorizontal) {\n    var $element = this.element();\n    var $tableElement = this._tableElement;\n    if ($element && $tableElement) {\n      return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0;\n    }\n    return false;\n  },\n  dispose: function () {\n    if (hasWindow()) {\n      getWindow().clearTimeout(this._templateTimeout);\n    }\n  }\n};\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit(columnsViewMembers);","map":{"version":3,"names":["getOuterWidth","getWidth","getOuterHeight","getHeight","$","domAdapter","getWindow","hasWindow","eventsEngine","data","elementData","pointerEvents","name","clickEventName","dblclickEvent","browser","noop","setWidth","getPublicElement","isRenderer","isFunction","isString","isDefined","isNumeric","getBoundingRect","getDefaultAlignment","iteratorUtils","extend","modules","gridCoreUtils","columnStateMixin","when","Deferred","nativeScrolling","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","GROUP_CELL_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","render","options","container","append","content","subscribeToRowEvents","that","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","on","e","clearTimeout","type","target","currentTarget","down","join","createAction","event","closest","length","rowIndex","getRowIndex","rowElement","columns","getColumns","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","width","setCellWidth","cell","column","style","maxWidth","copyAttributes","element","newElement","oldAttributes","attributes","newAttributes","i","nodeName","hasAttribute","removeAttribute","setAttribute","nodeValue","columnsViewMembers","_createScrollableOptions","scrollingOptions","option","useNativeScrolling","direction","bounceEnabled","useKeyboard","useNative","useSimulatedScrollbar","_updateCell","$cell","parameters","rowType","_cellPrepared","_createCell","alignment","createElement","textAlign","headerId","component","setAria","cssClass","addClass","command","addWidgetPrefix","colspan","attr","isBand","visibleWidth","minWidth","_createRow","rowObject","tagName","$element","concat","_isAltRow","row","dataIndex","_createTable","isAppend","_createColGroup","safari","appendTo","mozilla","ctrlKey","preventDefault","args","$row","parent","visibleColumns","_columnsController","getVisibleColumns","rowOptions","columnIndex","index","cellOptions","cells","isHeaderRow","hasClass","isDataRow","isMasterDetailRow","isGroupRow","isFilterRow","isDataRowWithTemplate","cellTemplate","isEditorShown","isEditing","showEditorAlways","isHeaderRowWithTemplate","headerCellTemplate","isGroupCellWithTemplate","groupIndex","groupCellTemplate","shouldShowHint","removeAttr","difference","scrollWidth","clientWidth","text","getOptions","$fieldItemContent","is","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","executeAction","colgroupElement","j","_createCol","col","renderDelayedTemplates","change","delayedTemplates","_delayedTemplates","syncTemplates","filter","template","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","_templateTimeout","isAsync","date","Date","templateParameters","shift","doc","getRootNode","get","needWaitAsyncTemplates","_processTemplate","renderingTemplate","allowRenderToDetachedContainer","model","deferred","resolve","renderedTemplate","nodeType","templateID","getTemplate","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","_disposed","renderAsync","push","_templateDeferreds","add","reject","promise","always","delete","_getBodies","tableElement","children","not","_needWrapRow","$tableElement","_this$_getBodies","hasRowTemplate","rowTemplate","_wrapRowIfNeed","isRefreshing","_tableElement","needWrapRow","$tbody","_appendRow","appendTemplate","_resizeCore","scrollLeft","_scrollLeft","scrollTo","left","_renderCore","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","value","values","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$cells","$newCells","highlightChanges","cellUpdatedClass","forEach","eq","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","cellIndex","findIndex","_renderCellContent","appendChild","renderOptions","_getCellTemplate","done","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","isExpanded","bind","_columnOptionChanged","optionNames","checkChanges","widths","map","setColumnWidths","_requireReady","getCellIndex","getTableElements","getTableElement","setTableElement","optionChanged","callBase","_invalidate","handled","init","getController","_dataController","Set","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","changed","_handleDataChanged","callbackNames","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","scrollChanged","fire","waitAsyncTemplates","forceWaiting","arguments","result","waitTemplatesRecursion","apply","Array","from","size","fail","_updateContent","$newTableElement","isFixedTableRendering","_findContentElement","_getWidths","$cellElements","each","item","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","fixed","$cols","columnAutoWidth","visibleIndex","classList","contains","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getColumnElements","getCell","cellPosition","getRowsCount","_getRowElementsCore","tBodies","find","getName","setScrollerSpacing","rtlEnabled","css","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","dispose","ColumnsView","View","inherit"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nvar columnsViewMembers = {\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\r\n                var isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\r\n                var isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\r\n                var isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\r\n                var shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\r\n                if (shouldShowHint) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            that._templateTimeout = getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getRootNode($(options.container).get(0));\r\n            var needWaitAsyncTemplates = this.needWaitAsyncTemplates();\r\n            if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var that = this;\r\n        var renderingTemplate = that._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                if (that.component._disposed) {\r\n                    return\r\n                }\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = that.component;\r\n            var async = column && (column.renderAsync && isDataRow || that.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                that._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            this._templateDeferreds.add(templateDeferred)\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise().always(() => {\r\n            this._templateDeferreds.delete(templateDeferred)\r\n        })\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _needWrapRow: function($tableElement) {\r\n        var _this$_getBodies;\r\n        var hasRowTemplate = !!this.option().rowTemplate;\r\n        return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".\" + ROW_CLASS).length)\r\n    },\r\n    _wrapRowIfNeed: function($table, $row, isRefreshing) {\r\n        var $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\r\n        var needWrapRow = this._needWrapRow($tableElement);\r\n        if (needWrapRow) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                var cellIndex = options.row.cells.findIndex(cell => cell.columnIndex === cellOptions.columnIndex);\r\n                options.row.cells[cellIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions, options);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options, renderOptions) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        this._scrollLeft = -1;\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._delayedTemplates = [];\r\n        this._templateDeferreds = new Set;\r\n        this._templatesCache = {};\r\n        this.createAction(\"onCellClick\");\r\n        this.createAction(\"onRowClick\");\r\n        this.createAction(\"onCellDblClick\");\r\n        this.createAction(\"onRowDblClick\");\r\n        this.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: e => {\r\n                this._afterRowPrepared(e)\r\n            }\r\n        });\r\n        this._columnsController.columnsChanged.add(this._columnOptionChanged.bind(this));\r\n        this._dataController && this._dataController.changed.add(this._handleDataChanged.bind(this))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    needWaitAsyncTemplates: function() {\r\n        return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\")\r\n    },\r\n    waitAsyncTemplates: function() {\r\n        var forceWaiting = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        var result = new Deferred;\r\n        var needWaitAsyncTemplates = forceWaiting || this.needWaitAsyncTemplates();\r\n        if (!needWaitAsyncTemplates) {\r\n            return result.resolve()\r\n        }\r\n        var waitTemplatesRecursion = () => when.apply(this, Array.from(this._templateDeferreds)).done(() => {\r\n            if (this._templateDeferreds.size > 0) {\r\n                waitTemplatesRecursion()\r\n            } else {\r\n                result.resolve()\r\n            }\r\n        }).fail(result.reject);\r\n        waitTemplatesRecursion();\r\n        return result.promise()\r\n    },\r\n    _updateContent: function($newTableElement, change, isFixedTableRendering) {\r\n        return this.waitAsyncTemplates().done(() => {\r\n            this.setTableElement($newTableElement, isFixedTableRendering);\r\n            this._wrapTableInScrollContainer($newTableElement, isFixedTableRendering)\r\n        })\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']:not(.\").concat(GROUP_CELL_CLASS, \")\"))\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows, cells) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = cells || this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    },\r\n    dispose: function() {\r\n        if (hasWindow()) {\r\n            getWindow().clearTimeout(this._templateTimeout)\r\n        }\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit(columnsViewMembers);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aAAa,EACbC,QAAQ,EACRC,cAAc,EACdC,SAAS,QACN,uBAAuB;AAC9B,OAAOC,CAAC,MAAM,qBAAqB;AACnC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SACIC,SAAS,EACTC,SAAS,QACN,yBAAyB;AAChC,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SACIC,IAAI,IAAIC,WAAW,QAChB,yBAAyB;AAChC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SACIC,IAAI,IAAIC,cAAc,QACnB,oBAAoB;AAC3B,SACID,IAAI,IAAIE,aAAa,QAClB,2BAA2B;AAClC,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SACIC,IAAI,QACD,yBAAyB;AAChC,SACIC,QAAQ,QACL,wBAAwB;AAC/B,SACIC,gBAAgB,QACb,oBAAoB;AAC3B,SACIC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,QACN,uBAAuB;AAC9B,SACIC,eAAe,EACfC,mBAAmB,QAChB,2BAA2B;AAClC,OAAO,KAAKC,aAAa,MAAM,2BAA2B;AAC1D,SACIC,MAAM,QACH,yBAAyB;AAChC,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,SACIC,IAAI,EACJC,QAAQ,QACL,2BAA2B;AAClC,SACIC,eAAe,QACZ,0BAA0B;AACjC,IAAIC,sBAAsB,GAAG,kBAAkB;AAC/C,IAAIC,0BAA0B,GAAG,sBAAsB;AACvD,IAAIC,iBAAiB,GAAG,aAAa;AACrC,IAAIC,aAAa,GAAG,SAAS;AAC7B,IAAIC,WAAW,GAAG,OAAO;AACzB,IAAIC,iBAAiB,GAAG,aAAa;AACrC,IAAIC,mBAAmB,GAAG,eAAe;AACzC,IAAIC,SAAS,GAAG,QAAQ;AACxB,IAAIC,eAAe,GAAG,cAAc;AACpC,IAAIC,gBAAgB,GAAG,eAAe;AACtC,IAAIC,gBAAgB,GAAG,sBAAsB;AAC7C,IAAIC,gBAAgB,GAAG,YAAY;AACnC,IAAIC,eAAe,GAAG,cAAc;AACpC,IAAIC,4BAA4B,GAAG,wBAAwB;AAC3D,IAAIC,oBAAoB,GAAG,UAAU;AACrC,IAAIC,iBAAiB,GAAG,mBAAmB;AAC3C,IAAIC,6BAA6B,GAAG,uBAAuB;AAC3D,IAAIC,qBAAqB,GAAG;EACxBC,MAAM,EAAE,SAAAA,CAASC,OAAO,EAAE;IACtBA,OAAO,CAACC,SAAS,CAACC,MAAM,CAACF,OAAO,CAACG,OAAO,CAAC;EAC7C;AACJ,CAAC;AACD,IAAIC,oBAAoB,GAAG,SAAAA,CAASC,IAAI,EAAEC,MAAM,EAAE;EAC9C,IAAIC,WAAW;EACf,IAAIC,kBAAkB;EACtB,IAAIC,SAAS;EAEb,SAASC,iBAAiBA,CAACC,OAAO,EAAE;IAChC,OAAOC,UAAU,CAAE,YAAW;MAC1BL,WAAW,GAAGC,kBAAkB,GAAG,IAAI;IAC3C,CAAC,EAAGG,OAAO,CAAC;EAChB;EACAxD,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,qBAAqB,EAAE,SAAS,EAAG,UAASQ,CAAC,EAAE;IACnEC,YAAY,CAACN,SAAS,CAAC;IACvB,IAAI,YAAY,KAAKK,CAAC,CAACE,IAAI,EAAE;MACzBT,WAAW,GAAGO,CAAC,CAACG,MAAM;MACtBT,kBAAkB,GAAGM,CAAC,CAACI,aAAa;MACpCT,SAAS,GAAGC,iBAAiB,CAAC,GAAG,CAAC;IACtC,CAAC,MAAM;MACHD,SAAS,GAAGC,iBAAiB,CAAC,CAAC;IACnC;EACJ,CAAE,CAAC;EACHvD,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,CAAC9C,cAAc,EAAEC,aAAa,EAAEH,aAAa,CAAC6D,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,EAAEf,IAAI,CAACgB,YAAY,CAAE,UAASP,CAAC,EAAE;IAC7H,IAAIQ,KAAK,GAAGR,CAAC,CAACQ,KAAK;IACnB,IAAIf,WAAW,EAAE;MACbe,KAAK,CAACL,MAAM,GAAGV,WAAW;MAC1Be,KAAK,CAACJ,aAAa,GAAGV,kBAAkB;IAC5C;IACA,IAAI,CAACzD,CAAC,CAACuE,KAAK,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,GAAG,CAAC,CAACC,MAAM,EAAE;MACtCV,CAAC,CAACW,QAAQ,GAAGpB,IAAI,CAACqB,WAAW,CAACJ,KAAK,CAACJ,aAAa,CAAC;MAClD,IAAIJ,CAAC,CAACW,QAAQ,IAAI,CAAC,EAAE;QACjBX,CAAC,CAACa,UAAU,GAAG9D,gBAAgB,CAACd,CAAC,CAACuE,KAAK,CAACJ,aAAa,CAAC,CAAC;QACvDJ,CAAC,CAACc,OAAO,GAAGvB,IAAI,CAACwB,UAAU,CAAC,CAAC;QAC7B,IAAIP,KAAK,CAACN,IAAI,KAAK1D,aAAa,CAAC6D,IAAI,EAAE;UACnCd,IAAI,CAACyB,eAAe,CAAChB,CAAC,CAAC;QAC3B,CAAC,MAAM,IAAIQ,KAAK,CAACN,IAAI,KAAKxD,cAAc,EAAE;UACtC6C,IAAI,CAAC0B,SAAS,CAACjB,CAAC,CAAC;QACrB,CAAC,MAAM;UACHT,IAAI,CAAC2B,YAAY,CAAClB,CAAC,CAAC;QACxB;MACJ;IACJ;EACJ,CAAE,CAAC,CAAC;AACR,CAAC;AACD,IAAImB,aAAa,GAAG,SAAAA,CAASC,KAAK,EAAE;EAChC,IAAI,MAAM,KAAKA,KAAK,EAAE;IAClB,OAAO,EAAE;EACb;EACA,OAAOhE,SAAS,CAACgE,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAI,GAAGA,KAAK;AAClD,CAAC;AACD,IAAIC,YAAY,GAAG,SAAAA,CAASC,IAAI,EAAEC,MAAM,EAAEH,KAAK,EAAE;EAC7CE,IAAI,CAACE,KAAK,CAACJ,KAAK,GAAGE,IAAI,CAACE,KAAK,CAACC,QAAQ,GAAG,MAAM,KAAKF,MAAM,CAACH,KAAK,GAAG,EAAE,GAAGA,KAAK;AACjF,CAAC;AACD,IAAIM,cAAc,GAAG,SAAAA,CAASC,OAAO,EAAEC,UAAU,EAAE;EAC/C,IAAI,CAACD,OAAO,IAAI,CAACC,UAAU,EAAE;IACzB;EACJ;EACA,IAAIC,aAAa,GAAGF,OAAO,CAACG,UAAU;EACtC,IAAIC,aAAa,GAAGH,UAAU,CAACE,UAAU;EACzC,IAAIE,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,CAACnB,MAAM,EAAEsB,CAAC,EAAE,EAAE;IACvC,IAAIvF,IAAI,GAAGoF,aAAa,CAACG,CAAC,CAAC,CAACC,QAAQ;IACpC,IAAI,CAACL,UAAU,CAACM,YAAY,CAACzF,IAAI,CAAC,EAAE;MAChCkF,OAAO,CAACQ,eAAe,CAAC1F,IAAI,CAAC;IACjC;EACJ;EACA,KAAKuF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACrB,MAAM,EAAEsB,CAAC,EAAE,EAAE;IACvCL,OAAO,CAACS,YAAY,CAACL,aAAa,CAACC,CAAC,CAAC,CAACC,QAAQ,EAAEF,aAAa,CAACC,CAAC,CAAC,CAACK,SAAS,CAAC;EAC/E;AACJ,CAAC;AACD,IAAIC,kBAAkB,GAAG;EACrBC,wBAAwB,EAAE,SAAAA,CAAA,EAAW;IACjC,IAAIC,gBAAgB,GAAG,IAAI,CAACC,MAAM,CAAC,WAAW,CAAC;IAC/C,IAAIC,kBAAkB,GAAG,IAAI,CAACD,MAAM,CAAC,qBAAqB,CAAC;IAC3D,IAAIvD,OAAO,GAAG1B,MAAM,CAAC,CAAC,CAAC,EAAEgF,gBAAgB,EAAE;MACvCG,SAAS,EAAE,MAAM;MACjBC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAI,KAAK,CAAC,KAAKH,kBAAkB,EAAE;MAC/BA,kBAAkB,GAAG,IAAI;IAC7B;IACA,IAAI,MAAM,KAAKA,kBAAkB,EAAE;MAC/B,OAAOxD,OAAO,CAAC4D,SAAS;MACxB,OAAO5D,OAAO,CAAC6D,qBAAqB;IACxC,CAAC,MAAM;MACH7D,OAAO,CAAC4D,SAAS,GAAG,CAAC,CAACJ,kBAAkB;MACxCxD,OAAO,CAAC6D,qBAAqB,GAAG,CAACL,kBAAkB;IACvD;IACA,OAAOxD,OAAO;EAClB,CAAC;EACD8D,WAAW,EAAE,SAAAA,CAASC,KAAK,EAAEC,UAAU,EAAE;IACrC,IAAIA,UAAU,CAACC,OAAO,EAAE;MACpB,IAAI,CAACC,aAAa,CAACH,KAAK,EAAEC,UAAU,CAAC;IACzC;EACJ,CAAC;EACDG,WAAW,EAAE,SAAAA,CAASnE,OAAO,EAAE;IAC3B,IAAIqC,MAAM,GAAGrC,OAAO,CAACqC,MAAM;IAC3B,IAAI+B,SAAS,GAAG/B,MAAM,CAAC+B,SAAS,IAAIhG,mBAAmB,CAAC,IAAI,CAACmF,MAAM,CAAC,YAAY,CAAC,CAAC;IAClF,IAAInB,IAAI,GAAGpF,UAAU,CAACqH,aAAa,CAAC,IAAI,CAAC;IACzCjC,IAAI,CAACE,KAAK,CAACgC,SAAS,GAAGF,SAAS;IAChC,IAAIL,KAAK,GAAGhH,CAAC,CAACqF,IAAI,CAAC;IACnB,IAAI,MAAM,KAAKpC,OAAO,CAACiE,OAAO,IAAI5B,MAAM,CAACkC,QAAQ,IAAI,CAAClC,MAAM,CAACrB,IAAI,EAAE;MAC/D,IAAI,IAAI,CAACwD,SAAS,CAACjB,MAAM,CAAC,mBAAmB,CAAC,EAAE;QAC5C,IAAI,CAACkB,OAAO,CAAC,aAAa,EAAEpC,MAAM,CAACkC,QAAQ,EAAER,KAAK,CAAC;MACvD;IACJ;IACA,IAAI1B,MAAM,CAACqC,QAAQ,EAAE;MACjBX,KAAK,CAACY,QAAQ,CAACtC,MAAM,CAACqC,QAAQ,CAAC;IACnC;IACA,IAAI,QAAQ,KAAKrC,MAAM,CAACuC,OAAO,EAAE;MAC7Bb,KAAK,CAACY,QAAQ,CAACtC,MAAM,CAACqC,QAAQ,CAAC;MAC/BX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAACE,eAAe,CAAC9F,iBAAiB,CAAC,CAAC;IAC3D;IACA,IAAIsD,MAAM,CAACyC,OAAO,GAAG,CAAC,EAAE;MACpBf,KAAK,CAACgB,IAAI,CAAC,SAAS,EAAE1C,MAAM,CAACyC,OAAO,CAAC;IACzC,CAAC,MAAM,IAAI,CAACzC,MAAM,CAAC2C,MAAM,IAAI,MAAM,KAAK3C,MAAM,CAAC4C,YAAY,IAAI,IAAI,CAAC1B,MAAM,CAAC,iBAAiB,CAAC,EAAE;MAC3F,IAAIlB,MAAM,CAACH,KAAK,IAAIG,MAAM,CAAC6C,QAAQ,EAAE;QACjC9C,IAAI,CAACE,KAAK,CAAC4C,QAAQ,GAAGjD,aAAa,CAACI,MAAM,CAAC6C,QAAQ,IAAI7C,MAAM,CAACH,KAAK,CAAC;MACxE;MACA,IAAIG,MAAM,CAACH,KAAK,EAAE;QACdC,YAAY,CAACC,IAAI,EAAEC,MAAM,EAAEJ,aAAa,CAACI,MAAM,CAACH,KAAK,CAAC,CAAC;MAC3D;IACJ;IACA,OAAO6B,KAAK;EAChB,CAAC;EACDoB,UAAU,EAAE,SAAAA,CAASC,SAAS,EAAEC,OAAO,EAAE;IACrCA,OAAO,GAAGA,OAAO,IAAI,IAAI;IACzB,IAAIC,QAAQ,GAAGvI,CAAC,CAAC,GAAG,CAACwI,MAAM,CAACF,OAAO,EAAE,GAAG,CAAC,CAAC,CAACV,QAAQ,CAACvF,SAAS,CAAC;IAC9D,IAAI,CAACqF,OAAO,CAAC,MAAM,EAAE,KAAK,EAAEa,QAAQ,CAAC;IACrC,OAAOA,QAAQ;EACnB,CAAC;EACDE,SAAS,EAAE,SAAAA,CAASC,GAAG,EAAE;IACrB,OAAOA,GAAG,IAAIA,GAAG,CAACC,SAAS,GAAG,CAAC,KAAK,CAAC;EACzC,CAAC;EACDC,YAAY,EAAE,SAAAA,CAAS/D,OAAO,EAAEgE,QAAQ,EAAE;IACtC,IAAIvF,IAAI,GAAG,IAAI;IACf,IAAIC,MAAM,GAAGvD,CAAC,CAAC,SAAS,CAAC,CAAC4H,QAAQ,CAACtE,IAAI,CAACwE,eAAe,CAAC5F,WAAW,CAAC,CAAC,CAAC0F,QAAQ,CAACtE,IAAI,CAACwE,eAAe,CAAC3F,iBAAiB,CAAC,CAAC;IACvH,IAAI0C,OAAO,IAAI,CAACgE,QAAQ,EAAE;MACtBtF,MAAM,CAACJ,MAAM,CAACG,IAAI,CAACwF,eAAe,CAACjE,OAAO,CAAC,CAAC;MAC5C,IAAIlE,OAAO,CAACoI,MAAM,EAAE;QAChBxF,MAAM,CAACJ,MAAM,CAACnD,CAAC,CAAC,SAAS,CAAC,CAACmD,MAAM,CAAC,MAAM,CAAC,CAAC;MAC9C;MACAG,IAAI,CAACoE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAEnE,MAAM,CAAC;IAChD,CAAC,MAAM;MACHD,IAAI,CAACoE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAEnE,MAAM,CAAC;IACxC;IACA,IAAI,CAACmE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE1H,CAAC,CAAC,SAAS,CAAC,CAACgJ,QAAQ,CAACzF,MAAM,CAAC,CAAC;IACnE,IAAIsF,QAAQ,EAAE;MACV,OAAOtF,MAAM;IACjB;IACA,IAAI5C,OAAO,CAACsI,OAAO,EAAE;MACjB7I,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,WAAW,EAAE,IAAI,EAAG,UAASQ,CAAC,EAAE;QACpD,IAAIA,CAAC,CAACmF,OAAO,EAAE;UACXnF,CAAC,CAACoF,cAAc,CAAC,CAAC;QACtB;MACJ,CAAE,CAAC;IACP;IACA,IAAI7F,IAAI,CAACkD,MAAM,CAAC,iBAAiB,CAAC,EAAE;MAChCpG,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,CAACe,YAAY,CAAE,UAAS8E,IAAI,EAAE;QACnF,IAAIrF,CAAC,GAAGqF,IAAI,CAAC7E,KAAK;QAClB,IAAIgE,QAAQ,GAAGvI,CAAC,CAAC+D,CAAC,CAACG,MAAM,CAAC;QAC1B,IAAI8C,KAAK,GAAGhH,CAAC,CAAC+D,CAAC,CAACI,aAAa,CAAC;QAC9B,IAAIkF,IAAI,GAAGrC,KAAK,CAACsC,MAAM,CAAC,CAAC;QACzB,IAAIC,cAAc,GAAGjG,IAAI,CAACkG,kBAAkB,CAACC,iBAAiB,CAAC,CAAC;QAChE,IAAIC,UAAU,GAAGL,IAAI,CAAChJ,IAAI,CAAC,SAAS,CAAC;QACrC,IAAIsJ,WAAW,GAAG3C,KAAK,CAAC4C,KAAK,CAAC,CAAC;QAC/B,IAAIC,WAAW,GAAGH,UAAU,IAAIA,UAAU,CAACI,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAACH,WAAW,CAAC;QACjF,IAAIrE,MAAM,GAAGuE,WAAW,GAAGA,WAAW,CAACvE,MAAM,GAAGiE,cAAc,CAACI,WAAW,CAAC;QAC3E,IAAII,WAAW,GAAGV,IAAI,CAACW,QAAQ,CAAC,eAAe,CAAC;QAChD,IAAIC,SAAS,GAAGZ,IAAI,CAACW,QAAQ,CAAC,aAAa,CAAC;QAC5C,IAAIE,iBAAiB,GAAGb,IAAI,CAACW,QAAQ,CAACxH,gBAAgB,CAAC;QACvD,IAAI2H,UAAU,GAAGd,IAAI,CAACW,QAAQ,CAAC1H,eAAe,CAAC;QAC/C,IAAI8H,WAAW,GAAGf,IAAI,CAACW,QAAQ,CAAC1G,IAAI,CAACwE,eAAe,CAACrF,gBAAgB,CAAC,CAAC;QACvE,IAAI4H,qBAAqB,GAAGJ,SAAS,KAAK,CAAC3E,MAAM,IAAIA,MAAM,CAACgF,YAAY,CAAC;QACzE,IAAIC,aAAa,GAAGN,SAAS,IAAIJ,WAAW,KAAKH,UAAU,CAACc,SAAS,IAAIX,WAAW,CAACW,SAAS,KAAK,IAAI,KAAKlF,MAAM,IAAI,KAAK,CAAC,KAAKA,MAAM,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmF,gBAAgB,CAAC,CAAC;QAC5K,IAAIC,uBAAuB,GAAGX,WAAW,KAAK,CAACzE,MAAM,IAAIA,MAAM,CAACqF,kBAAkB,CAAC;QACnF,IAAIC,uBAAuB,GAAGT,UAAU,KAAK,CAAC7E,MAAM,IAAIA,MAAM,CAACuF,UAAU,IAAIvF,MAAM,CAACwF,iBAAiB,CAAC;QACtG,IAAIC,cAAc,GAAG,CAACb,iBAAiB,IAAI,CAACE,WAAW,IAAI,CAACG,aAAa,IAAI,CAACF,qBAAqB,IAAI,CAACK,uBAAuB,IAAI,CAACE,uBAAuB;QAC3J,IAAIG,cAAc,EAAE;UAChB,IAAIxC,QAAQ,CAAClI,IAAI,CAACwC,iBAAiB,CAAC,EAAE;YAClC0F,QAAQ,CAACyC,UAAU,CAAC,OAAO,CAAC;YAC5BzC,QAAQ,CAAClI,IAAI,CAACwC,iBAAiB,EAAE,KAAK,CAAC;UAC3C;UACA,IAAIoI,UAAU,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC2C,WAAW,GAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC4C,WAAW;UAClE,IAAIF,UAAU,GAAG,CAAC,IAAI,CAAC/J,SAAS,CAACqH,QAAQ,CAACP,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;YACtDO,QAAQ,CAACP,IAAI,CAAC,OAAO,EAAEO,QAAQ,CAAC6C,IAAI,CAAC,CAAC,CAAC;YACvC7C,QAAQ,CAAClI,IAAI,CAACwC,iBAAiB,EAAE,IAAI,CAAC;UAC1C;QACJ;MACJ,CAAE,CAAC,CAAC;IACR;IACA,IAAIwI,UAAU,GAAG,SAAAA,CAAS9G,KAAK,EAAE;MAC7B,IAAIyC,KAAK,GAAGhH,CAAC,CAACuE,KAAK,CAACJ,aAAa,CAAC;MAClC,IAAImH,iBAAiB,GAAGtL,CAAC,CAACuE,KAAK,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,GAAG,GAAG1B,6BAA6B,CAAC;MACpF,IAAIuG,IAAI,GAAGrC,KAAK,CAACsC,MAAM,CAAC,CAAC;MACzB,IAAII,UAAU,GAAGL,IAAI,CAAChJ,IAAI,CAAC,SAAS,CAAC;MACrC,IAAI4C,OAAO,GAAGyG,UAAU,IAAIA,UAAU,CAACI,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAAC9C,KAAK,CAAC4C,KAAK,CAAC,CAAC,CAAC;MAC/E,IAAI,CAAC5C,KAAK,CAACxC,OAAO,CAAC,OAAO,CAAC,CAAC+G,EAAE,CAAChH,KAAK,CAACiH,cAAc,CAAC,EAAE;QAClD;MACJ;MACA,IAAIC,aAAa,GAAGlK,MAAM,CAAC,CAAC,CAAC,EAAE0B,OAAO,EAAE;QACpCyI,WAAW,EAAE5K,gBAAgB,CAACkG,KAAK,CAAC;QACpCzC,KAAK,EAAEA,KAAK;QACZoH,SAAS,EAAEpH,KAAK,CAACN;MACrB,CAAC,CAAC;MACFwH,aAAa,CAAC/G,QAAQ,GAAGpB,IAAI,CAACqB,WAAW,CAAC0E,IAAI,CAAC;MAC/C,IAAIiC,iBAAiB,CAAC7G,MAAM,EAAE;QAC1B,IAAImH,eAAe,GAAGN,iBAAiB,CAACjL,IAAI,CAAC,cAAc,CAAC;QAC5D,IAAIuL,eAAe,CAACtG,MAAM,EAAE;UACxBmG,aAAa,CAACnG,MAAM,GAAGsG,eAAe,CAACtG,MAAM;UAC7CmG,aAAa,CAAC9B,WAAW,GAAGrG,IAAI,CAACkG,kBAAkB,CAACqC,eAAe,CAACJ,aAAa,CAACnG,MAAM,CAACsE,KAAK,CAAC;QACnG;MACJ;MACA,OAAO6B,aAAa;IACxB,CAAC;IACDrL,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,WAAW,EAAE,cAAc,EAAG,UAASQ,CAAC,EAAE;MAC9D,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAC,CAAC;MAC3Bd,OAAO,IAAIK,IAAI,CAACwI,aAAa,CAAC,oBAAoB,EAAE7I,OAAO,CAAC;IAChE,CAAE,CAAC;IACH7C,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE,UAAU,EAAE,cAAc,EAAG,UAASQ,CAAC,EAAE;MAC7D,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAC,CAAC;MAC3Bd,OAAO,IAAIK,IAAI,CAACwI,aAAa,CAAC,oBAAoB,EAAE7I,OAAO,CAAC;IAChE,CAAE,CAAC;IACH7C,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE9C,cAAc,EAAE,cAAc,EAAG,UAASsD,CAAC,EAAE;MACjE,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAC,CAAC;MAC3Bd,OAAO,IAAIK,IAAI,CAACwI,aAAa,CAAC,aAAa,EAAE7I,OAAO,CAAC;IACzD,CAAE,CAAC;IACH7C,YAAY,CAAC0D,EAAE,CAACP,MAAM,EAAE7C,aAAa,EAAE,cAAc,EAAG,UAASqD,CAAC,EAAE;MAChE,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAC,CAAC;MAC3Bd,OAAO,IAAIK,IAAI,CAACwI,aAAa,CAAC,gBAAgB,EAAE7I,OAAO,CAAC;IAC5D,CAAE,CAAC;IACHI,oBAAoB,CAACC,IAAI,EAAEC,MAAM,CAAC;IAClC,OAAOA,MAAM;EACjB,CAAC;EACDwB,eAAe,EAAEnE,IAAI;EACrBoE,SAAS,EAAEpE,IAAI;EACfqE,YAAY,EAAErE,IAAI;EAClBkI,eAAe,EAAE,SAAAA,CAASjE,OAAO,EAAE;IAC/B,IAAIkH,eAAe,GAAG/L,CAAC,CAAC,YAAY,CAAC;IACrC,KAAK,IAAI+F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,OAAO,CAACJ,MAAM,EAAEsB,CAAC,EAAE,EAAE;MACrC,IAAIgC,OAAO,GAAGlD,OAAO,CAACkB,CAAC,CAAC,CAACgC,OAAO,IAAI,CAAC;MACrC,KAAK,IAAIiE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjE,OAAO,EAAEiE,CAAC,EAAE,EAAE;QAC9BD,eAAe,CAAC5I,MAAM,CAAC,IAAI,CAAC8I,UAAU,CAACpH,OAAO,CAACkB,CAAC,CAAC,CAAC,CAAC;MACvD;IACJ;IACA,OAAOgG,eAAe;EAC1B,CAAC;EACDE,UAAU,EAAE,SAAAA,CAAS3G,MAAM,EAAE;IACzB,IAAIH,KAAK,GAAGG,MAAM,CAAC4C,YAAY,IAAI5C,MAAM,CAACH,KAAK;IAC/C,IAAI,gBAAgB,KAAKA,KAAK,EAAE;MAC5BA,KAAK,GAAGvC,oBAAoB;IAChC;IACA,IAAIsJ,GAAG,GAAGlM,CAAC,CAAC,OAAO,CAAC;IACpBa,QAAQ,CAACqL,GAAG,EAAE/G,KAAK,CAAC;IACpB,OAAO+G,GAAG;EACd,CAAC;EACDC,sBAAsB,EAAE,SAAAA,CAASC,MAAM,EAAE;IACrC,IAAIC,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;IAC7C,IAAIC,aAAa,GAAGF,gBAAgB,CAACG,MAAM,CAACC,QAAQ,IAAI,CAACA,QAAQ,CAACC,KAAK,CAAC;IACxE,IAAIC,cAAc,GAAGN,gBAAgB,CAACG,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC;IACxE,IAAI,CAACJ,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACM,2BAA2B,CAACL,aAAa,EAAE,KAAK,EAAEH,MAAM,CAAC;IAC9D,IAAI,CAACS,gCAAgC,CAACF,cAAc,CAAC;EACzD,CAAC;EACDE,gCAAgC,EAAE,SAAAA,CAASC,SAAS,EAAE;IAClD,IAAIxJ,IAAI,GAAG,IAAI;IACf,IAAIwJ,SAAS,CAACrI,MAAM,EAAE;MAClBnB,IAAI,CAACyJ,gBAAgB,GAAG7M,SAAS,CAAC,CAAC,CAAC2D,UAAU,CAAE,YAAW;QACvDP,IAAI,CAACsJ,2BAA2B,CAACE,SAAS,EAAE,IAAI,CAAC;MACrD,CAAE,CAAC;IACP;EACJ,CAAC;EACDF,2BAA2B,EAAE,SAAAA,CAASE,SAAS,EAAEE,OAAO,EAAEZ,MAAM,EAAE;IAC9D,IAAIa,IAAI,GAAG,IAAIC,IAAI,CAAD,CAAC;IACnB,OAAOJ,SAAS,CAACrI,MAAM,EAAE;MACrB,IAAI0I,kBAAkB,GAAGL,SAAS,CAACM,KAAK,CAAC,CAAC;MAC1C,IAAInK,OAAO,GAAGkK,kBAAkB,CAAClK,OAAO;MACxC,IAAIoK,GAAG,GAAGpN,UAAU,CAACqN,WAAW,CAACtN,CAAC,CAACiD,OAAO,CAACC,SAAS,CAAC,CAACqK,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7D,IAAIC,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAAC,CAAC;MAC1D,IAAI,CAACR,OAAO,IAAIhN,CAAC,CAACiD,OAAO,CAACC,SAAS,CAAC,CAACsB,OAAO,CAAC6I,GAAG,CAAC,CAAC5I,MAAM,IAAI+I,sBAAsB,EAAE;QAChF,IAAIpB,MAAM,EAAE;UACRnJ,OAAO,CAACmJ,MAAM,GAAGA,MAAM;QAC3B;QACAe,kBAAkB,CAACV,QAAQ,CAACzJ,MAAM,CAACC,OAAO,CAAC;MAC/C;MACA,IAAI+J,OAAO,IAAI,IAAIE,IAAI,CAAD,CAAC,GAAGD,IAAI,GAAG,EAAE,EAAE;QACjC,IAAI,CAACJ,gCAAgC,CAACC,SAAS,CAAC;QAChD;MACJ;IACJ;IACA,IAAI,CAACA,SAAS,CAACrI,MAAM,IAAI,IAAI,CAAC6H,iBAAiB,CAAC7H,MAAM,EAAE;MACpD,IAAI,CAAC0H,sBAAsB,CAAC,CAAC;IACjC;EACJ,CAAC;EACDsB,gBAAgB,EAAE,SAAAA,CAAShB,QAAQ,EAAE;IACjC,IAAIiB,iBAAiB;IACrB,IAAIjB,QAAQ,IAAIA,QAAQ,CAACzJ,MAAM,IAAI,CAACjC,UAAU,CAAC0L,QAAQ,CAAC,EAAE;MACtDiB,iBAAiB,GAAG;QAChBC,8BAA8B,EAAElB,QAAQ,CAACkB,8BAA8B;QACvE3K,MAAM,EAAE,SAAAA,CAASC,OAAO,EAAE;UACtBwJ,QAAQ,CAACzJ,MAAM,CAACC,OAAO,CAACC,SAAS,EAAED,OAAO,CAAC2K,KAAK,EAAE3K,OAAO,CAACmJ,MAAM,CAAC;UACjEnJ,OAAO,CAAC4K,QAAQ,IAAI5K,OAAO,CAAC4K,QAAQ,CAACC,OAAO,CAAC,CAAC;QAClD;MACJ,CAAC;IACL,CAAC,MAAM,IAAI9M,UAAU,CAACyL,QAAQ,CAAC,EAAE;MAC7BiB,iBAAiB,GAAG;QAChB1K,MAAM,EAAE,SAAAA,CAASC,OAAO,EAAE;UACtB,IAAI8K,gBAAgB,GAAGtB,QAAQ,CAAC3L,gBAAgB,CAACmC,OAAO,CAACC,SAAS,CAAC,EAAED,OAAO,CAAC2K,KAAK,EAAE3K,OAAO,CAACmJ,MAAM,CAAC;UACnG,IAAI2B,gBAAgB,KAAKA,gBAAgB,CAACC,QAAQ,IAAIjN,UAAU,CAACgN,gBAAgB,CAAC,CAAC,EAAE;YACjF9K,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC4K,gBAAgB,CAAC;UAC9C;UACA9K,OAAO,CAAC4K,QAAQ,IAAI5K,OAAO,CAAC4K,QAAQ,CAACC,OAAO,CAAC,CAAC;QAClD;MACJ,CAAC;IACL,CAAC,MAAM;MACH,IAAIG,UAAU,GAAGhN,QAAQ,CAACwL,QAAQ,CAAC,GAAGA,QAAQ,GAAGzM,CAAC,CAACyM,QAAQ,CAAC,CAACzE,IAAI,CAAC,IAAI,CAAC;MACvE,IAAI,CAACiG,UAAU,EAAE;QACbP,iBAAiB,GAAG,IAAI,CAACQ,WAAW,CAACzB,QAAQ,CAAC;MAClD,CAAC,MAAM;QACH,IAAI,CAAC,IAAI,CAAC0B,eAAe,CAACF,UAAU,CAAC,EAAE;UACnC,IAAI,CAACE,eAAe,CAACF,UAAU,CAAC,GAAG,IAAI,CAACC,WAAW,CAACzB,QAAQ,CAAC;QACjE;QACAiB,iBAAiB,GAAG,IAAI,CAACS,eAAe,CAACF,UAAU,CAAC;MACxD;IACJ;IACA,OAAOP,iBAAiB;EAC5B,CAAC;EACDU,cAAc,EAAE,SAAAA,CAASlL,SAAS,EAAEuJ,QAAQ,EAAExJ,OAAO,EAAE0K,8BAA8B,EAAEvB,MAAM,EAAE;IAC3F,IAAI9I,IAAI,GAAG,IAAI;IACf,IAAIoK,iBAAiB,GAAGpK,IAAI,CAACmK,gBAAgB,CAAChB,QAAQ,EAAExJ,OAAO,CAAC;IAChE,IAAIqC,MAAM,GAAGrC,OAAO,CAACqC,MAAM;IAC3B,IAAI2E,SAAS,GAAG,MAAM,KAAKhH,OAAO,CAACiE,OAAO;IAC1C,IAAImH,gBAAgB,GAAG,IAAIzM,QAAQ,CAAD,CAAC;IACnC,IAAI0M,eAAe,GAAG;MAClBpL,SAAS,EAAEA,SAAS;MACpB0K,KAAK,EAAE3K,OAAO;MACd4K,QAAQ,EAAEQ,gBAAgB;MAC1BE,UAAU,EAAEA,CAAA,KAAM;QACd,IAAIjL,IAAI,CAACmE,SAAS,CAAC+G,SAAS,EAAE;UAC1B;QACJ;QACAH,gBAAgB,CAACP,OAAO,CAAC,CAAC;MAC9B;IACJ,CAAC;IACD,IAAIJ,iBAAiB,EAAE;MACnBzK,OAAO,CAACwE,SAAS,GAAGnE,IAAI,CAACmE,SAAS;MAClC,IAAIiF,KAAK,GAAGpH,MAAM,KAAKA,MAAM,CAACmJ,WAAW,IAAIxE,SAAS,IAAI3G,IAAI,CAACkD,MAAM,CAAC,aAAa,CAAC,KAAK,KAAK,KAAKlB,MAAM,CAACmJ,WAAW,KAAKnJ,MAAM,CAACuC,OAAO,IAAIvC,MAAM,CAACmF,gBAAgB,CAAC,IAAIR,SAAS,IAAI,QAAQ,KAAKhH,OAAO,CAACiE,OAAO,CAAC,CAAC;MACnN,IAAI,CAACwG,iBAAiB,CAACC,8BAA8B,IAAIA,8BAA8B,KAAK,CAACjB,KAAK,EAAE;QAChGgB,iBAAiB,CAAC1K,MAAM,CAACsL,eAAe,CAAC;MAC7C,CAAC,MAAM;QACHhL,IAAI,CAACgJ,iBAAiB,CAACoC,IAAI,CAAC;UACxBjC,QAAQ,EAAEiB,iBAAiB;UAC3BzK,OAAO,EAAEqL,eAAe;UACxB5B,KAAK,EAAEA;QACX,CAAC,CAAC;MACN;MACA,IAAI,CAACiC,kBAAkB,CAACC,GAAG,CAACP,gBAAgB,CAAC;IACjD,CAAC,MAAM;MACHA,gBAAgB,CAACQ,MAAM,CAAC,CAAC;IAC7B;IACA,OAAOR,gBAAgB,CAACS,OAAO,CAAC,CAAC,CAACC,MAAM,CAAC,MAAM;MAC3C,IAAI,CAACJ,kBAAkB,CAACK,MAAM,CAACX,gBAAgB,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EACDY,UAAU,EAAE,SAAAA,CAASC,YAAY,EAAE;IAC/B,OAAOlP,CAAC,CAACkP,YAAY,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC,YAAY,CAAC,CAACA,GAAG,CAAC,YAAY,CAAC;EAChF,CAAC;EACDC,YAAY,EAAE,SAAAA,CAASC,aAAa,EAAE;IAClC,IAAIC,gBAAgB;IACpB,IAAIC,cAAc,GAAG,CAAC,CAAC,IAAI,CAAChJ,MAAM,CAAC,CAAC,CAACiJ,WAAW;IAChD,OAAOD,cAAc,IAAI,CAAC,EAAE,IAAI,MAAMD,gBAAgB,GAAG,IAAI,CAACN,UAAU,CAACK,aAAa,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKC,gBAAgB,IAAIA,gBAAgB,CAAC/C,MAAM,CAAC,GAAG,GAAGnK,SAAS,CAAC,CAACoC,MAAM,CAAC;EAC/K,CAAC;EACDiL,cAAc,EAAE,SAAAA,CAASnM,MAAM,EAAE8F,IAAI,EAAEsG,YAAY,EAAE;IACjD,IAAIL,aAAa,GAAGK,YAAY,GAAGpM,MAAM,IAAI,IAAI,CAACqM,aAAa,GAAG,IAAI,CAACA,aAAa,IAAIrM,MAAM;IAC9F,IAAIsM,WAAW,GAAG,IAAI,CAACR,YAAY,CAACC,aAAa,CAAC;IAClD,IAAIO,WAAW,EAAE;MACb,IAAIC,MAAM,GAAG9P,CAAC,CAAC,SAAS,CAAC,CAAC4H,QAAQ,CAACyB,IAAI,CAACrB,IAAI,CAAC,OAAO,CAAC,CAAC;MACtD,IAAI,CAACN,OAAO,CAAC,MAAM,EAAE,cAAc,EAAEoI,MAAM,CAAC;MAC5C,OAAOA,MAAM,CAAC3M,MAAM,CAACkG,IAAI,CAAC;IAC9B;IACA,OAAOA,IAAI;EACf,CAAC;EACD0G,UAAU,EAAE,SAAAA,CAASxM,MAAM,EAAE8F,IAAI,EAAE2G,cAAc,EAAE;IAC/CA,cAAc,GAAGA,cAAc,IAAIjN,qBAAqB;IACxDiN,cAAc,CAAChN,MAAM,CAAC;MAClBI,OAAO,EAAEiG,IAAI;MACbnG,SAAS,EAAEK;IACf,CAAC,CAAC;EACN,CAAC;EACD0M,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAIC,UAAU,GAAG,IAAI,CAACC,WAAW;IACjC,IAAID,UAAU,IAAI,CAAC,EAAE;MACjB,IAAI,CAACC,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,QAAQ,CAAC;QACVC,IAAI,EAAEH;MACV,CAAC,CAAC;IACN;EACJ,CAAC;EACDI,WAAW,EAAE,SAAAA,CAASvM,CAAC,EAAE;IACrB,IAAIwM,KAAK,GAAG,IAAI,CAAC7K,OAAO,CAAC,CAAC,CAAC4D,MAAM,CAAC,CAAC;IACnC,IAAI,CAACiH,KAAK,IAAIA,KAAK,CAACjH,MAAM,CAAC,CAAC,CAAC7E,MAAM,EAAE;MACjC,IAAI,CAAC0H,sBAAsB,CAACpI,CAAC,CAAC;IAClC;EACJ,CAAC;EACDyM,YAAY,EAAE,SAAAA,CAASvN,OAAO,EAAE;IAC5BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvBA,OAAO,CAAC4B,OAAO,GAAG,IAAI,CAAC2E,kBAAkB,CAACC,iBAAiB,CAAC,CAAC;IAC7D,IAAIgH,UAAU,GAAGxN,OAAO,CAACmJ,MAAM,IAAInJ,OAAO,CAACmJ,MAAM,CAACqE,UAAU;IAC5D,IAAIlN,MAAM,GAAG,IAAI,CAACqF,YAAY,CAAC3F,OAAO,CAAC4B,OAAO,EAAE,QAAQ,KAAK4L,UAAU,IAAI,SAAS,KAAKA,UAAU,IAAI,QAAQ,KAAKA,UAAU,CAAC;IAC/H,IAAI,CAACC,WAAW,CAACnN,MAAM,EAAEN,OAAO,CAAC;IACjC,OAAOM,MAAM;EACjB,CAAC;EACDmN,WAAW,EAAE,SAAAA,CAASnN,MAAM,EAAEN,OAAO,EAAE;IACnC,IAAI0N,IAAI,GAAG,IAAI,CAACC,QAAQ,CAAC3N,OAAO,CAACmJ,MAAM,CAAC;IACxC,IAAIyE,aAAa,GAAG5N,OAAO,CAACmJ,MAAM,IAAInJ,OAAO,CAACmJ,MAAM,CAACyE,aAAa,IAAI,EAAE;IACxE,IAAIC,WAAW,GAAG7N,OAAO,CAACmJ,MAAM,IAAInJ,OAAO,CAACmJ,MAAM,CAAC0E,WAAW,IAAI,EAAE;IACpE,KAAK,IAAI/K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4K,IAAI,CAAClM,MAAM,EAAEsB,CAAC,EAAE,EAAE;MAClC,IAAI,CAACgL,UAAU,CAACxN,MAAM,EAAEhC,MAAM,CAAC;QAC3BmH,GAAG,EAAEiI,IAAI,CAAC5K,CAAC,CAAC;QACZ8K,aAAa,EAAEA,aAAa,CAAC9K,CAAC,CAAC;QAC/B0K,UAAU,EAAEK,WAAW,CAAC/K,CAAC;MAC7B,CAAC,EAAE9C,OAAO,CAAC,CAAC;IAChB;EACJ,CAAC;EACD8N,UAAU,EAAE,SAAAA,CAASxN,MAAM,EAAEN,OAAO,EAAE;IAClC,IAAI,CAACA,OAAO,CAAC4N,aAAa,EAAE;MACxB5N,OAAO,CAACyF,GAAG,CAACoB,KAAK,GAAG,EAAE;IAC1B;IACA,IAAIT,IAAI,GAAG,IAAI,CAACjB,UAAU,CAACnF,OAAO,CAACyF,GAAG,CAAC;IACvC,IAAIsI,WAAW,GAAG,IAAI,CAACtB,cAAc,CAACnM,MAAM,EAAE8F,IAAI,CAAC;IACnD,IAAI,QAAQ,KAAKpG,OAAO,CAACwN,UAAU,EAAE;MACjC,IAAI,CAACQ,YAAY,CAAC5H,IAAI,EAAEpG,OAAO,CAAC;IACpC;IACA,IAAI,CAAC8M,UAAU,CAACxM,MAAM,EAAEyN,WAAW,CAAC;IACpC,IAAItH,UAAU,GAAGnI,MAAM,CAAC;MACpBsD,OAAO,EAAE5B,OAAO,CAAC4B;IACrB,CAAC,EAAE5B,OAAO,CAACyF,GAAG,CAAC;IACf,IAAI,CAACwI,eAAe,CAACxH,UAAU,EAAEzG,OAAO,CAACyF,GAAG,CAAC;IAC7C,IAAI,CAACyI,YAAY,CAACH,WAAW,EAAEtH,UAAU,EAAEzG,OAAO,CAACyF,GAAG,CAAC;EAC3D,CAAC;EACD0I,eAAe,EAAE,SAAAA,CAASzH,WAAW,EAAEkH,aAAa,EAAE;IAClD,OAAO,CAACA,aAAa,IAAIA,aAAa,CAACQ,OAAO,CAAC1H,WAAW,CAAC,IAAI,CAAC;EACpE,CAAC;EACDsH,YAAY,EAAE,SAAAA,CAAS5H,IAAI,EAAEpG,OAAO,EAAE;IAClC,IAAI0G,WAAW,GAAG,CAAC;IACnB,IAAIjB,GAAG,GAAGzF,OAAO,CAACyF,GAAG;IACrB,IAAI7D,OAAO,GAAG5B,OAAO,CAAC4B,OAAO;IAC7B,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,OAAO,CAACJ,MAAM,EAAEsB,CAAC,EAAE,EAAE;MACrC,IAAI,IAAI,CAACqL,eAAe,CAACrL,CAAC,EAAE9C,OAAO,CAAC4N,aAAa,CAAC,EAAE;QAChD,IAAI,CAACS,WAAW,CAACjI,IAAI,EAAE9H,MAAM,CAAC;UAC1B+D,MAAM,EAAET,OAAO,CAACkB,CAAC,CAAC;UAClB4D,WAAW,EAAEA,WAAW;UACxB4H,KAAK,EAAE7I,GAAG,CAAC8I,MAAM,IAAI9I,GAAG,CAAC8I,MAAM,CAAC7H,WAAW,CAAC;UAC5C8H,QAAQ,EAAE/I,GAAG,CAACgJ,SAAS,IAAIhJ,GAAG,CAACgJ,SAAS,CAAC/H,WAAW;QACxD,CAAC,EAAE1G,OAAO,CAAC,CAAC;MAChB;MACA,IAAI4B,OAAO,CAACkB,CAAC,CAAC,CAACgC,OAAO,GAAG,CAAC,EAAE;QACxB4B,WAAW,IAAI9E,OAAO,CAACkB,CAAC,CAAC,CAACgC,OAAO;MACrC,CAAC,MAAM;QACH4B,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EACDgI,YAAY,EAAE,SAAAA,CAASC,WAAW,EAAEC,cAAc,EAAEhB,aAAa,EAAE;IAC/D,IAAIiB,MAAM,GAAGF,WAAW,CAACzC,QAAQ,CAAC,CAAC;IACnC,IAAI4C,SAAS,GAAGF,cAAc,CAAC1C,QAAQ,CAAC,CAAC;IACzC,IAAI6C,gBAAgB,GAAG,IAAI,CAACxL,MAAM,CAAC,kBAAkB,CAAC;IACtD,IAAIyL,gBAAgB,GAAG,IAAI,CAACnK,eAAe,CAACnF,4BAA4B,CAAC;IACzEkO,aAAa,CAACqB,OAAO,CAAE,UAASvI,WAAW,EAAEC,KAAK,EAAE;MAChD,IAAI5C,KAAK,GAAG8K,MAAM,CAACK,EAAE,CAACxI,WAAW,CAAC;MAClC,IAAIyI,QAAQ,GAAGL,SAAS,CAACI,EAAE,CAACvI,KAAK,CAAC;MAClC5C,KAAK,CAACqL,WAAW,CAACD,QAAQ,CAAC;MAC3B,IAAIJ,gBAAgB,IAAI,CAACI,QAAQ,CAACpI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;QAC7DoI,QAAQ,CAACxK,QAAQ,CAACqK,gBAAgB,CAAC;MACvC;IACJ,CAAE,CAAC;IACHxM,cAAc,CAACmM,WAAW,CAACrE,GAAG,CAAC,CAAC,CAAC,EAAEsE,cAAc,CAACtE,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7D,CAAC;EACD+E,sBAAsB,EAAE,SAAAA,CAAStL,KAAK,EAAE6C,WAAW,EAAE;IACjD,IAAI,WAAW,KAAKA,WAAW,CAAC3C,OAAO,EAAE;MACrC,IAAI,CAACQ,OAAO,CAAC,MAAM,EAAE,UAAU,EAAEV,KAAK,CAAC;MACvC,IAAIuL,iBAAiB,GAAG,IAAI,CAAC/I,kBAAkB,CAACgJ,oBAAoB,CAAC,CAAC;MACtE,IAAIC,YAAY,GAAG5I,WAAW,CAACF,WAAW,GAAG4I,iBAAiB,GAAG,CAAC;MAClE,IAAI,CAAC7K,OAAO,CAAC,UAAU,EAAE+K,YAAY,EAAEzL,KAAK,CAAC;IACjD;EACJ,CAAC;EACDsK,WAAW,EAAE,SAAAA,CAASjI,IAAI,EAAEpG,OAAO,EAAE;IACjC,IAAI4G,WAAW,GAAG,IAAI,CAAC6I,eAAe,CAACzP,OAAO,CAAC;IAC/C,IAAIA,OAAO,CAAC4N,aAAa,EAAE;MACvB,IAAI5N,OAAO,CAACyF,GAAG,CAACoB,KAAK,EAAE;QACnB,IAAI6I,SAAS,GAAG1P,OAAO,CAACyF,GAAG,CAACoB,KAAK,CAAC8I,SAAS,CAACvN,IAAI,IAAIA,IAAI,CAACsE,WAAW,KAAKE,WAAW,CAACF,WAAW,CAAC;QACjG1G,OAAO,CAACyF,GAAG,CAACoB,KAAK,CAAC6I,SAAS,CAAC,GAAG9I,WAAW;MAC9C;IACJ,CAAC,MAAM;MACH5G,OAAO,CAACyF,GAAG,CAACoB,KAAK,CAAC4E,IAAI,CAAC7E,WAAW,CAAC;IACvC;IACA,IAAI7C,KAAK,GAAG,IAAI,CAACI,WAAW,CAACyC,WAAW,CAAC;IACzC,IAAI,CAACyI,sBAAsB,CAACtL,KAAK,EAAE6C,WAAW,CAAC;IAC/C,IAAI,CAACgJ,kBAAkB,CAAC7L,KAAK,EAAE6C,WAAW,EAAE5G,OAAO,CAAC;IACpDoG,IAAI,CAACkE,GAAG,CAAC,CAAC,CAAC,CAACuF,WAAW,CAAC9L,KAAK,CAACuG,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,OAAOvG,KAAK;EAChB,CAAC;EACD6L,kBAAkB,EAAE,SAAAA,CAAS7L,KAAK,EAAE/D,OAAO,EAAE8P,aAAa,EAAE;IACxD,IAAItG,QAAQ,GAAG,IAAI,CAACuG,gBAAgB,CAAC/P,OAAO,CAAC;IAC7CtB,IAAI,CAAC,CAAC8K,QAAQ,IAAI,IAAI,CAAC2B,cAAc,CAACpH,KAAK,EAAEyF,QAAQ,EAAExJ,OAAO,EAAE,KAAK,CAAC,EAAE8P,aAAa,CAAC3G,MAAM,CAAC,CAAC,CAAC6G,IAAI,CAAC,MAAM;MACtG,IAAI,CAAClM,WAAW,CAACC,KAAK,EAAE/D,OAAO,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EACD+P,gBAAgB,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EAC/BpC,QAAQ,EAAE,SAAAA,CAAA,EAAW;IACjB,OAAO,EAAE;EACb,CAAC;EACD8B,eAAe,EAAE,SAAAA,CAASzP,OAAO,EAAE;IAC/B,IAAI4G,WAAW,GAAG;MACdvE,MAAM,EAAErC,OAAO,CAACqC,MAAM;MACtBqE,WAAW,EAAE1G,OAAO,CAAC0G,WAAW;MAChCzC,OAAO,EAAEjE,OAAO,CAACyF,GAAG,CAACxB,OAAO;MAC5BgM,QAAQ,EAAE,IAAI,CAACzK,SAAS,CAACxF,OAAO,CAACyF,GAAG;IACxC,CAAC;IACD,IAAI,CAACwI,eAAe,CAACrH,WAAW,CAAC;IACjC,OAAOA,WAAW;EACtB,CAAC;EACDqH,eAAe,EAAE,SAAAA,CAASjO,OAAO,EAAEkQ,MAAM,EAAE;IACvC,IAAI,CAAC,IAAI,CAAC3M,MAAM,CAAC,oBAAoB,CAAC,EAAE;MACpC;IACJ;IACA,IAAI4M,QAAQ,GAAG,EAAE;IACjBD,MAAM,GAAGA,MAAM,IAAIlQ,OAAO;IAC1BkQ,MAAM,CAACE,KAAK,GAAGF,MAAM,CAACE,KAAK,IAAI,UAASC,MAAM,EAAEC,eAAe,EAAEC,aAAa,EAAE;MAC5E,IAAI/B,QAAQ,GAAG6B,MAAM,CAACH,MAAM,CAAC9S,IAAI,CAAC;MAClC,IAAIoT,OAAO,GAAG,SAAAA,CAAS/K,GAAG,EAAE;QACxB,IAAIA,GAAG,IAAI8K,aAAa,EAAE;UACtBA,aAAa,CAAC9K,GAAG,CAAC;QACtB;QACA,IAAIgL,QAAQ,GAAGJ,MAAM,CAACH,MAAM,CAAC9S,IAAI,CAAC;QAClC,IAAIsT,IAAI,CAACC,SAAS,CAACnC,QAAQ,CAAC,KAAKkC,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,EAAE;UACvD,IAAIhL,GAAG,EAAE;YACL6K,eAAe,CAACG,QAAQ,CAAC;UAC7B;UACAjC,QAAQ,GAAGiC,QAAQ;QACvB;MACJ,CAAC;MACDN,QAAQ,CAAC1E,IAAI,CAAC+E,OAAO,CAAC;MACtB,OAAO,YAAW;QACd,IAAI7J,KAAK,GAAGwJ,QAAQ,CAAC/B,OAAO,CAACoC,OAAO,CAAC;QACrC,IAAI7J,KAAK,IAAI,CAAC,EAAE;UACZwJ,QAAQ,CAACS,MAAM,CAACjK,KAAK,EAAE,CAAC,CAAC;QAC7B;MACJ,CAAC;IACL,CAAC;IACDuJ,MAAM,CAACW,MAAM,GAAGX,MAAM,CAACW,MAAM,IAAI,UAASpL,GAAG,EAAEqL,OAAO,EAAE;MACpD,IAAIrL,GAAG,EAAE;QACL,IAAI,CAACrI,IAAI,GAAG4C,OAAO,CAAC5C,IAAI,GAAGqI,GAAG,CAACrI,IAAI;QACnC,IAAI,CAACqE,QAAQ,GAAGzB,OAAO,CAACyB,QAAQ,GAAGgE,GAAG,CAAChE,QAAQ;QAC/C,IAAI,CAACiE,SAAS,GAAG1F,OAAO,CAAC0F,SAAS,GAAGD,GAAG,CAACC,SAAS;QAClD,IAAI,CAACqL,UAAU,GAAG/Q,OAAO,CAAC+Q,UAAU,GAAGtL,GAAG,CAACsL,UAAU;QACrD,IAAI/Q,OAAO,CAACyF,GAAG,IAAI,CAACqL,OAAO,EAAE;UACzB9Q,OAAO,CAACyF,GAAG,GAAGA,GAAG;QACrB;MACJ;MACA0K,QAAQ,CAAClB,OAAO,CAAE,UAASuB,OAAO,EAAE;QAChCA,OAAO,CAAC/K,GAAG,CAAC;MAChB,CAAE,CAAC;IACP,CAAC;IACD,IAAIyK,MAAM,KAAKlQ,OAAO,EAAE;MACpBA,OAAO,CAACoQ,KAAK,GAAGF,MAAM,CAACE,KAAK,CAACY,IAAI,CAACd,MAAM,CAAC;IAC7C;IACA,OAAOlQ,OAAO;EAClB,CAAC;EACDkE,aAAa,EAAE,SAAAA,CAAS9B,IAAI,EAAEpC,OAAO,EAAE;IACnCA,OAAO,CAACyI,WAAW,GAAG5K,gBAAgB,CAACd,CAAC,CAACqF,IAAI,CAAC,CAAC;IAC/C,IAAI,CAACyG,aAAa,CAAC,gBAAgB,EAAE7I,OAAO,CAAC;EACjD,CAAC;EACDkO,YAAY,EAAE,SAAAA,CAAS9H,IAAI,EAAEpG,OAAO,EAAE;IAClC3C,WAAW,CAAC+I,IAAI,CAACkE,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,EAAEtK,OAAO,CAAC;IAC5CA,OAAO,CAAC2B,UAAU,GAAG9D,gBAAgB,CAACuI,IAAI,CAAC;IAC3C,IAAI,CAACyC,aAAa,CAAC,eAAe,EAAE7I,OAAO,CAAC;EAChD,CAAC;EACDiR,oBAAoB,EAAE,SAAAA,CAASnQ,CAAC,EAAE;IAC9B,IAAIoQ,WAAW,GAAGpQ,CAAC,CAACoQ,WAAW;IAC/B,IAAI1S,aAAa,CAAC2S,YAAY,CAACD,WAAW,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,EAAE;MACpE,IAAI5K,cAAc,GAAG,IAAI,CAACC,kBAAkB,CAACC,iBAAiB,CAAC,CAAC;MAChE,IAAI4K,MAAM,GAAG/S,aAAa,CAACgT,GAAG,CAAC/K,cAAc,EAAG,UAASjE,MAAM,EAAE;QAC7D,IAAIH,KAAK,GAAGG,MAAM,CAAC4C,YAAY,IAAI5C,MAAM,CAACH,KAAK;QAC/C,OAAOjE,SAAS,CAACiE,KAAK,CAAC,GAAGA,KAAK,GAAG,MAAM;MAC5C,CAAE,CAAC;MACH,IAAI,CAACoP,eAAe,CAAC;QACjBF,MAAM,EAAEA,MAAM;QACdF,WAAW,EAAEA;MACjB,CAAC,CAAC;MACF;IACJ;IACA,IAAI,CAAC,IAAI,CAACK,aAAa,EAAE;MACrB,IAAI,CAACxR,MAAM,CAAC,CAAC;IACjB;EACJ,CAAC;EACDyR,YAAY,EAAE,SAAAA,CAASzN,KAAK,EAAE;IAC1B,IAAI2L,SAAS,GAAG3L,KAAK,CAACvC,MAAM,GAAGuC,KAAK,CAAC,CAAC,CAAC,CAAC2L,SAAS,GAAG,CAAC,CAAC;IACtD,OAAOA,SAAS;EACpB,CAAC;EACD+B,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,OAAO,IAAI,CAAC9E,aAAa,IAAI5P,CAAC,CAAC,CAAC;EACpC,CAAC;EACD2U,eAAe,EAAE,SAAAA,CAAA,EAAW;IACxB,OAAO,IAAI,CAAC/E,aAAa;EAC7B,CAAC;EACDgF,eAAe,EAAE,SAAAA,CAAS1F,YAAY,EAAE;IACpC,IAAI,CAACU,aAAa,GAAGV,YAAY;EACrC,CAAC;EACD2F,aAAa,EAAE,SAAAA,CAASzL,IAAI,EAAE;IAC1B,IAAI,CAAC0L,QAAQ,CAAC1L,IAAI,CAAC;IACnB,QAAQA,IAAI,CAAC5I,IAAI;MACb,KAAK,iBAAiB;MACtB,KAAK,gBAAgB;MACrB,KAAK,eAAe;MACpB,KAAK,oBAAoB;QACrB,IAAI,CAACuU,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;QAC5B3L,IAAI,CAAC4L,OAAO,GAAG,IAAI;IAC3B;EACJ,CAAC;EACDC,IAAI,EAAE,SAAAA,CAAA,EAAW;IACb,IAAI,CAAC9E,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAAC3G,kBAAkB,GAAG,IAAI,CAAC0L,aAAa,CAAC,SAAS,CAAC;IACvD,IAAI,CAACC,eAAe,GAAG,IAAI,CAACD,aAAa,CAAC,MAAM,CAAC;IACjD,IAAI,CAAC5I,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACqC,kBAAkB,GAAG,IAAIyG,GAAG,CAAD,CAAC;IACjC,IAAI,CAACjH,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAAC7J,YAAY,CAAC,aAAa,CAAC;IAChC,IAAI,CAACA,YAAY,CAAC,YAAY,CAAC;IAC/B,IAAI,CAACA,YAAY,CAAC,gBAAgB,CAAC;IACnC,IAAI,CAACA,YAAY,CAAC,eAAe,CAAC;IAClC,IAAI,CAACA,YAAY,CAAC,oBAAoB,EAAE;MACpC+Q,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU;IAC9C,CAAC,CAAC;IACF,IAAI,CAAC/Q,YAAY,CAAC,gBAAgB,EAAE;MAChC+Q,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;MAC3CC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,IAAI,CAAChR,YAAY,CAAC,eAAe,EAAE;MAC/B+Q,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;MAC3CC,QAAQ,EAAE,WAAW;MACrBC,YAAY,EAAExR,CAAC,IAAI;QACf,IAAI,CAACyR,iBAAiB,CAACzR,CAAC,CAAC;MAC7B;IACJ,CAAC,CAAC;IACF,IAAI,CAACyF,kBAAkB,CAACiM,cAAc,CAAC7G,GAAG,CAAC,IAAI,CAACsF,oBAAoB,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;IAChF,IAAI,CAACkB,eAAe,IAAI,IAAI,CAACA,eAAe,CAACO,OAAO,CAAC9G,GAAG,CAAC,IAAI,CAAC+G,kBAAkB,CAAC1B,IAAI,CAAC,IAAI,CAAC,CAAC;EAChG,CAAC;EACDuB,iBAAiB,EAAE5U,IAAI;EACvB+U,kBAAkB,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EACjCC,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,OAAO,CAAC,eAAe,CAAC;EAC5B,CAAC;EACDC,yBAAyB,EAAE,SAAAA,CAAA,EAAW;IAClC,IAAI3F,UAAU,GAAG,IAAI,CAACC,WAAW;IACjC,IAAID,UAAU,IAAI,CAAC,EAAE;MACjB,IAAI,CAACC,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,QAAQ,CAAC;QACVC,IAAI,EAAEH;MACV,CAAC,CAAC;IACN;EACJ,CAAC;EACDE,QAAQ,EAAE,SAAAA,CAAS0F,GAAG,EAAE;IACpB,IAAIvN,QAAQ,GAAG,IAAI,CAAC7C,OAAO,CAAC,CAAC;IAC7B,IAAIqQ,gBAAgB,GAAGxN,QAAQ,IAAIA,QAAQ,CAAC4G,QAAQ,CAAC,GAAG,GAAG,IAAI,CAACrH,eAAe,CAAChG,sBAAsB,CAAC,CAAC,CAACsN,GAAG,CAAC,GAAG,GAAG,IAAI,CAACtH,eAAe,CAAC1F,mBAAmB,CAAC,CAAC;IAC7J,IAAIlB,SAAS,CAAC4U,GAAG,CAAC,IAAI5U,SAAS,CAAC4U,GAAG,CAACzF,IAAI,CAAC,IAAI,IAAI,CAACF,WAAW,KAAK2F,GAAG,CAACzF,IAAI,EAAE;MACxE,IAAI,CAACF,WAAW,GAAG2F,GAAG,CAACzF,IAAI;MAC3B0F,gBAAgB,IAAIA,gBAAgB,CAAC7F,UAAU,CAAC4F,GAAG,CAACzF,IAAI,CAAC;IAC7D;EACJ,CAAC;EACD2F,2BAA2B,EAAE,SAAAA,CAASzS,MAAM,EAAE;IAC1C,IAAIwS,gBAAgB,GAAG/V,CAAC,CAAC,OAAO,CAAC;IACjC,IAAI6G,SAAS,GAAG,IAAI,CAACL,MAAM,CAAC,qBAAqB,CAAC;IAClD,IAAI,KAAK,KAAKK,SAAS,IAAI,MAAM,KAAKA,SAAS,IAAI,CAAChF,eAAe,EAAE;MACjEkU,gBAAgB,CAACnO,QAAQ,CAAC,IAAI,CAACE,eAAe,CAAC/F,0BAA0B,CAAC,CAAC;IAC/E;IACA3B,YAAY,CAAC0D,EAAE,CAACiS,gBAAgB,EAAE,QAAQ,EAAE,MAAM;MAC9C,IAAI7F,UAAU,GAAG6F,gBAAgB,CAAC7F,UAAU,CAAC,CAAC;MAC9C,IAAIA,UAAU,KAAK,IAAI,CAACC,WAAW,EAAE;QACjC,IAAI,CAAC8F,aAAa,CAACC,IAAI,CAAC;UACpB7F,IAAI,EAAEH;QACV,CAAC,EAAE,IAAI,CAAC1P,IAAI,CAAC;MACjB;IACJ,CAAC,CAAC;IACFuV,gBAAgB,CAACnO,QAAQ,CAAC,IAAI,CAACE,eAAe,CAAC7F,aAAa,CAAC,CAAC,CAAC2F,QAAQ,CAAC,IAAI,CAACE,eAAe,CAAChG,sBAAsB,CAAC,CAAC,CAACqB,MAAM,CAACI,MAAM,CAAC,CAACyF,QAAQ,CAAC,IAAI,CAACtD,OAAO,CAAC,CAAC,CAAC;IAC7J,IAAI,CAACgC,OAAO,CAAC,MAAM,EAAE,cAAc,EAAEqO,gBAAgB,CAAC;IACtD,OAAOA,gBAAgB;EAC3B,CAAC;EACDvI,sBAAsB,EAAE,SAAAA,CAAA,EAAW;IAC/B,OAAO,IAAI,CAAChH,MAAM,CAAC,+BAA+B,CAAC,IAAI,KAAK,KAAK,IAAI,CAACA,MAAM,CAAC,aAAa,CAAC;EAC/F,CAAC;EACD2P,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC3B,IAAIC,YAAY,GAAGC,SAAS,CAAC5R,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK4R,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;IACzF,IAAIC,MAAM,GAAG,IAAI1U,QAAQ,CAAD,CAAC;IACzB,IAAI4L,sBAAsB,GAAG4I,YAAY,IAAI,IAAI,CAAC5I,sBAAsB,CAAC,CAAC;IAC1E,IAAI,CAACA,sBAAsB,EAAE;MACzB,OAAO8I,MAAM,CAACxI,OAAO,CAAC,CAAC;IAC3B;IACA,IAAIyI,sBAAsB,GAAGA,CAAA,KAAM5U,IAAI,CAAC6U,KAAK,CAAC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC/H,kBAAkB,CAAC,CAAC,CAACsE,IAAI,CAAC,MAAM;MAChG,IAAI,IAAI,CAACtE,kBAAkB,CAACgI,IAAI,GAAG,CAAC,EAAE;QAClCJ,sBAAsB,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHD,MAAM,CAACxI,OAAO,CAAC,CAAC;MACpB;IACJ,CAAC,CAAC,CAAC8I,IAAI,CAACN,MAAM,CAACzH,MAAM,CAAC;IACtB0H,sBAAsB,CAAC,CAAC;IACxB,OAAOD,MAAM,CAACxH,OAAO,CAAC,CAAC;EAC3B,CAAC;EACD+H,cAAc,EAAE,SAAAA,CAASC,gBAAgB,EAAE1K,MAAM,EAAE2K,qBAAqB,EAAE;IACtE,OAAO,IAAI,CAACZ,kBAAkB,CAAC,CAAC,CAAClD,IAAI,CAAC,MAAM;MACxC,IAAI,CAAC2B,eAAe,CAACkC,gBAAgB,EAAEC,qBAAqB,CAAC;MAC7D,IAAI,CAACf,2BAA2B,CAACc,gBAAgB,EAAEC,qBAAqB,CAAC;IAC7E,CAAC,CAAC;EACN,CAAC;EACDC,mBAAmB,EAAEpW,IAAI;EACzBqW,UAAU,EAAE,SAAAA,CAASC,aAAa,EAAE;IAChC,IAAIZ,MAAM,GAAG,EAAE;IACf,IAAInR,KAAK;IACT,IAAI+R,aAAa,EAAE;MACf5V,aAAa,CAAC6V,IAAI,CAACD,aAAa,EAAG,UAAStN,KAAK,EAAEwN,IAAI,EAAE;QACrDjS,KAAK,GAAGiS,IAAI,CAACC,WAAW;QACxB,IAAID,IAAI,CAACE,qBAAqB,EAAE;UAC5B,IAAIC,UAAU,GAAGnW,eAAe,CAACgW,IAAI,CAAC;UACtC,IAAIG,UAAU,CAACpS,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE;YAC9BA,KAAK,GAAGoS,UAAU,CAACpS,KAAK;UAC5B;QACJ;QACAmR,MAAM,CAAC5H,IAAI,CAACvJ,KAAK,CAAC;MACtB,CAAE,CAAC;IACP;IACA,OAAOmR,MAAM;EACjB,CAAC;EACDkB,eAAe,EAAE,SAAAA,CAASlI,aAAa,EAAE;IACrC,IAAIgH,MAAM,GAAG,EAAE;IACf,IAAImB,KAAK;IACT,IAAI3F,MAAM;IACV,CAAC,IAAI,CAACtL,MAAM,CAAC,oBAAoB,CAAC,IAAI5F,IAAI,EAAE,CAAC;IAC7C0O,aAAa,GAAGA,aAAa,IAAI,IAAI,CAACqF,eAAe,CAAC,CAAC;IACvD,IAAIrF,aAAa,EAAE;MACfmI,KAAK,GAAGnI,aAAa,CAACH,QAAQ,CAAC,uBAAuB,CAAC,CAACA,QAAQ,CAAC,CAAC;MAClE,KAAK,IAAIpJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0R,KAAK,CAAChT,MAAM,EAAEsB,CAAC,EAAE,EAAE;QACnC,IAAIsD,IAAI,GAAGoO,KAAK,CAACtF,EAAE,CAACpM,CAAC,CAAC;QACtB,IAAI2R,YAAY,GAAG,MAAM,KAAKrO,IAAI,CAACkE,GAAG,CAAC,CAAC,CAAC,CAAChI,KAAK,CAACoS,OAAO,IAAI,CAACtO,IAAI,CAACW,QAAQ,CAAC,oBAAoB,CAAC;QAC/F,IAAI,CAACX,IAAI,CAACkC,EAAE,CAAC,GAAG,GAAGjJ,eAAe,CAAC,IAAI,CAAC+G,IAAI,CAACkC,EAAE,CAAC,GAAG,GAAG/I,gBAAgB,CAAC,IAAI,CAAC6G,IAAI,CAACkC,EAAE,CAAC,GAAG,GAAG7I,eAAe,CAAC,IAAIgV,YAAY,EAAE;UACxH5F,MAAM,GAAGzI,IAAI,CAAC8F,QAAQ,CAAC,IAAI,CAAC;UAC5B;QACJ;MACJ;MACAmH,MAAM,GAAG,IAAI,CAACW,UAAU,CAACnF,MAAM,CAAC;IACpC;IACA,OAAOwE,MAAM;EACjB,CAAC;EACDsB,qBAAqB,EAAE,SAAAA,CAASjO,WAAW,EAAEjF,QAAQ,EAAE;IACnD,OAAOiF,WAAW;EACtB,CAAC;EACD4K,eAAe,EAAE,SAAAA,CAASsD,IAAI,EAAE;IAC5B,IAAI;MACAxD,MAAM,EAAEA,MAAM;MACd/E,aAAa,EAAEA,aAAa;MAC5BzK,OAAO,EAAEA,OAAO;MAChBiT,KAAK,EAAEA;IACX,CAAC,GAAGD,IAAI;IACR,IAAIE,KAAK;IACT,IAAI5S,KAAK;IACT,IAAIgD,QAAQ;IACZ,IAAIwB,WAAW;IACf,IAAIqO,eAAe,GAAG,IAAI,CAACxR,MAAM,CAAC,iBAAiB,CAAC;IACpD8I,aAAa,GAAGA,aAAa,IAAI,IAAI,CAACqF,eAAe,CAAC,CAAC;IACvD,IAAIrF,aAAa,IAAIA,aAAa,CAAC7K,MAAM,IAAI4P,MAAM,EAAE;MACjD1K,WAAW,GAAG,CAAC;MACfoO,KAAK,GAAGzI,aAAa,CAACH,QAAQ,CAAC,UAAU,CAAC,CAACA,QAAQ,CAAC,KAAK,CAAC;MAC1DtO,QAAQ,CAACkX,KAAK,EAAE,MAAM,CAAC;MACvBlT,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACC,UAAU,CAAC,IAAI,EAAEwK,aAAa,CAAC;MACzD,KAAK,IAAIvJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,OAAO,CAACJ,MAAM,EAAEsB,CAAC,EAAE,EAAE;QACrC,IAAIiS,eAAe,IAAI,CAACF,KAAK,EAAE;UAC3B3S,KAAK,GAAGN,OAAO,CAACkB,CAAC,CAAC,CAACZ,KAAK;UACxB,IAAIA,KAAK,IAAI,CAACN,OAAO,CAACkB,CAAC,CAAC,CAAC8B,OAAO,EAAE;YAC9B1C,KAAK,GAAGN,OAAO,CAACkB,CAAC,CAAC,CAACmC,YAAY,IAAI/C,KAAK;YACxCA,KAAK,GAAGD,aAAa,CAACC,KAAK,CAAC;YAC5BgD,QAAQ,GAAGjD,aAAa,CAACL,OAAO,CAACkB,CAAC,CAAC,CAACoC,QAAQ,IAAIhD,KAAK,CAAC;YACtD,IAAIsS,KAAK,GAAGA,KAAK,IAAInI,aAAa,CAACH,QAAQ,CAAC,CAAC,CAACA,QAAQ,CAAC,SAAS,CAAC,CAACC,GAAG,CAAC,GAAG,GAAG5M,gBAAgB,CAAC;YAC7F,KAAK,IAAIkC,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAG+S,KAAK,CAAChT,MAAM,EAAEC,QAAQ,EAAE,EAAE;cACxD,IAAIgE,GAAG,GAAG+O,KAAK,CAAC/S,QAAQ,CAAC;cACzB,IAAIW,IAAI,GAAG,KAAK,CAAC;cACjB,IAAI4S,YAAY,GAAG,IAAI,CAACL,qBAAqB,CAAC7R,CAAC,EAAErB,QAAQ,CAAC;cAC1D,IAAIgE,GAAG,CAACwP,SAAS,CAACC,QAAQ,CAAC7V,eAAe,CAAC,EAAE;gBACzC+C,IAAI,GAAGqD,GAAG,CAAC0P,aAAa,CAAC,oBAAoB,CAAC5P,MAAM,CAACyP,YAAY,GAAG,CAAC,EAAE,UAAU,CAAC,CAACzP,MAAM,CAACjG,gBAAgB,EAAE,GAAG,CAAC,CAAC;cACrH,CAAC,MAAM;gBACH8C,IAAI,GAAGqD,GAAG,CAACoB,KAAK,CAACmO,YAAY,CAAC;cAClC;cACA,IAAI5S,IAAI,EAAE;gBACND,YAAY,CAACC,IAAI,EAAER,OAAO,CAACkB,CAAC,CAAC,EAAEZ,KAAK,CAAC;gBACrCE,IAAI,CAACE,KAAK,CAAC4C,QAAQ,GAAGA,QAAQ;cAClC;YACJ;UACJ;QACJ;QACA,IAAItD,OAAO,CAACkB,CAAC,CAAC,CAACgC,OAAO,EAAE;UACpB4B,WAAW,IAAI9E,OAAO,CAACkB,CAAC,CAAC,CAACgC,OAAO;UACjC;QACJ;QACA5C,KAAK,GAAGkP,MAAM,CAAC1K,WAAW,CAAC;QAC3B,IAAI,gBAAgB,KAAKxE,KAAK,EAAE;UAC5BA,KAAK,GAAGvC,oBAAoB;QAChC;QACA,IAAI,QAAQ,KAAK,OAAOuC,KAAK,EAAE;UAC3BA,KAAK,GAAGA,KAAK,CAACkT,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;QACnC;QACAxX,QAAQ,CAACkX,KAAK,CAAC5F,EAAE,CAACxI,WAAW,CAAC,EAAEzI,SAAS,CAACiE,KAAK,CAAC,GAAGA,KAAK,GAAG,MAAM,CAAC;QAClEwE,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EACD2O,eAAe,EAAE,SAAAA,CAAS5T,QAAQ,EAAE;IAChC,OAAO,IAAI,CAAC6T,oBAAoB,CAAC7T,QAAQ,CAAC;EAC9C,CAAC;EACD6T,oBAAoB,EAAE,SAAAA,CAAS7T,QAAQ,EAAE;IACrC,IAAI2E,IAAI,GAAG,IAAI,CAACmP,eAAe,CAAC,CAAC,CAACrG,EAAE,CAACzN,QAAQ,CAAC;IAC9C,OAAO2E,IAAI,CAAC8F,QAAQ,CAAC,CAAC;EAC1B,CAAC;EACDsJ,eAAe,EAAE,SAAAA,CAAS/T,QAAQ,EAAEgU,gBAAgB,EAAE;IAClD,IAAI1R,KAAK;IACT,IAAI8K,MAAM,GAAG,IAAI,CAACwG,eAAe,CAAC5T,QAAQ,CAAC;IAC3C,IAAIiU,kBAAkB,GAAG,IAAI,CAACC,sBAAsB,CAAC9G,MAAM,EAAEpN,QAAQ,EAAEgU,gBAAgB,CAAC;IACxF,IAAI5G,MAAM,CAACrN,MAAM,IAAIkU,kBAAkB,IAAI,CAAC,EAAE;MAC1C3R,KAAK,GAAG8K,MAAM,CAACK,EAAE,CAACwG,kBAAkB,CAAC;IACzC;IACA,IAAI3R,KAAK,IAAIA,KAAK,CAACvC,MAAM,EAAE;MACvB,OAAOuC,KAAK;IAChB;EACJ,CAAC;EACD6R,cAAc,EAAE,SAAAA,CAASnU,QAAQ,EAAE;IAC/B,IAAIpB,IAAI,GAAG,IAAI;IACf,IAAIsO,WAAW,GAAG5R,CAAC,CAAC,CAAC;IACrB,IAAI8Y,cAAc,GAAGxV,IAAI,CAACoR,gBAAgB,CAAC,CAAC;IAC5CpT,aAAa,CAAC6V,IAAI,CAAC2B,cAAc,EAAG,UAASC,CAAC,EAAE7J,YAAY,EAAE;MAC1D0C,WAAW,GAAGA,WAAW,CAAChD,GAAG,CAACtL,IAAI,CAACkV,eAAe,CAACxY,CAAC,CAACkP,YAAY,CAAC,CAAC,CAACiD,EAAE,CAACzN,QAAQ,CAAC,CAAC;IACrF,CAAE,CAAC;IACH,IAAIkN,WAAW,CAACnN,MAAM,EAAE;MACpB,OAAOmN,WAAW;IACtB;EACJ,CAAC;EACDoH,cAAc,EAAE,SAAAA,CAAStU,QAAQ,EAAEgU,gBAAgB,EAAE;IACjD,OAAO5X,gBAAgB,CAAC,IAAI,CAAC2X,eAAe,CAAC/T,QAAQ,EAAEgU,gBAAgB,CAAC,CAAC;EAC7E,CAAC;EACDO,aAAa,EAAE,SAAAA,CAASvU,QAAQ,EAAE;IAC9B,IAAI+S,KAAK,GAAG,IAAI,CAACoB,cAAc,CAACnU,QAAQ,CAAC;IACzC,IAAIwU,QAAQ,GAAG,EAAE;IACjB,IAAIzB,KAAK,IAAI,CAAC3W,gBAAgB,CAAC2W,KAAK,CAAC,CAAClK,GAAG,EAAE;MACvC,KAAK,IAAIxH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0R,KAAK,CAAChT,MAAM,EAAEsB,CAAC,EAAE,EAAE;QACnCmT,QAAQ,CAACxK,IAAI,CAAC+I,KAAK,CAAC1R,CAAC,CAAC,CAAC;MAC3B;IACJ,CAAC,MAAM;MACHmT,QAAQ,GAAGzB,KAAK;IACpB;IACA,OAAOyB,QAAQ;EACnB,CAAC;EACDN,sBAAsB,EAAE,SAAAA,CAAS9G,MAAM,EAAEpN,QAAQ,EAAEgU,gBAAgB,EAAE;IACjE,IAAIzX,QAAQ,CAACyX,gBAAgB,CAAC,EAAE;MAC5B,IAAI/O,WAAW,GAAG,IAAI,CAACH,kBAAkB,CAAC2P,YAAY,CAACT,gBAAgB,EAAE,OAAO,CAAC;MACjF,OAAO,IAAI,CAAClP,kBAAkB,CAACqC,eAAe,CAAClC,WAAW,CAAC;IAC/D;IACA,OAAO+O,gBAAgB;EAC3B,CAAC;EACDU,iBAAiB,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EAChCtU,UAAU,EAAE,SAAAA,CAASJ,QAAQ,EAAE;IAC3B,OAAO,IAAI,CAAC8E,kBAAkB,CAACC,iBAAiB,CAAC/E,QAAQ,CAAC;EAC9D,CAAC;EACD2U,OAAO,EAAE,SAAAA,CAASC,YAAY,EAAE3I,IAAI,EAAE7G,KAAK,EAAE;IACzC,IAAI2N,KAAK,GAAG9G,IAAI,IAAI,IAAI,CAAC6H,eAAe,CAAC,CAAC;IAC1C,IAAI1G,MAAM;IACV,IAAI2F,KAAK,CAAChT,MAAM,GAAG,CAAC,IAAI6U,YAAY,CAAC5U,QAAQ,IAAI,CAAC,EAAE;MAChD,IAAI,SAAS,KAAK,IAAI,CAAC8B,MAAM,CAAC,gBAAgB,CAAC,IAAI,SAAS,KAAK,IAAI,CAACA,MAAM,CAAC,4BAA4B,CAAC,EAAE;QACxG8S,YAAY,CAAC5U,QAAQ,GAAG4U,YAAY,CAAC5U,QAAQ,GAAG+S,KAAK,CAAChT,MAAM,GAAG6U,YAAY,CAAC5U,QAAQ,GAAG+S,KAAK,CAAChT,MAAM,GAAG,CAAC;MAC3G;MACAqN,MAAM,GAAGhI,KAAK,IAAI,IAAI,CAACwO,eAAe,CAACgB,YAAY,CAAC5U,QAAQ,CAAC;MAC7D,IAAIoN,MAAM,IAAIA,MAAM,CAACrN,MAAM,GAAG,CAAC,EAAE;QAC7B,OAAOqN,MAAM,CAACK,EAAE,CAACL,MAAM,CAACrN,MAAM,GAAG6U,YAAY,CAAC3P,WAAW,GAAG2P,YAAY,CAAC3P,WAAW,GAAGmI,MAAM,CAACrN,MAAM,GAAG,CAAC,CAAC;MAC7G;IACJ;EACJ,CAAC;EACD8U,YAAY,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAIrK,YAAY,GAAG,IAAI,CAACyF,eAAe,CAAC,CAAC;IACzC,IAAIzF,YAAY,IAAI,CAAC,KAAKA,YAAY,CAACzK,MAAM,EAAE;MAC3C,OAAOyK,YAAY,CAAC,CAAC,CAAC,CAACyB,IAAI,CAAClM,MAAM;IACtC;IACA,OAAO,CAAC;EACZ,CAAC;EACD+U,mBAAmB,EAAE,SAAAA,CAAStK,YAAY,EAAE;IACxCA,YAAY,GAAGA,YAAY,IAAI,IAAI,CAACyF,eAAe,CAAC,CAAC;IACrD,IAAIzF,YAAY,EAAE;MACd,IAAIM,cAAc,GAAG,IAAI,CAAChJ,MAAM,CAAC,CAAC,CAACiJ,WAAW,IAAI,IAAI,CAACjJ,MAAM,CAAC,iBAAiB,CAAC;MAChF,IAAIiT,OAAO,GAAGjK,cAAc,IAAIN,YAAY,CAACwK,IAAI,CAAC,UAAU,GAAGrX,SAAS,CAAC;MACzE,OAAOoX,OAAO,IAAIA,OAAO,CAAChV,MAAM,GAAGgV,OAAO,GAAGvK,YAAY,CAACwK,IAAI,CAAC,aAAa,GAAGrX,SAAS,GAAG,OAAO,GAAGA,SAAS,CAAC;IACnH;IACA,OAAOrC,CAAC,CAAC,CAAC;EACd,CAAC;EACDwY,eAAe,EAAE,SAAAA,CAAStJ,YAAY,EAAE;IACpC,OAAO,IAAI,CAACsK,mBAAmB,CAACtK,YAAY,CAAC;EACjD,CAAC;EACDvK,WAAW,EAAE,SAAAA,CAAS0E,IAAI,EAAE;IACxB,OAAO,IAAI,CAACmP,eAAe,CAAC,CAAC,CAAC5O,KAAK,CAACP,IAAI,CAAC;EAC7C,CAAC;EACDjI,eAAe,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EAC9BuY,OAAO,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EACtBC,kBAAkB,EAAE,SAAAA,CAASzU,KAAK,EAAE;IAChC,IAAIoD,QAAQ,GAAG,IAAI,CAAC7C,OAAO,CAAC,CAAC;IAC7B,IAAImU,UAAU,GAAG,IAAI,CAACrT,MAAM,CAAC,YAAY,CAAC;IAC1C+B,QAAQ,IAAIA,QAAQ,CAACuR,GAAG,CAAC;MACrBC,WAAW,EAAEF,UAAU,GAAG1U,KAAK,GAAG,EAAE;MACpC6U,YAAY,EAAE,CAACH,UAAU,GAAG1U,KAAK,GAAG;IACxC,CAAC,CAAC;EACN,CAAC;EACD8U,kBAAkB,EAAE,SAAAA,CAASC,YAAY,EAAE;IACvC,IAAI3R,QAAQ,GAAG,IAAI,CAAC7C,OAAO,CAAC,CAAC;IAC7B,IAAI4J,aAAa,GAAG,IAAI,CAACM,aAAa;IACtC,IAAIrH,QAAQ,IAAI+G,aAAa,EAAE;MAC3B,OAAO4K,YAAY,GAAGta,aAAa,CAAC0P,aAAa,CAAC,GAAGzP,QAAQ,CAAC0I,QAAQ,CAAC,GAAG,CAAC,GAAGzI,cAAc,CAACwP,aAAa,CAAC,GAAGvP,SAAS,CAACwI,QAAQ,CAAC,GAAG,CAAC;IACzI;IACA,OAAO,KAAK;EAChB,CAAC;EACD4R,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAIha,SAAS,CAAC,CAAC,EAAE;MACbD,SAAS,CAAC,CAAC,CAAC8D,YAAY,CAAC,IAAI,CAAC+I,gBAAgB,CAAC;IACnD;EACJ;AACJ,CAAC;AACD,OAAO,IAAIqN,WAAW,GAAG5Y,OAAO,CAAC6Y,IAAI,CAACC,OAAO,CAAC5Y,gBAAgB,CAAC,CAAC4Y,OAAO,CAACjU,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}