{"ast":null,"code":"const gridOptions = {\n  columnDefs: [\n  // group cell renderer needed for expand / collapse icons\n  {\n    field: 'name',\n    cellRenderer: 'agGroupCellRenderer'\n  }, {\n    field: 'account'\n  }, {\n    field: 'calls'\n  }, {\n    field: 'minutes',\n    valueFormatter: \"x.toLocaleString() + 'm'\"\n  }],\n  defaultColDef: {\n    flex: 1\n  },\n  masterDetail: true,\n  detailCellRendererParams: {\n    detailGridOptions: {\n      columnDefs: [{\n        field: 'callId'\n      }, {\n        field: 'direction'\n      }, {\n        field: 'number',\n        minWidth: 150\n      }, {\n        field: 'duration',\n        valueFormatter: \"x.toLocaleString() + 's'\"\n      }, {\n        field: 'switchCode',\n        minWidth: 150\n      }],\n      defaultColDef: {\n        flex: 1\n      }\n    },\n    getDetailRowData: params => {\n      params.successCallback(params.data.callRecords);\n    }\n  },\n  onFirstDataRendered: onFirstDataRendered\n};\nfunction onFirstDataRendered(params) {\n  // arbitrarily expand a row for presentational purposes\n  setTimeout(function () {\n    params.api.getDisplayedRowAtIndex(1).setExpanded(true);\n  }, 0);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid');\n  new agGrid.Grid(gridDiv, gridOptions);\n  fetch('https://www.ag-grid.com/example-assets/master-detail-data.json').then(response => response.json()).then(data => {\n    gridOptions.api.setRowData(data);\n  });\n});","map":{"version":3,"names":["gridOptions","columnDefs","field","cellRenderer","valueFormatter","defaultColDef","flex","masterDetail","detailCellRendererParams","detailGridOptions","minWidth","getDetailRowData","params","successCallback","data","callRecords","onFirstDataRendered","setTimeout","api","getDisplayedRowAtIndex","setExpanded","document","addEventListener","gridDiv","querySelector","agGrid","Grid","fetch","then","response","json","setRowData"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/src/pages/ManageQuestions.js"],"sourcesContent":["const gridOptions = {\r\n    columnDefs: [\r\n        // group cell renderer needed for expand / collapse icons\r\n        { field: 'name', cellRenderer: 'agGroupCellRenderer' },\r\n        { field: 'account' },\r\n        { field: 'calls' },\r\n        { field: 'minutes', valueFormatter: \"x.toLocaleString() + 'm'\" },\r\n    ],\r\n    defaultColDef: {\r\n        flex: 1,\r\n    },\r\n    masterDetail: true,\r\n    detailCellRendererParams: {\r\n        detailGridOptions: {\r\n            columnDefs: [\r\n                { field: 'callId' },\r\n                { field: 'direction' },\r\n                { field: 'number', minWidth: 150 },\r\n                { field: 'duration', valueFormatter: \"x.toLocaleString() + 's'\" },\r\n                { field: 'switchCode', minWidth: 150 },\r\n            ],\r\n            defaultColDef: {\r\n                flex: 1,\r\n            },\r\n        },\r\n        getDetailRowData: (params) => {\r\n            params.successCallback(params.data.callRecords);\r\n        },\r\n    },\r\n    onFirstDataRendered: onFirstDataRendered,\r\n};\r\n\r\nfunction onFirstDataRendered(params) {\r\n    // arbitrarily expand a row for presentational purposes\r\n    setTimeout(function () {\r\n        params.api.getDisplayedRowAtIndex(1).setExpanded(true);\r\n    }, 0);\r\n}\r\n\r\n// setup the grid after the page has finished loading\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    var gridDiv = document.querySelector('#myGrid');\r\n    new agGrid.Grid(gridDiv, gridOptions);\r\n\r\n    fetch('https://www.ag-grid.com/example-assets/master-detail-data.json')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            gridOptions.api.setRowData(data);\r\n        });\r\n});"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,UAAU,EAAE;EACR;EACA;IAAEC,KAAK,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAsB,CAAC,EACtD;IAAED,KAAK,EAAE;EAAU,CAAC,EACpB;IAAEA,KAAK,EAAE;EAAQ,CAAC,EAClB;IAAEA,KAAK,EAAE,SAAS;IAAEE,cAAc,EAAE;EAA2B,CAAC,CACnE;EACDC,aAAa,EAAE;IACXC,IAAI,EAAE;EACV,CAAC;EACDC,YAAY,EAAE,IAAI;EAClBC,wBAAwB,EAAE;IACtBC,iBAAiB,EAAE;MACfR,UAAU,EAAE,CACR;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnB;QAAEA,KAAK,EAAE;MAAY,CAAC,EACtB;QAAEA,KAAK,EAAE,QAAQ;QAAEQ,QAAQ,EAAE;MAAI,CAAC,EAClC;QAAER,KAAK,EAAE,UAAU;QAAEE,cAAc,EAAE;MAA2B,CAAC,EACjE;QAAEF,KAAK,EAAE,YAAY;QAAEQ,QAAQ,EAAE;MAAI,CAAC,CACzC;MACDL,aAAa,EAAE;QACXC,IAAI,EAAE;MACV;IACJ,CAAC;IACDK,gBAAgB,EAAGC,MAAM,IAAK;MAC1BA,MAAM,CAACC,eAAe,CAACD,MAAM,CAACE,IAAI,CAACC,WAAW,CAAC;IACnD;EACJ,CAAC;EACDC,mBAAmB,EAAEA;AACzB,CAAC;AAED,SAASA,mBAAmBA,CAACJ,MAAM,EAAE;EACjC;EACAK,UAAU,CAAC,YAAY;IACnBL,MAAM,CAACM,GAAG,CAACC,sBAAsB,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAI,CAAC;EAC1D,CAAC,EAAE,CAAC,CAAC;AACT;;AAEA;AACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACtD,IAAIC,OAAO,GAAGF,QAAQ,CAACG,aAAa,CAAC,SAAS,CAAC;EAC/C,IAAIC,MAAM,CAACC,IAAI,CAACH,OAAO,EAAEvB,WAAW,CAAC;EAErC2B,KAAK,CAAC,gEAAgE,CAAC,CAClEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEd,IAAI,IAAK;IACZd,WAAW,CAACkB,GAAG,CAACa,UAAU,CAACjB,IAAI,CAAC;EACpC,CAAC,CAAC;AACV,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}