{"ast":null,"code":"const NUMBER_STYLES = new Set(['animationIterationCount', 'borderImageOutset', 'borderImageSlice', 'border-imageWidth', 'boxFlex', 'boxFlexGroup', 'boxOrdinalGroup', 'columnCount', 'fillOpacity', 'flex', 'flexGrow', 'flexNegative', 'flexOrder', 'flexPositive', 'flexShrink', 'floodOpacity', 'fontWeight', 'gridColumn', 'gridRow', 'lineClamp', 'lineHeight', 'opacity', 'order', 'orphans', 'stopOpacity', 'strokeDasharray', 'strokeDashoffset', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth', 'tabSize', 'widows', 'zIndex', 'zoom']);\nconst isNumeric = value => {\n  if (typeof value === 'number') return true;\n  return !Number.isNaN(Number(value));\n};\nconst getNumberStyleValue = (style, value) => NUMBER_STYLES.has(style) ? value : `${value}px`;\nconst uppercasePattern = /[A-Z]/g;\nconst kebabCase = str => str.replace(uppercasePattern, '-$&').toLowerCase();\nexport function normalizeStyles(styles) {\n  if (!(styles instanceof Object)) {\n    return undefined;\n  }\n  return Object.entries(styles).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n    acc[kebabCase(key)] = isNumeric(value) ? getNumberStyleValue(key, value) : value;\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["NUMBER_STYLES","Set","isNumeric","value","Number","isNaN","getNumberStyleValue","style","has","uppercasePattern","kebabCase","str","replace","toLowerCase","normalizeStyles","styles","Object","undefined","entries","reduce","acc","_ref","key"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/@devextreme/runtime/esm/inferno/normalize_styles.js"],"sourcesContent":["const NUMBER_STYLES = new Set([\n    'animationIterationCount',\n    'borderImageOutset',\n    'borderImageSlice',\n    'border-imageWidth',\n    'boxFlex',\n    'boxFlexGroup',\n    'boxOrdinalGroup',\n    'columnCount',\n    'fillOpacity',\n    'flex',\n    'flexGrow',\n    'flexNegative',\n    'flexOrder',\n    'flexPositive',\n    'flexShrink',\n    'floodOpacity',\n    'fontWeight',\n    'gridColumn',\n    'gridRow',\n    'lineClamp',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'stopOpacity',\n    'strokeDasharray',\n    'strokeDashoffset',\n    'strokeMiterlimit',\n    'strokeOpacity',\n    'strokeWidth',\n    'tabSize',\n    'widows',\n    'zIndex',\n    'zoom',\n]);\nconst isNumeric = (value) => {\n    if (typeof value === 'number')\n        return true;\n    return !Number.isNaN(Number(value));\n};\nconst getNumberStyleValue = (style, value) => (NUMBER_STYLES.has(style) ? value : `${value}px`);\nconst uppercasePattern = /[A-Z]/g;\nconst kebabCase = (str) => str.replace(uppercasePattern, '-$&').toLowerCase();\nexport function normalizeStyles(styles) {\n    if (!(styles instanceof Object)) {\n        return undefined;\n    }\n    return Object\n        .entries(styles)\n        .reduce((acc, [key, value]) => {\n        acc[kebabCase(key)] = isNumeric(value)\n            ? getNumberStyleValue(key, value)\n            : value;\n        return acc;\n    }, {});\n}\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,IAAIC,GAAG,CAAC,CAC1B,yBAAyB,EACzB,mBAAmB,EACnB,kBAAkB,EAClB,mBAAmB,EACnB,SAAS,EACT,cAAc,EACd,iBAAiB,EACjB,aAAa,EACb,aAAa,EACb,MAAM,EACN,UAAU,EACV,cAAc,EACd,WAAW,EACX,cAAc,EACd,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,SAAS,EACT,WAAW,EACX,YAAY,EACZ,SAAS,EACT,OAAO,EACP,SAAS,EACT,aAAa,EACb,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,aAAa,EACb,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,CACT,CAAC;AACF,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,OAAO,IAAI;EACf,OAAO,CAACC,MAAM,CAACC,KAAK,CAACD,MAAM,CAACD,KAAK,CAAC,CAAC;AACvC,CAAC;AACD,MAAMG,mBAAmB,GAAGA,CAACC,KAAK,EAAEJ,KAAK,KAAMH,aAAa,CAACQ,GAAG,CAACD,KAAK,CAAC,GAAGJ,KAAK,GAAI,GAAEA,KAAM,IAAI;AAC/F,MAAMM,gBAAgB,GAAG,QAAQ;AACjC,MAAMC,SAAS,GAAIC,GAAG,IAAKA,GAAG,CAACC,OAAO,CAACH,gBAAgB,EAAE,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC;AAC7E,OAAO,SAASC,eAAeA,CAACC,MAAM,EAAE;EACpC,IAAI,EAAEA,MAAM,YAAYC,MAAM,CAAC,EAAE;IAC7B,OAAOC,SAAS;EACpB;EACA,OAAOD,MAAM,CACRE,OAAO,CAACH,MAAM,CAAC,CACfI,MAAM,CAAC,CAACC,GAAG,EAAAC,IAAA,KAAmB;IAAA,IAAjB,CAACC,GAAG,EAAEnB,KAAK,CAAC,GAAAkB,IAAA;IAC1BD,GAAG,CAACV,SAAS,CAACY,GAAG,CAAC,CAAC,GAAGpB,SAAS,CAACC,KAAK,CAAC,GAChCG,mBAAmB,CAACgB,GAAG,EAAEnB,KAAK,CAAC,GAC/BA,KAAK;IACX,OAAOiB,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}