{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/custom_store.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport { keysEqual, XHR_ERROR_UNLOAD, errorMessageFromXhr as errorMessageFromXhrUtility } from \"./utils\";\nimport { applyBatch } from \"./array_utils\";\nimport { isFunction } from \"../core/utils/type\";\nimport config from \"../core/config\";\nimport { errors } from \"./errors\";\nimport Store from \"./abstract_store\";\nimport arrayQuery from \"./array_query\";\nimport storeHelper from \"./store_helper\";\nimport { Deferred, when, fromPromise } from \"../core/utils/deferred\";\nvar TOTAL_COUNT = \"totalCount\";\nvar LOAD = \"load\";\nvar BY_KEY = \"byKey\";\nvar INSERT = \"insert\";\nvar UPDATE = \"update\";\nvar REMOVE = \"remove\";\nfunction isPromise(obj) {\n  return obj && isFunction(obj.then);\n}\nfunction trivialPromise(value) {\n  return new Deferred().resolve(value).promise();\n}\nfunction ensureRequiredFuncOption(name, obj) {\n  if (!isFunction(obj)) {\n    throw errors.Error(\"E4011\", name);\n  }\n}\nfunction throwInvalidUserFuncResult(name) {\n  throw errors.Error(\"E4012\", name);\n}\nfunction createUserFuncFailureHandler(pendingDeferred) {\n  function errorMessageFromXhr(promiseArguments) {\n    var xhr = promiseArguments[0];\n    var textStatus = promiseArguments[1];\n    if (!xhr || !xhr.getResponseHeader) {\n      return null;\n    }\n    return errorMessageFromXhrUtility(xhr, textStatus);\n  }\n  return function (arg) {\n    var error;\n    if (arg instanceof Error) {\n      error = arg;\n    } else {\n      error = new Error(errorMessageFromXhr(arguments) || arg && String(arg) || \"Unknown error\");\n    }\n    if (error.message !== XHR_ERROR_UNLOAD) {\n      pendingDeferred.reject(error);\n    }\n  };\n}\nfunction invokeUserLoad(store, options) {\n  var userFunc = store._loadFunc;\n  var userResult;\n  ensureRequiredFuncOption(LOAD, userFunc);\n  userResult = userFunc.apply(store, [options]);\n  if (Array.isArray(userResult)) {\n    userResult = trivialPromise(userResult);\n  } else if (null === userResult || void 0 === userResult) {\n    userResult = trivialPromise([]);\n  } else if (!isPromise(userResult)) {\n    throwInvalidUserFuncResult(LOAD);\n  }\n  return fromPromise(userResult);\n}\nfunction invokeUserTotalCountFunc(store, options) {\n  var userFunc = store._totalCountFunc;\n  var userResult;\n  if (!isFunction(userFunc)) {\n    throw errors.Error(\"E4021\");\n  }\n  userResult = userFunc.apply(store, [options]);\n  if (!isPromise(userResult)) {\n    userResult = Number(userResult);\n    if (!isFinite(userResult)) {\n      throwInvalidUserFuncResult(TOTAL_COUNT);\n    }\n    userResult = trivialPromise(userResult);\n  }\n  return fromPromise(userResult);\n}\nfunction invokeUserByKeyFunc(store, key, extraOptions) {\n  var userFunc = store._byKeyFunc;\n  var userResult;\n  ensureRequiredFuncOption(BY_KEY, userFunc);\n  userResult = userFunc.apply(store, [key, extraOptions]);\n  if (!isPromise(userResult)) {\n    userResult = trivialPromise(userResult);\n  }\n  return fromPromise(userResult);\n}\nfunction runRawLoad(pendingDeferred, store, userFuncOptions, continuation) {\n  if (store.__rawData) {\n    continuation(store.__rawData);\n  } else {\n    var loadPromise = store.__rawDataPromise || invokeUserLoad(store, userFuncOptions);\n    if (store._cacheRawData) {\n      store.__rawDataPromise = loadPromise;\n    }\n    loadPromise.always(function () {\n      delete store.__rawDataPromise;\n    }).done(function (rawData) {\n      if (store._cacheRawData) {\n        store.__rawData = rawData;\n      }\n      continuation(rawData);\n    }).fail(createUserFuncFailureHandler(pendingDeferred));\n  }\n}\nfunction runRawLoadWithQuery(pendingDeferred, store, options, countOnly) {\n  options = options || {};\n  var userFuncOptions = {};\n  if (\"userData\" in options) {\n    userFuncOptions.userData = options.userData;\n  }\n  runRawLoad(pendingDeferred, store, userFuncOptions, function (rawData) {\n    var rawDataQuery = arrayQuery(rawData, {\n      errorHandler: store._errorHandler\n    });\n    var itemsQuery;\n    var totalCountQuery;\n    var waitList = [];\n    var items;\n    var totalCount;\n    if (!countOnly) {\n      itemsQuery = storeHelper.queryByOptions(rawDataQuery, options);\n      if (itemsQuery === rawDataQuery) {\n        items = rawData.slice(0);\n      } else {\n        waitList.push(itemsQuery.enumerate().done(function (asyncResult) {\n          items = asyncResult;\n        }));\n      }\n    }\n    if (options.requireTotalCount || countOnly) {\n      totalCountQuery = storeHelper.queryByOptions(rawDataQuery, options, true);\n      if (totalCountQuery === rawDataQuery) {\n        totalCount = rawData.length;\n      } else {\n        waitList.push(totalCountQuery.count().done(function (asyncResult) {\n          totalCount = asyncResult;\n        }));\n      }\n    }\n    when.apply($, waitList).done(function () {\n      if (countOnly) {\n        pendingDeferred.resolve(totalCount);\n      } else if (options.requireTotalCount) {\n        pendingDeferred.resolve(items, {\n          totalCount: totalCount\n        });\n      } else {\n        pendingDeferred.resolve(items);\n      }\n    }).fail(function (x) {\n      pendingDeferred.reject(x);\n    });\n  });\n}\nfunction runRawLoadWithKey(pendingDeferred, store, key) {\n  runRawLoad(pendingDeferred, store, {}, function (rawData) {\n    var keyExpr = store.key();\n    var item;\n    for (var i = 0, len = rawData.length; i < len; i++) {\n      item = rawData[i];\n      if (keysEqual(keyExpr, store.keyOf(rawData[i]), key)) {\n        pendingDeferred.resolve(item);\n        return;\n      }\n    }\n    pendingDeferred.reject(errors.Error(\"E4009\"));\n  });\n}\nvar CustomStore = Store.inherit({\n  ctor: function (options) {\n    options = options || {};\n    this.callBase(options);\n    this._useDefaultSearch = !!options.useDefaultSearch || \"raw\" === options.loadMode;\n    this._loadMode = options.loadMode;\n    this._cacheRawData = false !== options.cacheRawData;\n    this._loadFunc = options[LOAD];\n    this._totalCountFunc = options[TOTAL_COUNT];\n    this._byKeyFunc = options[BY_KEY];\n    this._insertFunc = options[INSERT];\n    this._updateFunc = options[UPDATE];\n    this._removeFunc = options[REMOVE];\n  },\n  _clearCache() {\n    delete this.__rawData;\n  },\n  createQuery: function () {\n    throw errors.Error(\"E4010\");\n  },\n  clearRawDataCache: function () {\n    this._clearCache();\n  },\n  _totalCountImpl: function (options) {\n    var d = new Deferred();\n    if (\"raw\" === this._loadMode && !this._totalCountFunc) {\n      runRawLoadWithQuery(d, this, options, true);\n    } else {\n      invokeUserTotalCountFunc(this, options).done(function (count) {\n        d.resolve(Number(count));\n      }).fail(createUserFuncFailureHandler(d));\n      d = this._addFailHandlers(d);\n    }\n    return d.promise();\n  },\n  _pushImpl: function (changes) {\n    if (this.__rawData) {\n      applyBatch({\n        keyInfo: this,\n        data: this.__rawData,\n        changes: changes\n      });\n    }\n  },\n  _loadImpl: function (options) {\n    var d = new Deferred();\n    if (\"raw\" === this._loadMode) {\n      runRawLoadWithQuery(d, this, options, false);\n    } else {\n      invokeUserLoad(this, options).done(function (data, extra) {\n        d.resolve(data, extra);\n      }).fail(createUserFuncFailureHandler(d));\n      d = this._addFailHandlers(d);\n    }\n    return d.promise();\n  },\n  _byKeyImpl: function (key, extraOptions) {\n    var d = new Deferred();\n    if (this._byKeyViaLoad()) {\n      this._requireKey();\n      runRawLoadWithKey(d, this, key);\n    } else {\n      invokeUserByKeyFunc(this, key, extraOptions).done(function (obj) {\n        d.resolve(obj);\n      }).fail(createUserFuncFailureHandler(d));\n    }\n    return d.promise();\n  },\n  _byKeyViaLoad: function () {\n    return \"raw\" === this._loadMode && !this._byKeyFunc;\n  },\n  _insertImpl: function (values) {\n    var that = this;\n    var userFunc = that._insertFunc;\n    var userResult;\n    var d = new Deferred();\n    ensureRequiredFuncOption(INSERT, userFunc);\n    userResult = userFunc.apply(that, [values]);\n    if (!isPromise(userResult)) {\n      userResult = trivialPromise(userResult);\n    }\n    fromPromise(userResult).done(function (serverResponse) {\n      if (config().useLegacyStoreResult) {\n        d.resolve(values, serverResponse);\n      } else {\n        d.resolve(serverResponse || values, that.keyOf(serverResponse));\n      }\n    }).fail(createUserFuncFailureHandler(d));\n    return d.promise();\n  },\n  _updateImpl: function (key, values) {\n    var userFunc = this._updateFunc;\n    var userResult;\n    var d = new Deferred();\n    ensureRequiredFuncOption(UPDATE, userFunc);\n    userResult = userFunc.apply(this, [key, values]);\n    if (!isPromise(userResult)) {\n      userResult = trivialPromise(userResult);\n    }\n    fromPromise(userResult).done(function (serverResponse) {\n      if (config().useLegacyStoreResult) {\n        d.resolve(key, values);\n      } else {\n        d.resolve(serverResponse || values, key);\n      }\n    }).fail(createUserFuncFailureHandler(d));\n    return d.promise();\n  },\n  _removeImpl: function (key) {\n    var userFunc = this._removeFunc;\n    var userResult;\n    var d = new Deferred();\n    ensureRequiredFuncOption(REMOVE, userFunc);\n    userResult = userFunc.apply(this, [key]);\n    if (!isPromise(userResult)) {\n      userResult = trivialPromise();\n    }\n    fromPromise(userResult).done(function () {\n      d.resolve(key);\n    }).fail(createUserFuncFailureHandler(d));\n    return d.promise();\n  }\n});\nexport default CustomStore;","map":{"version":3,"names":["$","keysEqual","XHR_ERROR_UNLOAD","errorMessageFromXhr","errorMessageFromXhrUtility","applyBatch","isFunction","config","errors","Store","arrayQuery","storeHelper","Deferred","when","fromPromise","TOTAL_COUNT","LOAD","BY_KEY","INSERT","UPDATE","REMOVE","isPromise","obj","then","trivialPromise","value","resolve","promise","ensureRequiredFuncOption","name","Error","throwInvalidUserFuncResult","createUserFuncFailureHandler","pendingDeferred","promiseArguments","xhr","textStatus","getResponseHeader","arg","error","arguments","String","message","reject","invokeUserLoad","store","options","userFunc","_loadFunc","userResult","apply","Array","isArray","invokeUserTotalCountFunc","_totalCountFunc","Number","isFinite","invokeUserByKeyFunc","key","extraOptions","_byKeyFunc","runRawLoad","userFuncOptions","continuation","__rawData","loadPromise","__rawDataPromise","_cacheRawData","always","done","rawData","fail","runRawLoadWithQuery","countOnly","userData","rawDataQuery","errorHandler","_errorHandler","itemsQuery","totalCountQuery","waitList","items","totalCount","queryByOptions","slice","push","enumerate","asyncResult","requireTotalCount","length","count","x","runRawLoadWithKey","keyExpr","item","i","len","keyOf","CustomStore","inherit","ctor","callBase","_useDefaultSearch","useDefaultSearch","loadMode","_loadMode","cacheRawData","_insertFunc","_updateFunc","_removeFunc","_clearCache","createQuery","clearRawDataCache","_totalCountImpl","d","_addFailHandlers","_pushImpl","changes","keyInfo","data","_loadImpl","extra","_byKeyImpl","_byKeyViaLoad","_requireKey","_insertImpl","values","that","serverResponse","useLegacyStoreResult","_updateImpl","_removeImpl"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/data/custom_store.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/data/custom_store.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    keysEqual,\r\n    XHR_ERROR_UNLOAD,\r\n    errorMessageFromXhr as errorMessageFromXhrUtility\r\n} from \"./utils\";\r\nimport {\r\n    applyBatch\r\n} from \"./array_utils\";\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    errors\r\n} from \"./errors\";\r\nimport Store from \"./abstract_store\";\r\nimport arrayQuery from \"./array_query\";\r\nimport storeHelper from \"./store_helper\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../core/utils/deferred\";\r\nvar TOTAL_COUNT = \"totalCount\";\r\nvar LOAD = \"load\";\r\nvar BY_KEY = \"byKey\";\r\nvar INSERT = \"insert\";\r\nvar UPDATE = \"update\";\r\nvar REMOVE = \"remove\";\r\n\r\nfunction isPromise(obj) {\r\n    return obj && isFunction(obj.then)\r\n}\r\n\r\nfunction trivialPromise(value) {\r\n    return (new Deferred).resolve(value).promise()\r\n}\r\n\r\nfunction ensureRequiredFuncOption(name, obj) {\r\n    if (!isFunction(obj)) {\r\n        throw errors.Error(\"E4011\", name)\r\n    }\r\n}\r\n\r\nfunction throwInvalidUserFuncResult(name) {\r\n    throw errors.Error(\"E4012\", name)\r\n}\r\n\r\nfunction createUserFuncFailureHandler(pendingDeferred) {\r\n    function errorMessageFromXhr(promiseArguments) {\r\n        var xhr = promiseArguments[0];\r\n        var textStatus = promiseArguments[1];\r\n        if (!xhr || !xhr.getResponseHeader) {\r\n            return null\r\n        }\r\n        return errorMessageFromXhrUtility(xhr, textStatus)\r\n    }\r\n    return function(arg) {\r\n        var error;\r\n        if (arg instanceof Error) {\r\n            error = arg\r\n        } else {\r\n            error = new Error(errorMessageFromXhr(arguments) || arg && String(arg) || \"Unknown error\")\r\n        }\r\n        if (error.message !== XHR_ERROR_UNLOAD) {\r\n            pendingDeferred.reject(error)\r\n        }\r\n    }\r\n}\r\n\r\nfunction invokeUserLoad(store, options) {\r\n    var userFunc = store._loadFunc;\r\n    var userResult;\r\n    ensureRequiredFuncOption(LOAD, userFunc);\r\n    userResult = userFunc.apply(store, [options]);\r\n    if (Array.isArray(userResult)) {\r\n        userResult = trivialPromise(userResult)\r\n    } else if (null === userResult || void 0 === userResult) {\r\n        userResult = trivialPromise([])\r\n    } else if (!isPromise(userResult)) {\r\n        throwInvalidUserFuncResult(LOAD)\r\n    }\r\n    return fromPromise(userResult)\r\n}\r\n\r\nfunction invokeUserTotalCountFunc(store, options) {\r\n    var userFunc = store._totalCountFunc;\r\n    var userResult;\r\n    if (!isFunction(userFunc)) {\r\n        throw errors.Error(\"E4021\")\r\n    }\r\n    userResult = userFunc.apply(store, [options]);\r\n    if (!isPromise(userResult)) {\r\n        userResult = Number(userResult);\r\n        if (!isFinite(userResult)) {\r\n            throwInvalidUserFuncResult(TOTAL_COUNT)\r\n        }\r\n        userResult = trivialPromise(userResult)\r\n    }\r\n    return fromPromise(userResult)\r\n}\r\n\r\nfunction invokeUserByKeyFunc(store, key, extraOptions) {\r\n    var userFunc = store._byKeyFunc;\r\n    var userResult;\r\n    ensureRequiredFuncOption(BY_KEY, userFunc);\r\n    userResult = userFunc.apply(store, [key, extraOptions]);\r\n    if (!isPromise(userResult)) {\r\n        userResult = trivialPromise(userResult)\r\n    }\r\n    return fromPromise(userResult)\r\n}\r\n\r\nfunction runRawLoad(pendingDeferred, store, userFuncOptions, continuation) {\r\n    if (store.__rawData) {\r\n        continuation(store.__rawData)\r\n    } else {\r\n        var loadPromise = store.__rawDataPromise || invokeUserLoad(store, userFuncOptions);\r\n        if (store._cacheRawData) {\r\n            store.__rawDataPromise = loadPromise\r\n        }\r\n        loadPromise.always((function() {\r\n            delete store.__rawDataPromise\r\n        })).done((function(rawData) {\r\n            if (store._cacheRawData) {\r\n                store.__rawData = rawData\r\n            }\r\n            continuation(rawData)\r\n        })).fail(createUserFuncFailureHandler(pendingDeferred))\r\n    }\r\n}\r\n\r\nfunction runRawLoadWithQuery(pendingDeferred, store, options, countOnly) {\r\n    options = options || {};\r\n    var userFuncOptions = {};\r\n    if (\"userData\" in options) {\r\n        userFuncOptions.userData = options.userData\r\n    }\r\n    runRawLoad(pendingDeferred, store, userFuncOptions, (function(rawData) {\r\n        var rawDataQuery = arrayQuery(rawData, {\r\n            errorHandler: store._errorHandler\r\n        });\r\n        var itemsQuery;\r\n        var totalCountQuery;\r\n        var waitList = [];\r\n        var items;\r\n        var totalCount;\r\n        if (!countOnly) {\r\n            itemsQuery = storeHelper.queryByOptions(rawDataQuery, options);\r\n            if (itemsQuery === rawDataQuery) {\r\n                items = rawData.slice(0)\r\n            } else {\r\n                waitList.push(itemsQuery.enumerate().done((function(asyncResult) {\r\n                    items = asyncResult\r\n                })))\r\n            }\r\n        }\r\n        if (options.requireTotalCount || countOnly) {\r\n            totalCountQuery = storeHelper.queryByOptions(rawDataQuery, options, true);\r\n            if (totalCountQuery === rawDataQuery) {\r\n                totalCount = rawData.length\r\n            } else {\r\n                waitList.push(totalCountQuery.count().done((function(asyncResult) {\r\n                    totalCount = asyncResult\r\n                })))\r\n            }\r\n        }\r\n        when.apply($, waitList).done((function() {\r\n            if (countOnly) {\r\n                pendingDeferred.resolve(totalCount)\r\n            } else if (options.requireTotalCount) {\r\n                pendingDeferred.resolve(items, {\r\n                    totalCount: totalCount\r\n                })\r\n            } else {\r\n                pendingDeferred.resolve(items)\r\n            }\r\n        })).fail((function(x) {\r\n            pendingDeferred.reject(x)\r\n        }))\r\n    }))\r\n}\r\n\r\nfunction runRawLoadWithKey(pendingDeferred, store, key) {\r\n    runRawLoad(pendingDeferred, store, {}, (function(rawData) {\r\n        var keyExpr = store.key();\r\n        var item;\r\n        for (var i = 0, len = rawData.length; i < len; i++) {\r\n            item = rawData[i];\r\n            if (keysEqual(keyExpr, store.keyOf(rawData[i]), key)) {\r\n                pendingDeferred.resolve(item);\r\n                return\r\n            }\r\n        }\r\n        pendingDeferred.reject(errors.Error(\"E4009\"))\r\n    }))\r\n}\r\nvar CustomStore = Store.inherit({\r\n    ctor: function(options) {\r\n        options = options || {};\r\n        this.callBase(options);\r\n        this._useDefaultSearch = !!options.useDefaultSearch || \"raw\" === options.loadMode;\r\n        this._loadMode = options.loadMode;\r\n        this._cacheRawData = false !== options.cacheRawData;\r\n        this._loadFunc = options[LOAD];\r\n        this._totalCountFunc = options[TOTAL_COUNT];\r\n        this._byKeyFunc = options[BY_KEY];\r\n        this._insertFunc = options[INSERT];\r\n        this._updateFunc = options[UPDATE];\r\n        this._removeFunc = options[REMOVE]\r\n    },\r\n    _clearCache() {\r\n        delete this.__rawData\r\n    },\r\n    createQuery: function() {\r\n        throw errors.Error(\"E4010\")\r\n    },\r\n    clearRawDataCache: function() {\r\n        this._clearCache()\r\n    },\r\n    _totalCountImpl: function(options) {\r\n        var d = new Deferred;\r\n        if (\"raw\" === this._loadMode && !this._totalCountFunc) {\r\n            runRawLoadWithQuery(d, this, options, true)\r\n        } else {\r\n            invokeUserTotalCountFunc(this, options).done((function(count) {\r\n                d.resolve(Number(count))\r\n            })).fail(createUserFuncFailureHandler(d));\r\n            d = this._addFailHandlers(d)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _pushImpl: function(changes) {\r\n        if (this.__rawData) {\r\n            applyBatch({\r\n                keyInfo: this,\r\n                data: this.__rawData,\r\n                changes: changes\r\n            })\r\n        }\r\n    },\r\n    _loadImpl: function(options) {\r\n        var d = new Deferred;\r\n        if (\"raw\" === this._loadMode) {\r\n            runRawLoadWithQuery(d, this, options, false)\r\n        } else {\r\n            invokeUserLoad(this, options).done((function(data, extra) {\r\n                d.resolve(data, extra)\r\n            })).fail(createUserFuncFailureHandler(d));\r\n            d = this._addFailHandlers(d)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _byKeyImpl: function(key, extraOptions) {\r\n        var d = new Deferred;\r\n        if (this._byKeyViaLoad()) {\r\n            this._requireKey();\r\n            runRawLoadWithKey(d, this, key)\r\n        } else {\r\n            invokeUserByKeyFunc(this, key, extraOptions).done((function(obj) {\r\n                d.resolve(obj)\r\n            })).fail(createUserFuncFailureHandler(d))\r\n        }\r\n        return d.promise()\r\n    },\r\n    _byKeyViaLoad: function() {\r\n        return \"raw\" === this._loadMode && !this._byKeyFunc\r\n    },\r\n    _insertImpl: function(values) {\r\n        var that = this;\r\n        var userFunc = that._insertFunc;\r\n        var userResult;\r\n        var d = new Deferred;\r\n        ensureRequiredFuncOption(INSERT, userFunc);\r\n        userResult = userFunc.apply(that, [values]);\r\n        if (!isPromise(userResult)) {\r\n            userResult = trivialPromise(userResult)\r\n        }\r\n        fromPromise(userResult).done((function(serverResponse) {\r\n            if (config().useLegacyStoreResult) {\r\n                d.resolve(values, serverResponse)\r\n            } else {\r\n                d.resolve(serverResponse || values, that.keyOf(serverResponse))\r\n            }\r\n        })).fail(createUserFuncFailureHandler(d));\r\n        return d.promise()\r\n    },\r\n    _updateImpl: function(key, values) {\r\n        var userFunc = this._updateFunc;\r\n        var userResult;\r\n        var d = new Deferred;\r\n        ensureRequiredFuncOption(UPDATE, userFunc);\r\n        userResult = userFunc.apply(this, [key, values]);\r\n        if (!isPromise(userResult)) {\r\n            userResult = trivialPromise(userResult)\r\n        }\r\n        fromPromise(userResult).done((function(serverResponse) {\r\n            if (config().useLegacyStoreResult) {\r\n                d.resolve(key, values)\r\n            } else {\r\n                d.resolve(serverResponse || values, key)\r\n            }\r\n        })).fail(createUserFuncFailureHandler(d));\r\n        return d.promise()\r\n    },\r\n    _removeImpl: function(key) {\r\n        var userFunc = this._removeFunc;\r\n        var userResult;\r\n        var d = new Deferred;\r\n        ensureRequiredFuncOption(REMOVE, userFunc);\r\n        userResult = userFunc.apply(this, [key]);\r\n        if (!isPromise(userResult)) {\r\n            userResult = trivialPromise()\r\n        }\r\n        fromPromise(userResult).done((function() {\r\n            d.resolve(key)\r\n        })).fail(createUserFuncFailureHandler(d));\r\n        return d.promise()\r\n    }\r\n});\r\nexport default CustomStore;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}