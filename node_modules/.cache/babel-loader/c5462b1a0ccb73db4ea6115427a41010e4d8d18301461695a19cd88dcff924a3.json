{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scroll_view/utils/get_boundary_props.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getScrollLeftMax } from \"./get_scroll_left_max\";\nimport { getScrollTopMax } from \"./get_scroll_top_max\";\nimport { ScrollDirection } from \"./scroll_direction\";\nexport function isReachedLeft(scrollOffsetLeft, epsilon) {\n  return Math.round(scrollOffsetLeft) <= epsilon;\n}\nexport function isReachedRight(element, scrollOffsetLeft, epsilon) {\n  return Math.round(getScrollLeftMax(element) - scrollOffsetLeft) <= epsilon;\n}\nexport function isReachedTop(scrollOffsetTop, epsilon) {\n  return Math.round(scrollOffsetTop) <= epsilon;\n}\nexport function isReachedBottom(element, scrollOffsetTop, pocketHeight, epsilon) {\n  return Math.round(getScrollTopMax(element) - scrollOffsetTop - pocketHeight) <= epsilon;\n}\nexport function getBoundaryProps(direction, scrollOffset, element) {\n  var pocketHeight = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;\n  var {\n    left: left,\n    top: top\n  } = scrollOffset;\n  var boundaryProps = {};\n  var {\n    isHorizontal: isHorizontal,\n    isVertical: isVertical\n  } = new ScrollDirection(direction);\n  if (isHorizontal) {\n    boundaryProps.reachedLeft = isReachedLeft(left, 0);\n    boundaryProps.reachedRight = isReachedRight(element, left, 0);\n  }\n  if (isVertical) {\n    boundaryProps.reachedTop = isReachedTop(top, 0);\n    boundaryProps.reachedBottom = isReachedBottom(element, top, pocketHeight, 0);\n  }\n  return boundaryProps;\n}","map":{"version":3,"names":["getScrollLeftMax","getScrollTopMax","ScrollDirection","isReachedLeft","scrollOffsetLeft","epsilon","Math","round","isReachedRight","element","isReachedTop","scrollOffsetTop","isReachedBottom","pocketHeight","getBoundaryProps","direction","scrollOffset","arguments","length","left","top","boundaryProps","isHorizontal","isVertical","reachedLeft","reachedRight","reachedTop","reachedBottom"],"sources":["C:/Users/ninad/OneDrive/Radna povr≈°ina/zavrsni/client/node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_boundary_props.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scroll_view/utils/get_boundary_props.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getScrollLeftMax\r\n} from \"./get_scroll_left_max\";\r\nimport {\r\n    getScrollTopMax\r\n} from \"./get_scroll_top_max\";\r\nimport {\r\n    ScrollDirection\r\n} from \"./scroll_direction\";\r\nexport function isReachedLeft(scrollOffsetLeft, epsilon) {\r\n    return Math.round(scrollOffsetLeft) <= epsilon\r\n}\r\nexport function isReachedRight(element, scrollOffsetLeft, epsilon) {\r\n    return Math.round(getScrollLeftMax(element) - scrollOffsetLeft) <= epsilon\r\n}\r\nexport function isReachedTop(scrollOffsetTop, epsilon) {\r\n    return Math.round(scrollOffsetTop) <= epsilon\r\n}\r\nexport function isReachedBottom(element, scrollOffsetTop, pocketHeight, epsilon) {\r\n    return Math.round(getScrollTopMax(element) - scrollOffsetTop - pocketHeight) <= epsilon\r\n}\r\nexport function getBoundaryProps(direction, scrollOffset, element) {\r\n    var pocketHeight = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;\r\n    var {\r\n        left: left,\r\n        top: top\r\n    } = scrollOffset;\r\n    var boundaryProps = {};\r\n    var {\r\n        isHorizontal: isHorizontal,\r\n        isVertical: isVertical\r\n    } = new ScrollDirection(direction);\r\n    if (isHorizontal) {\r\n        boundaryProps.reachedLeft = isReachedLeft(left, 0);\r\n        boundaryProps.reachedRight = isReachedRight(element, left, 0)\r\n    }\r\n    if (isVertical) {\r\n        boundaryProps.reachedTop = isReachedTop(top, 0);\r\n        boundaryProps.reachedBottom = isReachedBottom(element, top, pocketHeight, 0)\r\n    }\r\n    return boundaryProps\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,gBAAgB,QACb,uBAAuB;AAC9B,SACIC,eAAe,QACZ,sBAAsB;AAC7B,SACIC,eAAe,QACZ,oBAAoB;AAC3B,OAAO,SAASC,aAAaA,CAACC,gBAAgB,EAAEC,OAAO,EAAE;EACrD,OAAOC,IAAI,CAACC,KAAK,CAACH,gBAAgB,CAAC,IAAIC,OAAO;AAClD;AACA,OAAO,SAASG,cAAcA,CAACC,OAAO,EAAEL,gBAAgB,EAAEC,OAAO,EAAE;EAC/D,OAAOC,IAAI,CAACC,KAAK,CAACP,gBAAgB,CAACS,OAAO,CAAC,GAAGL,gBAAgB,CAAC,IAAIC,OAAO;AAC9E;AACA,OAAO,SAASK,YAAYA,CAACC,eAAe,EAAEN,OAAO,EAAE;EACnD,OAAOC,IAAI,CAACC,KAAK,CAACI,eAAe,CAAC,IAAIN,OAAO;AACjD;AACA,OAAO,SAASO,eAAeA,CAACH,OAAO,EAAEE,eAAe,EAAEE,YAAY,EAAER,OAAO,EAAE;EAC7E,OAAOC,IAAI,CAACC,KAAK,CAACN,eAAe,CAACQ,OAAO,CAAC,GAAGE,eAAe,GAAGE,YAAY,CAAC,IAAIR,OAAO;AAC3F;AACA,OAAO,SAASS,gBAAgBA,CAACC,SAAS,EAAEC,YAAY,EAAEP,OAAO,EAAE;EAC/D,IAAII,YAAY,GAAGI,SAAS,CAACC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKD,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;EACrF,IAAI;IACAE,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA;EACT,CAAC,GAAGJ,YAAY;EAChB,IAAIK,aAAa,GAAG,CAAC,CAAC;EACtB,IAAI;IACAC,YAAY,EAAEA,YAAY;IAC1BC,UAAU,EAAEA;EAChB,CAAC,GAAG,IAAIrB,eAAe,CAACa,SAAS,CAAC;EAClC,IAAIO,YAAY,EAAE;IACdD,aAAa,CAACG,WAAW,GAAGrB,aAAa,CAACgB,IAAI,EAAE,CAAC,CAAC;IAClDE,aAAa,CAACI,YAAY,GAAGjB,cAAc,CAACC,OAAO,EAAEU,IAAI,EAAE,CAAC,CAAC;EACjE;EACA,IAAII,UAAU,EAAE;IACZF,aAAa,CAACK,UAAU,GAAGhB,YAAY,CAACU,GAAG,EAAE,CAAC,CAAC;IAC/CC,aAAa,CAACM,aAAa,GAAGf,eAAe,CAACH,OAAO,EAAEW,GAAG,EAAEP,YAAY,EAAE,CAAC,CAAC;EAChF;EACA,OAAOQ,aAAa;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}