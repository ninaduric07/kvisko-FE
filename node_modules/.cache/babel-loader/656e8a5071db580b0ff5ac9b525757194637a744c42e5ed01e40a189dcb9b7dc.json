{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/array_query.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../core/class\";\nimport { isFunction, isDefined } from \"../core/utils/type\";\nimport { each, map } from \"../core/utils/iterator\";\nimport { compileGetter, toComparable } from \"../core/utils/data\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { errors, handleError as handleDataError } from \"./errors\";\nimport { aggregators, isGroupCriterion, isUnaryOperation, normalizeBinaryCriterion, isConjunctiveOperator as isConjunctiveOperatorChecker } from \"./utils\";\nvar Iterator = Class.inherit({\n  toArray: function () {\n    var result = [];\n    this.reset();\n    while (this.next()) {\n      result.push(this.current());\n    }\n    return result;\n  },\n  countable: function () {\n    return false;\n  }\n});\nvar ArrayIterator = Iterator.inherit({\n  ctor: function (array) {\n    this.array = array;\n    this.index = -1;\n  },\n  next: function () {\n    if (this.index + 1 < this.array.length) {\n      this.index++;\n      return true;\n    }\n    return false;\n  },\n  current: function () {\n    return this.array[this.index];\n  },\n  reset: function () {\n    this.index = -1;\n  },\n  toArray: function () {\n    return this.array.slice(0);\n  },\n  countable: function () {\n    return true;\n  },\n  count: function () {\n    return this.array.length;\n  }\n});\nvar WrappedIterator = Iterator.inherit({\n  ctor: function (iter) {\n    this.iter = iter;\n  },\n  next: function () {\n    return this.iter.next();\n  },\n  current: function () {\n    return this.iter.current();\n  },\n  reset: function () {\n    return this.iter.reset();\n  }\n});\nvar MapIterator = WrappedIterator.inherit({\n  ctor: function (iter, mapper) {\n    this.callBase(iter);\n    this.index = -1;\n    this.mapper = mapper;\n  },\n  current: function () {\n    return this.mapper(this.callBase(), this.index);\n  },\n  next: function () {\n    var hasNext = this.callBase();\n    if (hasNext) {\n      this.index++;\n    }\n    return hasNext;\n  }\n});\nvar defaultCompare = function (xValue, yValue) {\n  xValue = toComparable(xValue);\n  yValue = toComparable(yValue);\n  if (null === xValue && null !== yValue) {\n    return -1;\n  }\n  if (null !== xValue && null === yValue) {\n    return 1;\n  }\n  if (void 0 === xValue && void 0 !== yValue) {\n    return 1;\n  }\n  if (void 0 !== xValue && void 0 === yValue) {\n    return -1;\n  }\n  if (xValue < yValue) {\n    return -1;\n  }\n  if (xValue > yValue) {\n    return 1;\n  }\n  return 0;\n};\nvar SortIterator = Iterator.inherit({\n  ctor: function (iter, getter, desc, compare) {\n    if (!(iter instanceof MapIterator)) {\n      iter = new MapIterator(iter, this._wrap);\n    }\n    this.iter = iter;\n    this.rules = [{\n      getter: getter,\n      desc: desc,\n      compare: compare\n    }];\n  },\n  thenBy: function (getter, desc, compare) {\n    var result = new SortIterator(this.sortedIter || this.iter, getter, desc, compare);\n    if (!this.sortedIter) {\n      result.rules = this.rules.concat(result.rules);\n    }\n    return result;\n  },\n  next: function () {\n    this._ensureSorted();\n    return this.sortedIter.next();\n  },\n  current: function () {\n    this._ensureSorted();\n    return this.sortedIter.current();\n  },\n  reset: function () {\n    delete this.sortedIter;\n  },\n  countable: function () {\n    return this.sortedIter || this.iter.countable();\n  },\n  count: function () {\n    if (this.sortedIter) {\n      return this.sortedIter.count();\n    }\n    return this.iter.count();\n  },\n  _ensureSorted: function () {\n    var that = this;\n    if (that.sortedIter) {\n      return;\n    }\n    each(that.rules, function () {\n      this.getter = compileGetter(this.getter);\n    });\n    that.sortedIter = new MapIterator(new ArrayIterator(this.iter.toArray().sort(function (x, y) {\n      return that._compare(x, y);\n    })), that._unwrap);\n  },\n  _wrap: function (record, index) {\n    return {\n      index: index,\n      value: record\n    };\n  },\n  _unwrap: function (wrappedItem) {\n    return wrappedItem.value;\n  },\n  _compare: function (x, y) {\n    var xIndex = x.index;\n    var yIndex = y.index;\n    x = x.value;\n    y = y.value;\n    if (x === y) {\n      return xIndex - yIndex;\n    }\n    for (var i = 0, rulesCount = this.rules.length; i < rulesCount; i++) {\n      var rule = this.rules[i];\n      var xValue = rule.getter(x);\n      var yValue = rule.getter(y);\n      var compare = rule.compare || defaultCompare;\n      var compareResult = compare(xValue, yValue);\n      if (compareResult) {\n        return rule.desc ? -compareResult : compareResult;\n      }\n    }\n    return xIndex - yIndex;\n  }\n});\nvar compileCriteria = function () {\n  var toString = function (value) {\n    return isDefined(value) ? value.toString() : \"\";\n  };\n  function compileEquals(getter, value, negate) {\n    return function (obj) {\n      obj = toComparable(getter(obj));\n      var result = function (value) {\n        return \"\" === value || 0 === value || false === value;\n      }(value) ? obj === value : obj == value;\n      if (negate) {\n        result = !result;\n      }\n      return result;\n    };\n  }\n  return function (crit) {\n    if (isFunction(crit)) {\n      return crit;\n    }\n    if (isGroupCriterion(crit)) {\n      return function (crit) {\n        var ops = [];\n        var isConjunctiveOperator = false;\n        var isConjunctiveNextOperator = false;\n        each(crit, function () {\n          if (Array.isArray(this) || isFunction(this)) {\n            if (ops.length > 1 && isConjunctiveOperator !== isConjunctiveNextOperator) {\n              throw new errors.Error(\"E4019\");\n            }\n            ops.push(compileCriteria(this));\n            isConjunctiveOperator = isConjunctiveNextOperator;\n            isConjunctiveNextOperator = true;\n          } else {\n            isConjunctiveNextOperator = isConjunctiveOperatorChecker(this);\n          }\n        });\n        return function (d) {\n          var result = isConjunctiveOperator;\n          for (var i = 0; i < ops.length; i++) {\n            if (ops[i](d) !== isConjunctiveOperator) {\n              result = !isConjunctiveOperator;\n              break;\n            }\n          }\n          return result;\n        };\n      }(crit);\n    }\n    if (isUnaryOperation(crit)) {\n      return function (crit) {\n        var op = crit[0];\n        var criteria = compileCriteria(crit[1]);\n        if (\"!\" === op) {\n          return function (obj) {\n            return !criteria(obj);\n          };\n        }\n        throw errors.Error(\"E4003\", op);\n      }(crit);\n    }\n    return function (crit) {\n      crit = normalizeBinaryCriterion(crit);\n      var getter = compileGetter(crit[0]);\n      var op = crit[1];\n      var value = crit[2];\n      value = toComparable(value);\n      var compare = (obj, operatorFn) => {\n        obj = toComparable(getter(obj));\n        return (null == value || null == obj) && value !== obj ? false : operatorFn(obj, value);\n      };\n      switch (op.toLowerCase()) {\n        case \"=\":\n          return compileEquals(getter, value);\n        case \"<>\":\n          return compileEquals(getter, value, true);\n        case \">\":\n          return obj => compare(obj, (a, b) => a > b);\n        case \"<\":\n          return obj => compare(obj, (a, b) => a < b);\n        case \">=\":\n          return obj => compare(obj, (a, b) => a >= b);\n        case \"<=\":\n          return obj => compare(obj, (a, b) => a <= b);\n        case \"startswith\":\n          return function (obj) {\n            return 0 === toComparable(toString(getter(obj))).indexOf(value);\n          };\n        case \"endswith\":\n          return function (obj) {\n            var getterValue = toComparable(toString(getter(obj)));\n            var searchValue = toString(value);\n            if (getterValue.length < searchValue.length) {\n              return false;\n            }\n            var index = getterValue.lastIndexOf(value);\n            return -1 !== index && index === getterValue.length - value.length;\n          };\n        case \"contains\":\n          return function (obj) {\n            return toComparable(toString(getter(obj))).indexOf(value) > -1;\n          };\n        case \"notcontains\":\n          return function (obj) {\n            return -1 === toComparable(toString(getter(obj))).indexOf(value);\n          };\n      }\n      throw errors.Error(\"E4003\", op);\n    }(crit);\n  };\n}();\nvar FilterIterator = WrappedIterator.inherit({\n  ctor: function (iter, criteria) {\n    this.callBase(iter);\n    this.criteria = compileCriteria(criteria);\n  },\n  next: function () {\n    while (this.iter.next()) {\n      if (this.criteria(this.current())) {\n        return true;\n      }\n    }\n    return false;\n  }\n});\nvar GroupIterator = Iterator.inherit({\n  ctor: function (iter, getter) {\n    this.iter = iter;\n    this.getter = getter;\n  },\n  next: function () {\n    this._ensureGrouped();\n    return this.groupedIter.next();\n  },\n  current: function () {\n    this._ensureGrouped();\n    return this.groupedIter.current();\n  },\n  reset: function () {\n    delete this.groupedIter;\n  },\n  countable: function () {\n    return !!this.groupedIter;\n  },\n  count: function () {\n    return this.groupedIter.count();\n  },\n  _ensureGrouped: function () {\n    if (this.groupedIter) {\n      return;\n    }\n    var hash = {};\n    var keys = [];\n    var iter = this.iter;\n    var getter = compileGetter(this.getter);\n    iter.reset();\n    while (iter.next()) {\n      var current = iter.current();\n      var key = getter(current);\n      if (key in hash) {\n        hash[key].push(current);\n      } else {\n        hash[key] = [current];\n        keys.push(key);\n      }\n    }\n    this.groupedIter = new ArrayIterator(map(keys, function (key) {\n      return {\n        key: key,\n        items: hash[key]\n      };\n    }));\n  }\n});\nvar SelectIterator = WrappedIterator.inherit({\n  ctor: function (iter, getter) {\n    this.callBase(iter);\n    this.getter = compileGetter(getter);\n  },\n  current: function () {\n    return this.getter(this.callBase());\n  },\n  countable: function () {\n    return this.iter.countable();\n  },\n  count: function () {\n    return this.iter.count();\n  }\n});\nvar SliceIterator = WrappedIterator.inherit({\n  ctor: function (iter, skip, take) {\n    this.callBase(iter);\n    this.skip = Math.max(0, skip);\n    this.take = Math.max(0, take);\n    this.pos = 0;\n  },\n  next: function () {\n    if (this.pos >= this.skip + this.take) {\n      return false;\n    }\n    while (this.pos < this.skip && this.iter.next()) {\n      this.pos++;\n    }\n    this.pos++;\n    return this.iter.next();\n  },\n  reset: function () {\n    this.callBase();\n    this.pos = 0;\n  },\n  countable: function () {\n    return this.iter.countable();\n  },\n  count: function () {\n    return Math.min(this.iter.count() - this.skip, this.take);\n  }\n});\nvar arrayQueryImpl = function arrayQueryImpl(iter, queryOptions) {\n  queryOptions = queryOptions || {};\n  if (!(iter instanceof Iterator)) {\n    iter = new ArrayIterator(iter);\n  }\n  var handleError = function (error) {\n    var handler = queryOptions.errorHandler;\n    if (handler) {\n      handler(error);\n    }\n    handleDataError(error);\n  };\n  var aggregateCore = function (aggregator) {\n    var d = new Deferred().fail(handleError);\n    var seed;\n    var step = aggregator.step;\n    var finalize = aggregator.finalize;\n    try {\n      iter.reset();\n      if (\"seed\" in aggregator) {\n        seed = aggregator.seed;\n      } else {\n        seed = iter.next() ? iter.current() : NaN;\n      }\n      var accumulator = seed;\n      while (iter.next()) {\n        accumulator = step(accumulator, iter.current());\n      }\n      d.resolve(finalize ? finalize(accumulator) : accumulator);\n    } catch (x) {\n      d.reject(x);\n    }\n    return d.promise();\n  };\n  var standardAggregate = function (name) {\n    return aggregateCore(aggregators[name]);\n  };\n  var select = function (getter) {\n    if (!isFunction(getter) && !Array.isArray(getter)) {\n      getter = [].slice.call(arguments);\n    }\n    return chainQuery(new SelectIterator(iter, getter));\n  };\n  var selectProp = function (name) {\n    return select(compileGetter(name));\n  };\n  function chainQuery(iter) {\n    return arrayQueryImpl(iter, queryOptions);\n  }\n  return {\n    toArray: function () {\n      return iter.toArray();\n    },\n    enumerate: function () {\n      var d = new Deferred().fail(handleError);\n      try {\n        d.resolve(iter.toArray());\n      } catch (x) {\n        d.reject(x);\n      }\n      return d.promise();\n    },\n    sortBy: function (getter, desc, compare) {\n      return chainQuery(new SortIterator(iter, getter, desc, compare));\n    },\n    thenBy: function (getter, desc, compare) {\n      if (iter instanceof SortIterator) {\n        return chainQuery(iter.thenBy(getter, desc, compare));\n      }\n      throw errors.Error(\"E4004\");\n    },\n    filter: function (criteria) {\n      if (!Array.isArray(criteria)) {\n        criteria = [].slice.call(arguments);\n      }\n      return chainQuery(new FilterIterator(iter, criteria));\n    },\n    slice: function (skip, take) {\n      if (void 0 === take) {\n        take = Number.MAX_VALUE;\n      }\n      return chainQuery(new SliceIterator(iter, skip, take));\n    },\n    select: select,\n    groupBy: function (getter) {\n      return chainQuery(new GroupIterator(iter, getter));\n    },\n    aggregate: function (seed, step, finalize) {\n      if (arguments.length < 2) {\n        return aggregateCore({\n          step: arguments[0]\n        });\n      }\n      return aggregateCore({\n        seed: seed,\n        step: step,\n        finalize: finalize\n      });\n    },\n    count: function () {\n      if (iter.countable()) {\n        var d = new Deferred().fail(handleError);\n        try {\n          d.resolve(iter.count());\n        } catch (x) {\n          d.reject(x);\n        }\n        return d.promise();\n      }\n      return standardAggregate(\"count\");\n    },\n    sum: function (getter) {\n      if (getter) {\n        return selectProp(getter).sum();\n      }\n      return standardAggregate(\"sum\");\n    },\n    min: function (getter) {\n      if (getter) {\n        return selectProp(getter).min();\n      }\n      return standardAggregate(\"min\");\n    },\n    max: function (getter) {\n      if (getter) {\n        return selectProp(getter).max();\n      }\n      return standardAggregate(\"max\");\n    },\n    avg: function (getter) {\n      if (getter) {\n        return selectProp(getter).avg();\n      }\n      return standardAggregate(\"avg\");\n    }\n  };\n};\nexport default arrayQueryImpl;","map":{"version":3,"names":["Class","isFunction","isDefined","each","map","compileGetter","toComparable","Deferred","errors","handleError","handleDataError","aggregators","isGroupCriterion","isUnaryOperation","normalizeBinaryCriterion","isConjunctiveOperator","isConjunctiveOperatorChecker","Iterator","inherit","toArray","result","reset","next","push","current","countable","ArrayIterator","ctor","array","index","length","slice","count","WrappedIterator","iter","MapIterator","mapper","callBase","hasNext","defaultCompare","xValue","yValue","SortIterator","getter","desc","compare","_wrap","rules","thenBy","sortedIter","concat","_ensureSorted","that","sort","x","y","_compare","_unwrap","record","value","wrappedItem","xIndex","yIndex","i","rulesCount","rule","compareResult","compileCriteria","toString","compileEquals","negate","obj","crit","ops","isConjunctiveNextOperator","Array","isArray","Error","d","op","criteria","operatorFn","toLowerCase","a","b","indexOf","getterValue","searchValue","lastIndexOf","FilterIterator","GroupIterator","_ensureGrouped","groupedIter","hash","keys","key","items","SelectIterator","SliceIterator","skip","take","Math","max","pos","min","arrayQueryImpl","queryOptions","error","handler","errorHandler","aggregateCore","aggregator","fail","seed","step","finalize","NaN","accumulator","resolve","reject","promise","standardAggregate","name","select","call","arguments","chainQuery","selectProp","enumerate","sortBy","filter","Number","MAX_VALUE","groupBy","aggregate","sum","avg"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/data/array_query.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/data/array_query.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../core/class\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    compileGetter,\r\n    toComparable\r\n} from \"../core/utils/data\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    errors,\r\n    handleError as handleDataError\r\n} from \"./errors\";\r\nimport {\r\n    aggregators,\r\n    isGroupCriterion,\r\n    isUnaryOperation,\r\n    normalizeBinaryCriterion,\r\n    isConjunctiveOperator as isConjunctiveOperatorChecker\r\n} from \"./utils\";\r\nvar Iterator = Class.inherit({\r\n    toArray: function() {\r\n        var result = [];\r\n        this.reset();\r\n        while (this.next()) {\r\n            result.push(this.current())\r\n        }\r\n        return result\r\n    },\r\n    countable: function() {\r\n        return false\r\n    }\r\n});\r\nvar ArrayIterator = Iterator.inherit({\r\n    ctor: function(array) {\r\n        this.array = array;\r\n        this.index = -1\r\n    },\r\n    next: function() {\r\n        if (this.index + 1 < this.array.length) {\r\n            this.index++;\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    current: function() {\r\n        return this.array[this.index]\r\n    },\r\n    reset: function() {\r\n        this.index = -1\r\n    },\r\n    toArray: function() {\r\n        return this.array.slice(0)\r\n    },\r\n    countable: function() {\r\n        return true\r\n    },\r\n    count: function() {\r\n        return this.array.length\r\n    }\r\n});\r\nvar WrappedIterator = Iterator.inherit({\r\n    ctor: function(iter) {\r\n        this.iter = iter\r\n    },\r\n    next: function() {\r\n        return this.iter.next()\r\n    },\r\n    current: function() {\r\n        return this.iter.current()\r\n    },\r\n    reset: function() {\r\n        return this.iter.reset()\r\n    }\r\n});\r\nvar MapIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, mapper) {\r\n        this.callBase(iter);\r\n        this.index = -1;\r\n        this.mapper = mapper\r\n    },\r\n    current: function() {\r\n        return this.mapper(this.callBase(), this.index)\r\n    },\r\n    next: function() {\r\n        var hasNext = this.callBase();\r\n        if (hasNext) {\r\n            this.index++\r\n        }\r\n        return hasNext\r\n    }\r\n});\r\nvar defaultCompare = function(xValue, yValue) {\r\n    xValue = toComparable(xValue);\r\n    yValue = toComparable(yValue);\r\n    if (null === xValue && null !== yValue) {\r\n        return -1\r\n    }\r\n    if (null !== xValue && null === yValue) {\r\n        return 1\r\n    }\r\n    if (void 0 === xValue && void 0 !== yValue) {\r\n        return 1\r\n    }\r\n    if (void 0 !== xValue && void 0 === yValue) {\r\n        return -1\r\n    }\r\n    if (xValue < yValue) {\r\n        return -1\r\n    }\r\n    if (xValue > yValue) {\r\n        return 1\r\n    }\r\n    return 0\r\n};\r\nvar SortIterator = Iterator.inherit({\r\n    ctor: function(iter, getter, desc, compare) {\r\n        if (!(iter instanceof MapIterator)) {\r\n            iter = new MapIterator(iter, this._wrap)\r\n        }\r\n        this.iter = iter;\r\n        this.rules = [{\r\n            getter: getter,\r\n            desc: desc,\r\n            compare: compare\r\n        }]\r\n    },\r\n    thenBy: function(getter, desc, compare) {\r\n        var result = new SortIterator(this.sortedIter || this.iter, getter, desc, compare);\r\n        if (!this.sortedIter) {\r\n            result.rules = this.rules.concat(result.rules)\r\n        }\r\n        return result\r\n    },\r\n    next: function() {\r\n        this._ensureSorted();\r\n        return this.sortedIter.next()\r\n    },\r\n    current: function() {\r\n        this._ensureSorted();\r\n        return this.sortedIter.current()\r\n    },\r\n    reset: function() {\r\n        delete this.sortedIter\r\n    },\r\n    countable: function() {\r\n        return this.sortedIter || this.iter.countable()\r\n    },\r\n    count: function() {\r\n        if (this.sortedIter) {\r\n            return this.sortedIter.count()\r\n        }\r\n        return this.iter.count()\r\n    },\r\n    _ensureSorted: function() {\r\n        var that = this;\r\n        if (that.sortedIter) {\r\n            return\r\n        }\r\n        each(that.rules, (function() {\r\n            this.getter = compileGetter(this.getter)\r\n        }));\r\n        that.sortedIter = new MapIterator(new ArrayIterator(this.iter.toArray().sort((function(x, y) {\r\n            return that._compare(x, y)\r\n        }))), that._unwrap)\r\n    },\r\n    _wrap: function(record, index) {\r\n        return {\r\n            index: index,\r\n            value: record\r\n        }\r\n    },\r\n    _unwrap: function(wrappedItem) {\r\n        return wrappedItem.value\r\n    },\r\n    _compare: function(x, y) {\r\n        var xIndex = x.index;\r\n        var yIndex = y.index;\r\n        x = x.value;\r\n        y = y.value;\r\n        if (x === y) {\r\n            return xIndex - yIndex\r\n        }\r\n        for (var i = 0, rulesCount = this.rules.length; i < rulesCount; i++) {\r\n            var rule = this.rules[i];\r\n            var xValue = rule.getter(x);\r\n            var yValue = rule.getter(y);\r\n            var compare = rule.compare || defaultCompare;\r\n            var compareResult = compare(xValue, yValue);\r\n            if (compareResult) {\r\n                return rule.desc ? -compareResult : compareResult\r\n            }\r\n        }\r\n        return xIndex - yIndex\r\n    }\r\n});\r\nvar compileCriteria = function() {\r\n    var toString = function(value) {\r\n        return isDefined(value) ? value.toString() : \"\"\r\n    };\r\n\r\n    function compileEquals(getter, value, negate) {\r\n        return function(obj) {\r\n            obj = toComparable(getter(obj));\r\n            var result = function(value) {\r\n                return \"\" === value || 0 === value || false === value\r\n            }(value) ? obj === value : obj == value;\r\n            if (negate) {\r\n                result = !result\r\n            }\r\n            return result\r\n        }\r\n    }\r\n    return function(crit) {\r\n        if (isFunction(crit)) {\r\n            return crit\r\n        }\r\n        if (isGroupCriterion(crit)) {\r\n            return function(crit) {\r\n                var ops = [];\r\n                var isConjunctiveOperator = false;\r\n                var isConjunctiveNextOperator = false;\r\n                each(crit, (function() {\r\n                    if (Array.isArray(this) || isFunction(this)) {\r\n                        if (ops.length > 1 && isConjunctiveOperator !== isConjunctiveNextOperator) {\r\n                            throw new errors.Error(\"E4019\")\r\n                        }\r\n                        ops.push(compileCriteria(this));\r\n                        isConjunctiveOperator = isConjunctiveNextOperator;\r\n                        isConjunctiveNextOperator = true\r\n                    } else {\r\n                        isConjunctiveNextOperator = isConjunctiveOperatorChecker(this)\r\n                    }\r\n                }));\r\n                return function(d) {\r\n                    var result = isConjunctiveOperator;\r\n                    for (var i = 0; i < ops.length; i++) {\r\n                        if (ops[i](d) !== isConjunctiveOperator) {\r\n                            result = !isConjunctiveOperator;\r\n                            break\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            }(crit)\r\n        }\r\n        if (isUnaryOperation(crit)) {\r\n            return function(crit) {\r\n                var op = crit[0];\r\n                var criteria = compileCriteria(crit[1]);\r\n                if (\"!\" === op) {\r\n                    return function(obj) {\r\n                        return !criteria(obj)\r\n                    }\r\n                }\r\n                throw errors.Error(\"E4003\", op)\r\n            }(crit)\r\n        }\r\n        return function(crit) {\r\n            crit = normalizeBinaryCriterion(crit);\r\n            var getter = compileGetter(crit[0]);\r\n            var op = crit[1];\r\n            var value = crit[2];\r\n            value = toComparable(value);\r\n            var compare = (obj, operatorFn) => {\r\n                obj = toComparable(getter(obj));\r\n                return (null == value || null == obj) && value !== obj ? false : operatorFn(obj, value)\r\n            };\r\n            switch (op.toLowerCase()) {\r\n                case \"=\":\r\n                    return compileEquals(getter, value);\r\n                case \"<>\":\r\n                    return compileEquals(getter, value, true);\r\n                case \">\":\r\n                    return obj => compare(obj, (a, b) => a > b);\r\n                case \"<\":\r\n                    return obj => compare(obj, (a, b) => a < b);\r\n                case \">=\":\r\n                    return obj => compare(obj, (a, b) => a >= b);\r\n                case \"<=\":\r\n                    return obj => compare(obj, (a, b) => a <= b);\r\n                case \"startswith\":\r\n                    return function(obj) {\r\n                        return 0 === toComparable(toString(getter(obj))).indexOf(value)\r\n                    };\r\n                case \"endswith\":\r\n                    return function(obj) {\r\n                        var getterValue = toComparable(toString(getter(obj)));\r\n                        var searchValue = toString(value);\r\n                        if (getterValue.length < searchValue.length) {\r\n                            return false\r\n                        }\r\n                        var index = getterValue.lastIndexOf(value);\r\n                        return -1 !== index && index === getterValue.length - value.length\r\n                    };\r\n                case \"contains\":\r\n                    return function(obj) {\r\n                        return toComparable(toString(getter(obj))).indexOf(value) > -1\r\n                    };\r\n                case \"notcontains\":\r\n                    return function(obj) {\r\n                        return -1 === toComparable(toString(getter(obj))).indexOf(value)\r\n                    }\r\n            }\r\n            throw errors.Error(\"E4003\", op)\r\n        }(crit)\r\n    }\r\n}();\r\nvar FilterIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, criteria) {\r\n        this.callBase(iter);\r\n        this.criteria = compileCriteria(criteria)\r\n    },\r\n    next: function() {\r\n        while (this.iter.next()) {\r\n            if (this.criteria(this.current())) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n});\r\nvar GroupIterator = Iterator.inherit({\r\n    ctor: function(iter, getter) {\r\n        this.iter = iter;\r\n        this.getter = getter\r\n    },\r\n    next: function() {\r\n        this._ensureGrouped();\r\n        return this.groupedIter.next()\r\n    },\r\n    current: function() {\r\n        this._ensureGrouped();\r\n        return this.groupedIter.current()\r\n    },\r\n    reset: function() {\r\n        delete this.groupedIter\r\n    },\r\n    countable: function() {\r\n        return !!this.groupedIter\r\n    },\r\n    count: function() {\r\n        return this.groupedIter.count()\r\n    },\r\n    _ensureGrouped: function() {\r\n        if (this.groupedIter) {\r\n            return\r\n        }\r\n        var hash = {};\r\n        var keys = [];\r\n        var iter = this.iter;\r\n        var getter = compileGetter(this.getter);\r\n        iter.reset();\r\n        while (iter.next()) {\r\n            var current = iter.current();\r\n            var key = getter(current);\r\n            if (key in hash) {\r\n                hash[key].push(current)\r\n            } else {\r\n                hash[key] = [current];\r\n                keys.push(key)\r\n            }\r\n        }\r\n        this.groupedIter = new ArrayIterator(map(keys, (function(key) {\r\n            return {\r\n                key: key,\r\n                items: hash[key]\r\n            }\r\n        })))\r\n    }\r\n});\r\nvar SelectIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, getter) {\r\n        this.callBase(iter);\r\n        this.getter = compileGetter(getter)\r\n    },\r\n    current: function() {\r\n        return this.getter(this.callBase())\r\n    },\r\n    countable: function() {\r\n        return this.iter.countable()\r\n    },\r\n    count: function() {\r\n        return this.iter.count()\r\n    }\r\n});\r\nvar SliceIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, skip, take) {\r\n        this.callBase(iter);\r\n        this.skip = Math.max(0, skip);\r\n        this.take = Math.max(0, take);\r\n        this.pos = 0\r\n    },\r\n    next: function() {\r\n        if (this.pos >= this.skip + this.take) {\r\n            return false\r\n        }\r\n        while (this.pos < this.skip && this.iter.next()) {\r\n            this.pos++\r\n        }\r\n        this.pos++;\r\n        return this.iter.next()\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this.pos = 0\r\n    },\r\n    countable: function() {\r\n        return this.iter.countable()\r\n    },\r\n    count: function() {\r\n        return Math.min(this.iter.count() - this.skip, this.take)\r\n    }\r\n});\r\nvar arrayQueryImpl = function arrayQueryImpl(iter, queryOptions) {\r\n    queryOptions = queryOptions || {};\r\n    if (!(iter instanceof Iterator)) {\r\n        iter = new ArrayIterator(iter)\r\n    }\r\n    var handleError = function(error) {\r\n        var handler = queryOptions.errorHandler;\r\n        if (handler) {\r\n            handler(error)\r\n        }\r\n        handleDataError(error)\r\n    };\r\n    var aggregateCore = function(aggregator) {\r\n        var d = (new Deferred).fail(handleError);\r\n        var seed;\r\n        var step = aggregator.step;\r\n        var finalize = aggregator.finalize;\r\n        try {\r\n            iter.reset();\r\n            if (\"seed\" in aggregator) {\r\n                seed = aggregator.seed\r\n            } else {\r\n                seed = iter.next() ? iter.current() : NaN\r\n            }\r\n            var accumulator = seed;\r\n            while (iter.next()) {\r\n                accumulator = step(accumulator, iter.current())\r\n            }\r\n            d.resolve(finalize ? finalize(accumulator) : accumulator)\r\n        } catch (x) {\r\n            d.reject(x)\r\n        }\r\n        return d.promise()\r\n    };\r\n    var standardAggregate = function(name) {\r\n        return aggregateCore(aggregators[name])\r\n    };\r\n    var select = function(getter) {\r\n        if (!isFunction(getter) && !Array.isArray(getter)) {\r\n            getter = [].slice.call(arguments)\r\n        }\r\n        return chainQuery(new SelectIterator(iter, getter))\r\n    };\r\n    var selectProp = function(name) {\r\n        return select(compileGetter(name))\r\n    };\r\n\r\n    function chainQuery(iter) {\r\n        return arrayQueryImpl(iter, queryOptions)\r\n    }\r\n    return {\r\n        toArray: function() {\r\n            return iter.toArray()\r\n        },\r\n        enumerate: function() {\r\n            var d = (new Deferred).fail(handleError);\r\n            try {\r\n                d.resolve(iter.toArray())\r\n            } catch (x) {\r\n                d.reject(x)\r\n            }\r\n            return d.promise()\r\n        },\r\n        sortBy: function(getter, desc, compare) {\r\n            return chainQuery(new SortIterator(iter, getter, desc, compare))\r\n        },\r\n        thenBy: function(getter, desc, compare) {\r\n            if (iter instanceof SortIterator) {\r\n                return chainQuery(iter.thenBy(getter, desc, compare))\r\n            }\r\n            throw errors.Error(\"E4004\")\r\n        },\r\n        filter: function(criteria) {\r\n            if (!Array.isArray(criteria)) {\r\n                criteria = [].slice.call(arguments)\r\n            }\r\n            return chainQuery(new FilterIterator(iter, criteria))\r\n        },\r\n        slice: function(skip, take) {\r\n            if (void 0 === take) {\r\n                take = Number.MAX_VALUE\r\n            }\r\n            return chainQuery(new SliceIterator(iter, skip, take))\r\n        },\r\n        select: select,\r\n        groupBy: function(getter) {\r\n            return chainQuery(new GroupIterator(iter, getter))\r\n        },\r\n        aggregate: function(seed, step, finalize) {\r\n            if (arguments.length < 2) {\r\n                return aggregateCore({\r\n                    step: arguments[0]\r\n                })\r\n            }\r\n            return aggregateCore({\r\n                seed: seed,\r\n                step: step,\r\n                finalize: finalize\r\n            })\r\n        },\r\n        count: function() {\r\n            if (iter.countable()) {\r\n                var d = (new Deferred).fail(handleError);\r\n                try {\r\n                    d.resolve(iter.count())\r\n                } catch (x) {\r\n                    d.reject(x)\r\n                }\r\n                return d.promise()\r\n            }\r\n            return standardAggregate(\"count\")\r\n        },\r\n        sum: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).sum()\r\n            }\r\n            return standardAggregate(\"sum\")\r\n        },\r\n        min: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).min()\r\n            }\r\n            return standardAggregate(\"min\")\r\n        },\r\n        max: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).max()\r\n            }\r\n            return standardAggregate(\"max\")\r\n        },\r\n        avg: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).avg()\r\n            }\r\n            return standardAggregate(\"avg\")\r\n        }\r\n    }\r\n};\r\nexport default arrayQueryImpl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}