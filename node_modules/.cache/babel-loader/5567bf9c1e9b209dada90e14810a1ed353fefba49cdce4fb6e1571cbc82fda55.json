{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { focused } from \"../widget/selectors\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { current, isMaterial } from \"../themes\";\nimport devices from \"../../core/devices\";\nimport Editor from \"../editor/editor\";\nimport { addNamespace, normalizeKeyName } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport ClearButton from \"./ui.text_editor.clear\";\nimport TextEditorButtonCollection from \"./texteditor_button_collection/index\";\nimport config from \"../../core/config\";\nimport errors from \"../widget/ui.errors\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport LoadIndicator from \"../load_indicator\";\nimport { TextEditorLabel } from \"./ui.text_editor.label\";\nimport { getWidth } from \"../../core/utils/size\";\nimport resizeObserverSingleton from \"../../core/resize_observer\";\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\nvar TextEditorLabelCreator = TextEditorLabel;\nfunction checkButtonsOptionType(buttons) {\n  if (isDefined(buttons) && !Array.isArray(buttons)) {\n    throw errors.Error(\"E1053\");\n  }\n}\nvar TextEditorBase = Editor.inherit({\n  ctor: function (_, options) {\n    if (options) {\n      checkButtonsOptionType(options.buttons);\n    }\n    this._buttonCollection = new TextEditorButtonCollection(this, this._getDefaultButtons());\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._labelContainerElement = null;\n    this.callBase.apply(this, arguments);\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      buttons: void 0,\n      value: \"\",\n      spellcheck: false,\n      showClearButton: false,\n      valueChangeEvent: \"change\",\n      placeholder: \"\",\n      inputAttr: {},\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyDown: null,\n      onKeyUp: null,\n      onChange: null,\n      onInput: null,\n      onCut: null,\n      onCopy: null,\n      onPaste: null,\n      onEnterKey: null,\n      mode: \"text\",\n      hoverStateEnabled: true,\n      focusStateEnabled: true,\n      text: void 0,\n      displayValueFormatter: function (value) {\n        return isDefined(value) && false !== value ? value : \"\";\n      },\n      stylingMode: config().editorStylingMode || \"outlined\",\n      showValidationMark: true,\n      label: \"\",\n      labelMode: \"static\",\n      labelMark: \"\"\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        var themeName = current();\n        return isMaterial(themeName);\n      },\n      options: {\n        stylingMode: config().editorStylingMode || \"filled\",\n        labelMode: \"floating\"\n      }\n    }]);\n  },\n  _getDefaultButtons: function () {\n    return [{\n      name: \"clear\",\n      Ctor: ClearButton\n    }];\n  },\n  _isClearButtonVisible: function () {\n    return this.option(\"showClearButton\") && !this.option(\"readOnly\");\n  },\n  _input: function () {\n    return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first();\n  },\n  _isFocused: function () {\n    return focused(this._input()) || this.callBase();\n  },\n  _inputWrapper: function () {\n    return this.$element();\n  },\n  _buttonsContainer: function () {\n    return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0);\n  },\n  _isControlKey: function (key) {\n    return -1 !== CONTROL_KEYS.indexOf(key);\n  },\n  _renderStylingMode: function () {\n    this.callBase();\n    this._updateButtonsStyling(this.option(\"stylingMode\"));\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTEDITOR_CLASS);\n    this._renderInput();\n    this._renderStylingMode();\n    this._renderInputType();\n    this._renderPlaceholder();\n    this._renderProps();\n    this.callBase();\n    this._renderValue();\n    this._renderLabel();\n  },\n  _render: function () {\n    this.callBase();\n    this._refreshValueChangeEvent();\n    this._renderEvents();\n    this._renderEnterKeyAction();\n    this._renderEmptinessEvent();\n  },\n  _renderInput: function () {\n    this._$buttonsContainer = this._$textEditorContainer = $(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\n    this._$textEditorInputContainer = $(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\n    this._$textEditorInputContainer.append(this._createInput());\n    this._renderButtonContainers();\n  },\n  _getInputContainer() {\n    return this._$textEditorInputContainer;\n  },\n  _renderPendingIndicator: function () {\n    this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n    var $inputContainer = this._getInputContainer();\n    var $indicatorElement = $(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\n    this._pendingIndicator = this._createComponent($indicatorElement, LoadIndicator);\n  },\n  _disposePendingIndicator: function () {\n    if (!this._pendingIndicator) {\n      return;\n    }\n    this._pendingIndicator.dispose();\n    this._pendingIndicator.$element().remove();\n    this._pendingIndicator = null;\n    this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n  },\n  _renderValidationState: function () {\n    this.callBase();\n    var isPending = \"pending\" === this.option(\"validationStatus\");\n    var $element = this.$element();\n    if (isPending) {\n      !this._pendingIndicator && this._renderPendingIndicator();\n      this._showValidMark = false;\n    } else {\n      if (\"invalid\" === this.option(\"validationStatus\")) {\n        this._showValidMark = false;\n      }\n      if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\n        this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator;\n      }\n      this._disposePendingIndicator();\n    }\n    $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark);\n  },\n  _renderButtonContainers: function () {\n    var buttons = this.option(\"buttons\");\n    this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\n    this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer);\n  },\n  _cleanButtonContainers: function () {\n    var _this$_$beforeButtons, _this$_$afterButtonsC;\n    null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons.remove();\n    null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC.remove();\n    this._buttonCollection.clean();\n  },\n  _clean() {\n    this._buttonCollection.clean();\n    this._disposePendingIndicator();\n    this._unobserveLabelContainerResize();\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._$textEditorContainer = null;\n    this._$buttonsContainer = null;\n    this.callBase();\n  },\n  _createInput: function () {\n    var $input = $(\"<input>\");\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n    return $input;\n  },\n  _setSubmitElementName: function (name) {\n    var inputAttrName = this.option(\"inputAttr.name\");\n    return this.callBase(name || inputAttrName || \"\");\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    var inputAttributes = extend(this._getDefaultAttributes(), customAttributes);\n    $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\");\n  },\n  _getDefaultAttributes: function () {\n    var defaultAttributes = {\n      autocomplete: \"off\"\n    };\n    var {\n      ios: ios,\n      mac: mac\n    } = devices.real();\n    if (ios || mac) {\n      defaultAttributes.placeholder = \" \";\n    }\n    return defaultAttributes;\n  },\n  _updateButtons: function (names) {\n    this._buttonCollection.updateButtons(names);\n  },\n  _updateButtonsStyling: function (editorStylingMode) {\n    each(this.option(\"buttons\"), (_, _ref) => {\n      var {\n        options: options,\n        name: buttonName\n      } = _ref;\n      if (options && !options.stylingMode && this.option(\"visible\")) {\n        var buttonInstance = this.getButton(buttonName);\n        buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\");\n      }\n    });\n  },\n  _renderValue: function () {\n    var renderInputPromise = this._renderInputValue();\n    return renderInputPromise.promise();\n  },\n  _renderInputValue: function (value) {\n    var _value;\n    value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\n    var text = this.option(\"text\");\n    var displayValue = this.option(\"displayValue\");\n    var displayValueFormatter = this.option(\"displayValueFormatter\");\n    if (void 0 !== displayValue && null !== value) {\n      text = displayValueFormatter(displayValue);\n    } else if (!isDefined(text)) {\n      text = displayValueFormatter(value);\n    }\n    this.option(\"text\", text);\n    if (this._input().val() !== (isDefined(text) ? text : \"\")) {\n      this._renderDisplayText(text);\n    } else {\n      this._toggleEmptinessEventHandler();\n    }\n    return new Deferred().resolve();\n  },\n  _renderDisplayText: function (text) {\n    this._input().val(text);\n    this._toggleEmptinessEventHandler();\n  },\n  _isValueValid: function () {\n    if (this._input().length) {\n      var validity = this._input().get(0).validity;\n      if (validity) {\n        return validity.valid;\n      }\n    }\n    return true;\n  },\n  _toggleEmptiness: function (isEmpty) {\n    this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\n    this._togglePlaceholder(isEmpty);\n  },\n  _togglePlaceholder: function (isEmpty) {\n    this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty);\n  },\n  _renderProps: function () {\n    this._toggleReadOnlyState();\n    this._toggleSpellcheckState();\n    this._toggleTabIndex();\n  },\n  _toggleDisabledState: function (value) {\n    this.callBase.apply(this, arguments);\n    var $input = this._input();\n    $input.prop(\"disabled\", value);\n  },\n  _toggleTabIndex: function () {\n    var $input = this._input();\n    var disabled = this.option(\"disabled\");\n    var focusStateEnabled = this.option(\"focusStateEnabled\");\n    if (disabled || !focusStateEnabled) {\n      $input.attr(\"tabIndex\", -1);\n    } else {\n      $input.removeAttr(\"tabIndex\");\n    }\n  },\n  _toggleReadOnlyState: function () {\n    this._input().prop(\"readOnly\", this._readOnlyPropValue());\n    this.callBase();\n  },\n  _readOnlyPropValue: function () {\n    return this.option(\"readOnly\");\n  },\n  _toggleSpellcheckState: function () {\n    this._input().prop(\"spellcheck\", this.option(\"spellcheck\"));\n  },\n  _unobserveLabelContainerResize: function () {\n    if (this._labelContainerElement) {\n      resizeObserverSingleton.unobserve(this._labelContainerElement);\n      this._labelContainerElement = null;\n    }\n  },\n  _getLabelContainer: function () {\n    return this._input();\n  },\n  _getLabelContainerWidth: function () {\n    return getWidth(this._getLabelContainer());\n  },\n  _getLabelBeforeWidth: function () {\n    var buttonsBeforeWidth = this._$beforeButtonsContainer && getWidth(this._$beforeButtonsContainer);\n    return null !== buttonsBeforeWidth && void 0 !== buttonsBeforeWidth ? buttonsBeforeWidth : 0;\n  },\n  _updateLabelWidth: function () {\n    this._label.updateBeforeWidth(this._getLabelBeforeWidth());\n    this._label.updateMaxWidth(this._getLabelContainerWidth());\n  },\n  _setLabelContainerAria: function () {\n    this.setAria(\"labelledby\", this._label.getId(), this._getLabelContainer());\n  },\n  _renderLabel: function () {\n    this._unobserveLabelContainerResize();\n    this._labelContainerElement = $(this._getLabelContainer()).get(0);\n    var {\n      label: label,\n      labelMode: labelMode,\n      labelMark: labelMark\n    } = this.option();\n    var labelConfig = {\n      $editor: this.$element(),\n      text: label,\n      mark: labelMark,\n      mode: labelMode,\n      containsButtonsBefore: !!this._$beforeButtonsContainer,\n      containerWidth: this._getLabelContainerWidth(),\n      beforeWidth: this._getLabelBeforeWidth()\n    };\n    this._label = new TextEditorLabelCreator(labelConfig);\n    this._setLabelContainerAria();\n    if (this._labelContainerElement) {\n      resizeObserverSingleton.observe(this._labelContainerElement, this._updateLabelWidth.bind(this));\n    }\n  },\n  _renderPlaceholder: function () {\n    this._renderPlaceholderMarkup();\n    this._attachPlaceholderEvents();\n  },\n  _renderPlaceholderMarkup: function () {\n    if (this._$placeholder) {\n      this._$placeholder.remove();\n      this._$placeholder = null;\n    }\n    var $input = this._input();\n    var placeholderText = this.option(\"placeholder\");\n    var $placeholder = this._$placeholder = $(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\n    $placeholder.insertAfter($input);\n    $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS);\n  },\n  _attachPlaceholderEvents: function () {\n    var startEvent = addNamespace(pointerEvents.up, this.NAME);\n    eventsEngine.on(this._$placeholder, startEvent, () => {\n      eventsEngine.trigger(this._input(), \"focus\");\n    });\n    this._toggleEmptinessEventHandler();\n  },\n  _placeholder: function () {\n    return this._$placeholder || $();\n  },\n  _clearValueHandler: function (e) {\n    var $input = this._input();\n    e.stopPropagation();\n    this._saveValueChangeEvent(e);\n    this._clearValue();\n    !this._isFocused() && eventsEngine.trigger($input, \"focus\");\n    eventsEngine.trigger($input, \"input\");\n  },\n  _clearValue: function () {\n    this.reset();\n  },\n  _renderEvents: function () {\n    var $input = this._input();\n    each(EVENTS_LIST, (_, event) => {\n      if (this.hasActionSubscription(\"on\" + event)) {\n        var action = this._createActionByOption(\"on\" + event, {\n          excludeValidators: [\"readOnly\"]\n        });\n        eventsEngine.on($input, addNamespace(event.toLowerCase(), this.NAME), e => {\n          if (this._disposed) {\n            return;\n          }\n          action({\n            event: e\n          });\n        });\n      }\n    });\n  },\n  _refreshEvents: function () {\n    var $input = this._input();\n    each(EVENTS_LIST, (_, event) => {\n      eventsEngine.off($input, addNamespace(event.toLowerCase(), this.NAME));\n    });\n    this._renderEvents();\n  },\n  _keyPressHandler: function () {\n    this.option(\"text\", this._input().val());\n  },\n  _keyDownHandler: function (e) {\n    var $input = this._input();\n    var isCtrlEnter = e.ctrlKey && \"enter\" === normalizeKeyName(e);\n    var isNewValue = $input.val() !== this.option(\"value\");\n    if (isCtrlEnter && isNewValue) {\n      eventsEngine.trigger($input, \"change\");\n    }\n  },\n  _getValueChangeEventOptionName: function () {\n    return \"valueChangeEvent\";\n  },\n  _renderValueChangeEvent: function () {\n    var keyPressEvent = addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\n    var valueChangeEvent = addNamespace(this.option(this._getValueChangeEventOptionName()), \"\".concat(this.NAME, \"ValueChange\"));\n    var keyDownEvent = addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\n    var $input = this._input();\n    eventsEngine.on($input, keyPressEvent, this._keyPressHandler.bind(this));\n    eventsEngine.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\n    eventsEngine.on($input, keyDownEvent, this._keyDownHandler.bind(this));\n  },\n  _cleanValueChangeEvent: function () {\n    var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\n    var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\n    eventsEngine.off(this._input(), valueChangeNamespace);\n    eventsEngine.off(this._input(), textChangeNamespace);\n  },\n  _refreshValueChangeEvent: function () {\n    this._cleanValueChangeEvent();\n    this._renderValueChangeEvent();\n  },\n  _renderValueEventName: function () {\n    return \"input change keypress\";\n  },\n  _focusTarget: function () {\n    return this._input();\n  },\n  _focusEventTarget: function () {\n    return this.element();\n  },\n  _isInput: function (element) {\n    return element === this._input().get(0);\n  },\n  _preventNestedFocusEvent: function (event) {\n    if (event.isDefaultPrevented()) {\n      return true;\n    }\n    var shouldPrevent = this._isNestedTarget(event.relatedTarget);\n    if (\"focusin\" === event.type) {\n      shouldPrevent = shouldPrevent && this._isNestedTarget(event.target) && !this._isInput(event.target);\n    } else if (!shouldPrevent) {\n      this._toggleFocusClass(false, this.$element());\n    }\n    shouldPrevent && event.preventDefault();\n    return shouldPrevent;\n  },\n  _isNestedTarget: function (target) {\n    return !!this.$element().find(target).length;\n  },\n  _focusClassTarget: function () {\n    return this.$element();\n  },\n  _focusInHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n    this.callBase.apply(this, arguments);\n  },\n  _focusOutHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n    this.callBase.apply(this, arguments);\n  },\n  _toggleFocusClass: function (isFocused, $element) {\n    this.callBase(isFocused, this._focusClassTarget($element));\n  },\n  _hasFocusClass: function (element) {\n    return this.callBase($(element || this.$element()));\n  },\n  _renderEmptinessEvent: function () {\n    var $input = this._input();\n    eventsEngine.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this));\n  },\n  _toggleEmptinessEventHandler: function () {\n    var text = this._input().val();\n    var isEmpty = (\"\" === text || null === text) && this._isValueValid();\n    this._toggleEmptiness(isEmpty);\n  },\n  _valueChangeEventHandler: function (e, formattedValue) {\n    if (this.option(\"readOnly\")) {\n      return;\n    }\n    this._saveValueChangeEvent(e);\n    this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\n    this._saveValueChangeEvent(void 0);\n  },\n  _renderEnterKeyAction: function () {\n    this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\n      excludeValidators: [\"readOnly\"]\n    });\n    eventsEngine.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\n    eventsEngine.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this));\n  },\n  _enterKeyHandlerUp: function (e) {\n    if (this._disposed) {\n      return;\n    }\n    if (\"enter\" === normalizeKeyName(e)) {\n      this._enterKeyAction({\n        event: e\n      });\n    }\n  },\n  _updateValue: function () {\n    this._options.silent(\"text\", null);\n    this._renderValue();\n  },\n  _dispose: function () {\n    this._enterKeyAction = void 0;\n    this.callBase();\n  },\n  _getSubmitElement: function () {\n    return this._input();\n  },\n  _hasActiveElement: function () {\n    return this._input().is(domAdapter.getActiveElement(this._input()[0]));\n  },\n  _optionChanged: function (args) {\n    var {\n      name: name,\n      fullName: fullName,\n      value: value\n    } = args;\n    var eventName = name.replace(\"on\", \"\");\n    if (EVENTS_LIST.includes(eventName)) {\n      this._refreshEvents();\n      return;\n    }\n    switch (name) {\n      case \"valueChangeEvent\":\n        this._refreshValueChangeEvent();\n        this._refreshFocusEvent();\n        this._refreshEvents();\n        break;\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n        break;\n      case \"focusStateEnabled\":\n        this.callBase(args);\n        this._toggleTabIndex();\n        break;\n      case \"spellcheck\":\n        this._toggleSpellcheckState();\n        break;\n      case \"mode\":\n        this._renderInputType();\n        break;\n      case \"onEnterKey\":\n        this._renderEnterKeyAction();\n        break;\n      case \"placeholder\":\n        this._renderPlaceholder();\n        break;\n      case \"label\":\n        this._label.updateText(value);\n        this._setLabelContainerAria();\n        break;\n      case \"labelMark\":\n        this._label.updateMark(value);\n        break;\n      case \"labelMode\":\n        this._label.updateMode(value);\n        this._setLabelContainerAria();\n        break;\n      case \"width\":\n        this.callBase(args);\n        this._label.updateMaxWidth(this._getLabelContainerWidth());\n        break;\n      case \"readOnly\":\n      case \"disabled\":\n        this._updateButtons();\n        this.callBase(args);\n        break;\n      case \"showClearButton\":\n        this._updateButtons([\"clear\"]);\n        break;\n      case \"text\":\n        break;\n      case \"value\":\n        this._updateValue();\n        this.callBase(args);\n        break;\n      case \"inputAttr\":\n        this._applyInputAttributes(this._input(), this.option(name));\n        break;\n      case \"stylingMode\":\n        this._renderStylingMode();\n        this._updateLabelWidth();\n        break;\n      case \"buttons\":\n        if (fullName === name) {\n          checkButtonsOptionType(value);\n        }\n        this._cleanButtonContainers();\n        this._renderButtonContainers();\n        this._updateButtonsStyling(this.option(\"stylingMode\"));\n        this._updateLabelWidth();\n        this._label.updateContainsButtonsBefore(!!this._$beforeButtonsContainer);\n        break;\n      case \"visible\":\n        this.callBase(args);\n        if (value && this.option(\"buttons\")) {\n          this._cleanButtonContainers();\n          this._renderButtonContainers();\n          this._updateButtonsStyling(this.option(\"stylingMode\"));\n        }\n        break;\n      case \"displayValueFormatter\":\n        this._invalidate();\n        break;\n      case \"showValidationMark\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _renderInputType: function () {\n    this._setInputType(this.option(\"mode\"));\n  },\n  _setInputType: function (type) {\n    var input = this._input();\n    if (\"search\" === type) {\n      type = \"text\";\n    }\n    try {\n      input.prop(\"type\", type);\n    } catch (e) {\n      input.prop(\"type\", \"text\");\n    }\n  },\n  getButton(name) {\n    return this._buttonCollection.getButton(name);\n  },\n  focus: function () {\n    eventsEngine.trigger(this._input(), \"focus\");\n  },\n  reset: function () {\n    if (this._showValidMark) {\n      this._showValidMark = false;\n      this._renderValidationState();\n    }\n    var defaultOptions = this._getDefaultOptions();\n    if (this.option(\"value\") === defaultOptions.value) {\n      this._options.silent(\"text\", \"\");\n      this._renderValue();\n    } else {\n      this.option(\"value\", defaultOptions.value);\n    }\n  },\n  on: function (eventName, eventHandler) {\n    var result = this.callBase(eventName, eventHandler);\n    var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\n    if (EVENTS_LIST.indexOf(event) >= 0) {\n      this._refreshEvents();\n    }\n    return result;\n  }\n});\nexport default TextEditorBase;","map":{"version":3,"names":["$","domAdapter","eventsEngine","focused","isDefined","extend","each","current","isMaterial","devices","Editor","addNamespace","normalizeKeyName","pointerEvents","ClearButton","TextEditorButtonCollection","config","errors","Deferred","LoadIndicator","TextEditorLabel","getWidth","resizeObserverSingleton","TEXTEDITOR_CLASS","TEXTEDITOR_INPUT_CONTAINER_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_SELECTOR","TEXTEDITOR_CONTAINER_CLASS","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","TEXTEDITOR_PLACEHOLDER_CLASS","TEXTEDITOR_EMPTY_INPUT_CLASS","STATE_INVISIBLE_CLASS","TEXTEDITOR_PENDING_INDICATOR_CLASS","TEXTEDITOR_VALIDATION_PENDING_CLASS","TEXTEDITOR_VALID_CLASS","EVENTS_LIST","CONTROL_KEYS","TextEditorLabelCreator","checkButtonsOptionType","buttons","Array","isArray","Error","TextEditorBase","inherit","ctor","_","options","_buttonCollection","_getDefaultButtons","_$beforeButtonsContainer","_$afterButtonsContainer","_labelContainerElement","callBase","apply","arguments","_getDefaultOptions","value","spellcheck","showClearButton","valueChangeEvent","placeholder","inputAttr","onFocusIn","onFocusOut","onKeyDown","onKeyUp","onChange","onInput","onCut","onCopy","onPaste","onEnterKey","mode","hoverStateEnabled","focusStateEnabled","text","displayValueFormatter","stylingMode","editorStylingMode","showValidationMark","label","labelMode","labelMark","_defaultOptionsRules","concat","device","themeName","name","Ctor","_isClearButtonVisible","option","_input","$element","find","first","_isFocused","_inputWrapper","_buttonsContainer","eq","_isControlKey","key","indexOf","_renderStylingMode","_updateButtonsStyling","_initMarkup","addClass","_renderInput","_renderInputType","_renderPlaceholder","_renderProps","_renderValue","_renderLabel","_render","_refreshValueChangeEvent","_renderEvents","_renderEnterKeyAction","_renderEmptinessEvent","_$buttonsContainer","_$textEditorContainer","appendTo","_$textEditorInputContainer","append","_createInput","_renderButtonContainers","_getInputContainer","_renderPendingIndicator","$inputContainer","$indicatorElement","_pendingIndicator","_createComponent","_disposePendingIndicator","dispose","remove","removeClass","_renderValidationState","isPending","_showValidMark","toggleClass","renderBeforeButtons","renderAfterButtons","_cleanButtonContainers","_this$_$beforeButtons","_this$_$afterButtonsC","clean","_clean","_unobserveLabelContainerResize","$input","_applyInputAttributes","_setSubmitElementName","inputAttrName","customAttributes","inputAttributes","_getDefaultAttributes","attr","css","defaultAttributes","autocomplete","ios","mac","real","_updateButtons","names","updateButtons","_ref","buttonName","buttonInstance","getButton","renderInputPromise","_renderInputValue","promise","_value","displayValue","val","_renderDisplayText","_toggleEmptinessEventHandler","resolve","_isValueValid","length","validity","get","valid","_toggleEmptiness","isEmpty","_togglePlaceholder","_toggleReadOnlyState","_toggleSpellcheckState","_toggleTabIndex","_toggleDisabledState","prop","disabled","removeAttr","_readOnlyPropValue","unobserve","_getLabelContainer","_getLabelContainerWidth","_getLabelBeforeWidth","buttonsBeforeWidth","_updateLabelWidth","_label","updateBeforeWidth","updateMaxWidth","_setLabelContainerAria","setAria","getId","labelConfig","$editor","mark","containsButtonsBefore","containerWidth","beforeWidth","observe","bind","_renderPlaceholderMarkup","_attachPlaceholderEvents","_$placeholder","placeholderText","$placeholder","insertAfter","startEvent","up","NAME","on","trigger","_placeholder","_clearValueHandler","e","stopPropagation","_saveValueChangeEvent","_clearValue","reset","event","hasActionSubscription","action","_createActionByOption","excludeValidators","toLowerCase","_disposed","_refreshEvents","off","_keyPressHandler","_keyDownHandler","isCtrlEnter","ctrlKey","isNewValue","_getValueChangeEventOptionName","_renderValueChangeEvent","keyPressEvent","_renderValueEventName","keyDownEvent","_valueChangeEventHandler","_cleanValueChangeEvent","valueChangeNamespace","textChangeNamespace","_focusTarget","_focusEventTarget","element","_isInput","_preventNestedFocusEvent","isDefaultPrevented","shouldPrevent","_isNestedTarget","relatedTarget","type","target","_toggleFocusClass","preventDefault","_focusClassTarget","_focusInHandler","_focusOutHandler","isFocused","_hasFocusClass","formattedValue","_enterKeyAction","_enterKeyHandlerUp","_updateValue","_options","silent","_dispose","_getSubmitElement","_hasActiveElement","is","getActiveElement","_optionChanged","args","fullName","eventName","replace","includes","_refreshFocusEvent","_createValueChangeAction","updateText","updateMark","updateMode","updateContainsButtonsBefore","_invalidate","_setInputType","input","focus","defaultOptions","eventHandler","result","charAt","toUpperCase","substr"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/text_box/ui.text_editor.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.base.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    current,\r\n    isMaterial\r\n} from \"../themes\";\r\nimport devices from \"../../core/devices\";\r\nimport Editor from \"../editor/editor\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ClearButton from \"./ui.text_editor.clear\";\r\nimport TextEditorButtonCollection from \"./texteditor_button_collection/index\";\r\nimport config from \"../../core/config\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    TextEditorLabel\r\n} from \"./ui.text_editor.label\";\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport resizeObserverSingleton from \"../../core/resize_observer\";\r\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\r\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\r\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\r\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\r\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\r\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\r\nvar TextEditorLabelCreator = TextEditorLabel;\r\n\r\nfunction checkButtonsOptionType(buttons) {\r\n    if (isDefined(buttons) && !Array.isArray(buttons)) {\r\n        throw errors.Error(\"E1053\")\r\n    }\r\n}\r\nvar TextEditorBase = Editor.inherit({\r\n    ctor: function(_, options) {\r\n        if (options) {\r\n            checkButtonsOptionType(options.buttons)\r\n        }\r\n        this._buttonCollection = new TextEditorButtonCollection(this, this._getDefaultButtons());\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._labelContainerElement = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            buttons: void 0,\r\n            value: \"\",\r\n            spellcheck: false,\r\n            showClearButton: false,\r\n            valueChangeEvent: \"change\",\r\n            placeholder: \"\",\r\n            inputAttr: {},\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyDown: null,\r\n            onKeyUp: null,\r\n            onChange: null,\r\n            onInput: null,\r\n            onCut: null,\r\n            onCopy: null,\r\n            onPaste: null,\r\n            onEnterKey: null,\r\n            mode: \"text\",\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            text: void 0,\r\n            displayValueFormatter: function(value) {\r\n                return isDefined(value) && false !== value ? value : \"\"\r\n            },\r\n            stylingMode: config().editorStylingMode || \"outlined\",\r\n            showValidationMark: true,\r\n            label: \"\",\r\n            labelMode: \"static\",\r\n            labelMark: \"\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                var themeName = current();\r\n                return isMaterial(themeName)\r\n            },\r\n            options: {\r\n                stylingMode: config().editorStylingMode || \"filled\",\r\n                labelMode: \"floating\"\r\n            }\r\n        }])\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return [{\r\n            name: \"clear\",\r\n            Ctor: ClearButton\r\n        }]\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.option(\"showClearButton\") && !this.option(\"readOnly\")\r\n    },\r\n    _input: function() {\r\n        return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first()\r\n    },\r\n    _isFocused: function() {\r\n        return focused(this._input()) || this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element()\r\n    },\r\n    _buttonsContainer: function() {\r\n        return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0)\r\n    },\r\n    _isControlKey: function(key) {\r\n        return -1 !== CONTROL_KEYS.indexOf(key)\r\n    },\r\n    _renderStylingMode: function() {\r\n        this.callBase();\r\n        this._updateButtonsStyling(this.option(\"stylingMode\"))\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTEDITOR_CLASS);\r\n        this._renderInput();\r\n        this._renderStylingMode();\r\n        this._renderInputType();\r\n        this._renderPlaceholder();\r\n        this._renderProps();\r\n        this.callBase();\r\n        this._renderValue();\r\n        this._renderLabel()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._refreshValueChangeEvent();\r\n        this._renderEvents();\r\n        this._renderEnterKeyAction();\r\n        this._renderEmptinessEvent()\r\n    },\r\n    _renderInput: function() {\r\n        this._$buttonsContainer = this._$textEditorContainer = $(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\r\n        this._$textEditorInputContainer = $(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\r\n        this._$textEditorInputContainer.append(this._createInput());\r\n        this._renderButtonContainers()\r\n    },\r\n    _getInputContainer() {\r\n        return this._$textEditorInputContainer\r\n    },\r\n    _renderPendingIndicator: function() {\r\n        this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\r\n        var $inputContainer = this._getInputContainer();\r\n        var $indicatorElement = $(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\r\n        this._pendingIndicator = this._createComponent($indicatorElement, LoadIndicator)\r\n    },\r\n    _disposePendingIndicator: function() {\r\n        if (!this._pendingIndicator) {\r\n            return\r\n        }\r\n        this._pendingIndicator.dispose();\r\n        this._pendingIndicator.$element().remove();\r\n        this._pendingIndicator = null;\r\n        this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS)\r\n    },\r\n    _renderValidationState: function() {\r\n        this.callBase();\r\n        var isPending = \"pending\" === this.option(\"validationStatus\");\r\n        var $element = this.$element();\r\n        if (isPending) {\r\n            !this._pendingIndicator && this._renderPendingIndicator();\r\n            this._showValidMark = false\r\n        } else {\r\n            if (\"invalid\" === this.option(\"validationStatus\")) {\r\n                this._showValidMark = false\r\n            }\r\n            if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\r\n                this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator\r\n            }\r\n            this._disposePendingIndicator()\r\n        }\r\n        $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark)\r\n    },\r\n    _renderButtonContainers: function() {\r\n        var buttons = this.option(\"buttons\");\r\n        this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\r\n        this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer)\r\n    },\r\n    _cleanButtonContainers: function() {\r\n        var _this$_$beforeButtons, _this$_$afterButtonsC;\r\n        null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons.remove();\r\n        null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC.remove();\r\n        this._buttonCollection.clean()\r\n    },\r\n    _clean() {\r\n        this._buttonCollection.clean();\r\n        this._disposePendingIndicator();\r\n        this._unobserveLabelContainerResize();\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._$textEditorContainer = null;\r\n        this._$buttonsContainer = null;\r\n        this.callBase()\r\n    },\r\n    _createInput: function() {\r\n        var $input = $(\"<input>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var inputAttrName = this.option(\"inputAttr.name\");\r\n        return this.callBase(name || inputAttrName || \"\")\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        var inputAttributes = extend(this._getDefaultAttributes(), customAttributes);\r\n        $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\")\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var defaultAttributes = {\r\n            autocomplete: \"off\"\r\n        };\r\n        var {\r\n            ios: ios,\r\n            mac: mac\r\n        } = devices.real();\r\n        if (ios || mac) {\r\n            defaultAttributes.placeholder = \" \"\r\n        }\r\n        return defaultAttributes\r\n    },\r\n    _updateButtons: function(names) {\r\n        this._buttonCollection.updateButtons(names)\r\n    },\r\n    _updateButtonsStyling: function(editorStylingMode) {\r\n        each(this.option(\"buttons\"), (_, _ref) => {\r\n            var {\r\n                options: options,\r\n                name: buttonName\r\n            } = _ref;\r\n            if (options && !options.stylingMode && this.option(\"visible\")) {\r\n                var buttonInstance = this.getButton(buttonName);\r\n                buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\")\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        var renderInputPromise = this._renderInputValue();\r\n        return renderInputPromise.promise()\r\n    },\r\n    _renderInputValue: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\r\n        var text = this.option(\"text\");\r\n        var displayValue = this.option(\"displayValue\");\r\n        var displayValueFormatter = this.option(\"displayValueFormatter\");\r\n        if (void 0 !== displayValue && null !== value) {\r\n            text = displayValueFormatter(displayValue)\r\n        } else if (!isDefined(text)) {\r\n            text = displayValueFormatter(value)\r\n        }\r\n        this.option(\"text\", text);\r\n        if (this._input().val() !== (isDefined(text) ? text : \"\")) {\r\n            this._renderDisplayText(text)\r\n        } else {\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _isValueValid: function() {\r\n        if (this._input().length) {\r\n            var validity = this._input().get(0).validity;\r\n            if (validity) {\r\n                return validity.valid\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _toggleEmptiness: function(isEmpty) {\r\n        this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\r\n        this._togglePlaceholder(isEmpty)\r\n    },\r\n    _togglePlaceholder: function(isEmpty) {\r\n        this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty)\r\n    },\r\n    _renderProps: function() {\r\n        this._toggleReadOnlyState();\r\n        this._toggleSpellcheckState();\r\n        this._toggleTabIndex()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        var $input = this._input();\r\n        $input.prop(\"disabled\", value)\r\n    },\r\n    _toggleTabIndex: function() {\r\n        var $input = this._input();\r\n        var disabled = this.option(\"disabled\");\r\n        var focusStateEnabled = this.option(\"focusStateEnabled\");\r\n        if (disabled || !focusStateEnabled) {\r\n            $input.attr(\"tabIndex\", -1)\r\n        } else {\r\n            $input.removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this._input().prop(\"readOnly\", this._readOnlyPropValue());\r\n        this.callBase()\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.option(\"readOnly\")\r\n    },\r\n    _toggleSpellcheckState: function() {\r\n        this._input().prop(\"spellcheck\", this.option(\"spellcheck\"))\r\n    },\r\n    _unobserveLabelContainerResize: function() {\r\n        if (this._labelContainerElement) {\r\n            resizeObserverSingleton.unobserve(this._labelContainerElement);\r\n            this._labelContainerElement = null\r\n        }\r\n    },\r\n    _getLabelContainer: function() {\r\n        return this._input()\r\n    },\r\n    _getLabelContainerWidth: function() {\r\n        return getWidth(this._getLabelContainer())\r\n    },\r\n    _getLabelBeforeWidth: function() {\r\n        var buttonsBeforeWidth = this._$beforeButtonsContainer && getWidth(this._$beforeButtonsContainer);\r\n        return null !== buttonsBeforeWidth && void 0 !== buttonsBeforeWidth ? buttonsBeforeWidth : 0\r\n    },\r\n    _updateLabelWidth: function() {\r\n        this._label.updateBeforeWidth(this._getLabelBeforeWidth());\r\n        this._label.updateMaxWidth(this._getLabelContainerWidth())\r\n    },\r\n    _setLabelContainerAria: function() {\r\n        this.setAria(\"labelledby\", this._label.getId(), this._getLabelContainer())\r\n    },\r\n    _renderLabel: function() {\r\n        this._unobserveLabelContainerResize();\r\n        this._labelContainerElement = $(this._getLabelContainer()).get(0);\r\n        var {\r\n            label: label,\r\n            labelMode: labelMode,\r\n            labelMark: labelMark\r\n        } = this.option();\r\n        var labelConfig = {\r\n            $editor: this.$element(),\r\n            text: label,\r\n            mark: labelMark,\r\n            mode: labelMode,\r\n            containsButtonsBefore: !!this._$beforeButtonsContainer,\r\n            containerWidth: this._getLabelContainerWidth(),\r\n            beforeWidth: this._getLabelBeforeWidth()\r\n        };\r\n        this._label = new TextEditorLabelCreator(labelConfig);\r\n        this._setLabelContainerAria();\r\n        if (this._labelContainerElement) {\r\n            resizeObserverSingleton.observe(this._labelContainerElement, this._updateLabelWidth.bind(this))\r\n        }\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._renderPlaceholderMarkup();\r\n        this._attachPlaceholderEvents()\r\n    },\r\n    _renderPlaceholderMarkup: function() {\r\n        if (this._$placeholder) {\r\n            this._$placeholder.remove();\r\n            this._$placeholder = null\r\n        }\r\n        var $input = this._input();\r\n        var placeholderText = this.option(\"placeholder\");\r\n        var $placeholder = this._$placeholder = $(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\r\n        $placeholder.insertAfter($input);\r\n        $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS)\r\n    },\r\n    _attachPlaceholderEvents: function() {\r\n        var startEvent = addNamespace(pointerEvents.up, this.NAME);\r\n        eventsEngine.on(this._$placeholder, startEvent, () => {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        });\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _placeholder: function() {\r\n        return this._$placeholder || $()\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        var $input = this._input();\r\n        e.stopPropagation();\r\n        this._saveValueChangeEvent(e);\r\n        this._clearValue();\r\n        !this._isFocused() && eventsEngine.trigger($input, \"focus\");\r\n        eventsEngine.trigger($input, \"input\")\r\n    },\r\n    _clearValue: function() {\r\n        this.reset()\r\n    },\r\n    _renderEvents: function() {\r\n        var $input = this._input();\r\n        each(EVENTS_LIST, (_, event) => {\r\n            if (this.hasActionSubscription(\"on\" + event)) {\r\n                var action = this._createActionByOption(\"on\" + event, {\r\n                    excludeValidators: [\"readOnly\"]\r\n                });\r\n                eventsEngine.on($input, addNamespace(event.toLowerCase(), this.NAME), e => {\r\n                    if (this._disposed) {\r\n                        return\r\n                    }\r\n                    action({\r\n                        event: e\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _refreshEvents: function() {\r\n        var $input = this._input();\r\n        each(EVENTS_LIST, (_, event) => {\r\n            eventsEngine.off($input, addNamespace(event.toLowerCase(), this.NAME))\r\n        });\r\n        this._renderEvents()\r\n    },\r\n    _keyPressHandler: function() {\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var $input = this._input();\r\n        var isCtrlEnter = e.ctrlKey && \"enter\" === normalizeKeyName(e);\r\n        var isNewValue = $input.val() !== this.option(\"value\");\r\n        if (isCtrlEnter && isNewValue) {\r\n            eventsEngine.trigger($input, \"change\")\r\n        }\r\n    },\r\n    _getValueChangeEventOptionName: function() {\r\n        return \"valueChangeEvent\"\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        var keyPressEvent = addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\r\n        var valueChangeEvent = addNamespace(this.option(this._getValueChangeEventOptionName()), \"\".concat(this.NAME, \"ValueChange\"));\r\n        var keyDownEvent = addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\r\n        var $input = this._input();\r\n        eventsEngine.on($input, keyPressEvent, this._keyPressHandler.bind(this));\r\n        eventsEngine.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\r\n        eventsEngine.on($input, keyDownEvent, this._keyDownHandler.bind(this))\r\n    },\r\n    _cleanValueChangeEvent: function() {\r\n        var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\r\n        var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\r\n        eventsEngine.off(this._input(), valueChangeNamespace);\r\n        eventsEngine.off(this._input(), textChangeNamespace)\r\n    },\r\n    _refreshValueChangeEvent: function() {\r\n        this._cleanValueChangeEvent();\r\n        this._renderValueChangeEvent()\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input change keypress\"\r\n    },\r\n    _focusTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this.element()\r\n    },\r\n    _isInput: function(element) {\r\n        return element === this._input().get(0)\r\n    },\r\n    _preventNestedFocusEvent: function(event) {\r\n        if (event.isDefaultPrevented()) {\r\n            return true\r\n        }\r\n        var shouldPrevent = this._isNestedTarget(event.relatedTarget);\r\n        if (\"focusin\" === event.type) {\r\n            shouldPrevent = shouldPrevent && this._isNestedTarget(event.target) && !this._isInput(event.target)\r\n        } else if (!shouldPrevent) {\r\n            this._toggleFocusClass(false, this.$element())\r\n        }\r\n        shouldPrevent && event.preventDefault();\r\n        return shouldPrevent\r\n    },\r\n    _isNestedTarget: function(target) {\r\n        return !!this.$element().find(target).length\r\n    },\r\n    _focusClassTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _focusOutHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        this.callBase(isFocused, this._focusClassTarget($element))\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        return this.callBase($(element || this.$element()))\r\n    },\r\n    _renderEmptinessEvent: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this))\r\n    },\r\n    _toggleEmptinessEventHandler: function() {\r\n        var text = this._input().val();\r\n        var isEmpty = (\"\" === text || null === text) && this._isValueValid();\r\n        this._toggleEmptiness(isEmpty)\r\n    },\r\n    _valueChangeEventHandler: function(e, formattedValue) {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\r\n        this._saveValueChangeEvent(void 0)\r\n    },\r\n    _renderEnterKeyAction: function() {\r\n        this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        eventsEngine.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\r\n        eventsEngine.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this))\r\n    },\r\n    _enterKeyHandlerUp: function(e) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        if (\"enter\" === normalizeKeyName(e)) {\r\n            this._enterKeyAction({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        this._options.silent(\"text\", null);\r\n        this._renderValue()\r\n    },\r\n    _dispose: function() {\r\n        this._enterKeyAction = void 0;\r\n        this.callBase()\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._input()\r\n    },\r\n    _hasActiveElement: function() {\r\n        return this._input().is(domAdapter.getActiveElement(this._input()[0]))\r\n    },\r\n    _optionChanged: function(args) {\r\n        var {\r\n            name: name,\r\n            fullName: fullName,\r\n            value: value\r\n        } = args;\r\n        var eventName = name.replace(\"on\", \"\");\r\n        if (EVENTS_LIST.includes(eventName)) {\r\n            this._refreshEvents();\r\n            return\r\n        }\r\n        switch (name) {\r\n            case \"valueChangeEvent\":\r\n                this._refreshValueChangeEvent();\r\n                this._refreshFocusEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this.callBase(args);\r\n                this._toggleTabIndex();\r\n                break;\r\n            case \"spellcheck\":\r\n                this._toggleSpellcheckState();\r\n                break;\r\n            case \"mode\":\r\n                this._renderInputType();\r\n                break;\r\n            case \"onEnterKey\":\r\n                this._renderEnterKeyAction();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"label\":\r\n                this._label.updateText(value);\r\n                this._setLabelContainerAria();\r\n                break;\r\n            case \"labelMark\":\r\n                this._label.updateMark(value);\r\n                break;\r\n            case \"labelMode\":\r\n                this._label.updateMode(value);\r\n                this._setLabelContainerAria();\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._label.updateMaxWidth(this._getLabelContainerWidth());\r\n                break;\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateButtons();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showClearButton\":\r\n                this._updateButtons([\"clear\"]);\r\n                break;\r\n            case \"text\":\r\n                break;\r\n            case \"value\":\r\n                this._updateValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this._input(), this.option(name));\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderStylingMode();\r\n                this._updateLabelWidth();\r\n                break;\r\n            case \"buttons\":\r\n                if (fullName === name) {\r\n                    checkButtonsOptionType(value)\r\n                }\r\n                this._cleanButtonContainers();\r\n                this._renderButtonContainers();\r\n                this._updateButtonsStyling(this.option(\"stylingMode\"));\r\n                this._updateLabelWidth();\r\n                this._label.updateContainsButtonsBefore(!!this._$beforeButtonsContainer);\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (value && this.option(\"buttons\")) {\r\n                    this._cleanButtonContainers();\r\n                    this._renderButtonContainers();\r\n                    this._updateButtonsStyling(this.option(\"stylingMode\"))\r\n                }\r\n                break;\r\n            case \"displayValueFormatter\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationMark\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderInputType: function() {\r\n        this._setInputType(this.option(\"mode\"))\r\n    },\r\n    _setInputType: function(type) {\r\n        var input = this._input();\r\n        if (\"search\" === type) {\r\n            type = \"text\"\r\n        }\r\n        try {\r\n            input.prop(\"type\", type)\r\n        } catch (e) {\r\n            input.prop(\"type\", \"text\")\r\n        }\r\n    },\r\n    getButton(name) {\r\n        return this._buttonCollection.getButton(name)\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\")\r\n    },\r\n    reset: function() {\r\n        if (this._showValidMark) {\r\n            this._showValidMark = false;\r\n            this._renderValidationState()\r\n        }\r\n        var defaultOptions = this._getDefaultOptions();\r\n        if (this.option(\"value\") === defaultOptions.value) {\r\n            this._options.silent(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", defaultOptions.value)\r\n        }\r\n    },\r\n    on: function(eventName, eventHandler) {\r\n        var result = this.callBase(eventName, eventHandler);\r\n        var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\r\n        if (EVENTS_LIST.indexOf(event) >= 0) {\r\n            this._refreshEvents()\r\n        }\r\n        return result\r\n    }\r\n});\r\nexport default TextEditorBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}