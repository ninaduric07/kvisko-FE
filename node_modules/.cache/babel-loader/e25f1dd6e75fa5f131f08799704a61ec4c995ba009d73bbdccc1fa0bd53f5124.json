{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.6\n * Build date: Tue Apr 18 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsManager = exports.scheduleGuards = exports.unscheduleGuards = void 0;\n/* eslint-disable no-restricted-globals */\nvar comparer_1 = require(\"./configuration/comparer\");\nvar tree_1 = require(\"./configuration/tree\");\nvar utils_1 = require(\"./configuration/utils\");\nvar helpers_1 = require(\"./helpers\");\nvar optionsManagers = new Set();\nvar guardTimeoutHandler = -1;\nfunction unscheduleGuards() {\n  clearTimeout(guardTimeoutHandler);\n}\nexports.unscheduleGuards = unscheduleGuards;\nfunction scheduleGuards() {\n  unscheduleGuards();\n  guardTimeoutHandler = window.setTimeout(function () {\n    optionsManagers.forEach(function (optionManager) {\n      return optionManager.execGuards();\n    });\n  });\n}\nexports.scheduleGuards = scheduleGuards;\nvar OptionsManager = /** @class */function () {\n  function OptionsManager(templatesManager) {\n    this.guards = {};\n    this.isUpdating = false;\n    this.templatesManager = templatesManager;\n    optionsManagers.add(this);\n    this.onOptionChanged = this.onOptionChanged.bind(this);\n    this.wrapOptionValue = this.wrapOptionValue.bind(this);\n  }\n  OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\n    this.instance = instance;\n    this.currentConfig = config;\n    this.subscribableOptions = new Set(subscribableOptions);\n    this.independentEvents = new Set(independentEvents);\n  };\n  OptionsManager.prototype.getInitialOptions = function (rootNode) {\n    var _this = this;\n    var config = tree_1.buildConfig(rootNode, false);\n    Object.keys(config.templates).forEach(function (key) {\n      _this.templatesManager.add(key, config.templates[key]);\n    });\n    var options = {};\n    Object.keys(config.options).forEach(function (key) {\n      options[key] = _this.wrapOptionValue(key, config.options[key]);\n    });\n    if (this.templatesManager.templatesCount > 0) {\n      options.integrationOptions = {\n        templates: this.templatesManager.templates\n      };\n    }\n    return options;\n  };\n  OptionsManager.prototype.update = function (config) {\n    var _this = this;\n    var changedOptions = [];\n    var optionChangedHandler = function (_a) {\n      var value = _a.value,\n        fullName = _a.fullName;\n      changedOptions.push([fullName, value]);\n    };\n    this.instance.on('optionChanged', optionChangedHandler);\n    var changes = comparer_1.getChanges(config, this.currentConfig);\n    if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n      return;\n    }\n    this.instance.beginUpdate();\n    this.isUpdating = true;\n    changes.removedOptions.forEach(function (optionName) {\n      _this.resetOption(optionName);\n    });\n    Object.keys(changes.templates).forEach(function (key) {\n      _this.templatesManager.add(key, changes.templates[key]);\n    });\n    if (this.templatesManager.templatesCount > 0) {\n      this.setValue('integrationOptions', {\n        templates: this.templatesManager.templates\n      });\n    }\n    Object.keys(changes.options).forEach(function (key) {\n      _this.setValue(key, changes.options[key]);\n    });\n    this.isUpdating = false;\n    this.instance.off('optionChanged', optionChangedHandler);\n    this.currentConfig = config;\n    changedOptions.forEach(function (_a) {\n      var name = _a[0],\n        value = _a[1];\n      var currentPropValue = config.options[name];\n      if (Object.prototype.hasOwnProperty.call(config.options, name) && currentPropValue !== value) {\n        _this.setValue(name, currentPropValue);\n      }\n    });\n    this.instance.endUpdate();\n  };\n  OptionsManager.prototype.onOptionChanged = function (e) {\n    var _this = this;\n    var _a;\n    if (this.isUpdating) {\n      return;\n    }\n    var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n    if (!valueDescriptor || valueDescriptor.value !== e.value) {\n      this.callOptionChangeHandler(e.fullName, e.value);\n    }\n    valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n    if (!valueDescriptor) {\n      return;\n    }\n    var value = valueDescriptor.value,\n      type = valueDescriptor.type;\n    if (value instanceof Array && type === tree_1.ValueType.Array) {\n      for (var i = 0; i < value.length; i += 1) {\n        if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\n          this.addGuard(e.fullName, value);\n          return;\n        }\n      }\n    } else if (type === tree_1.ValueType.Complex && value instanceof Object) {\n      Object.keys(value).forEach(function (key) {\n        var _a;\n        if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\n          return;\n        }\n        _this.addGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n      });\n    } else {\n      var valuesAreEqual = value === e.value;\n      var valuesAreEqualObjects = !valuesAreEqual && value instanceof Object && e.value instanceof Object && utils_1.shallowEquals(value, e.value);\n      if (valuesAreEqual || valuesAreEqualObjects || this.instance.skipOptionsRollBack) {\n        return;\n      }\n      this.addGuard(e.fullName, value);\n    }\n  };\n  OptionsManager.prototype.dispose = function () {\n    var _this = this;\n    optionsManagers.delete(this);\n    Object.keys(this.guards).forEach(function (optionName) {\n      delete _this.guards[optionName];\n    });\n  };\n  OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n    return this.subscribableOptions.has(optionName);\n  };\n  OptionsManager.prototype.isIndependentEvent = function (optionName) {\n    return this.independentEvents.has(optionName);\n  };\n  OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n    if (!this.isOptionSubscribable(optionName)) {\n      return;\n    }\n    var parts = optionName.split('.');\n    var propName = parts[parts.length - 1];\n    if (propName.startsWith('on')) {\n      return;\n    }\n    var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n    parts[parts.length - 1] = eventName;\n    var changeEvent = tree_1.findValue(this.currentConfig, parts);\n    if (!changeEvent) {\n      return;\n    }\n    if (typeof changeEvent.value !== 'function') {\n      throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n    }\n    changeEvent.value(optionValue);\n  };\n  OptionsManager.prototype.wrapOptionValue = function (name, value) {\n    var _this = this;\n    if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!_this.isUpdating || _this.isIndependentEvent(name)) {\n          value.apply(void 0, args);\n        }\n      };\n    }\n    return value;\n  };\n  OptionsManager.prototype.addGuard = function (optionName, optionValue) {\n    var _this = this;\n    if (this.guards[optionName] !== undefined) {\n      return;\n    }\n    var handler = function () {\n      _this.setValue(optionName, optionValue);\n      delete _this.guards[optionName];\n    };\n    this.guards[optionName] = handler;\n    scheduleGuards();\n  };\n  OptionsManager.prototype.execGuards = function () {\n    Object.values(this.guards).forEach(function (handler) {\n      return handler();\n    });\n  };\n  OptionsManager.prototype.resetOption = function (name) {\n    this.instance.resetOption(name);\n  };\n  OptionsManager.prototype.setValue = function (name, value) {\n    if (this.guards[name]) {\n      delete this.guards[name];\n    }\n    this.instance.option(name, this.wrapOptionValue(name, value));\n  };\n  return OptionsManager;\n}();\nexports.OptionsManager = OptionsManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","OptionsManager","scheduleGuards","unscheduleGuards","comparer_1","require","tree_1","utils_1","helpers_1","optionsManagers","Set","guardTimeoutHandler","clearTimeout","window","setTimeout","forEach","optionManager","execGuards","templatesManager","guards","isUpdating","add","onOptionChanged","bind","wrapOptionValue","prototype","setInstance","instance","config","subscribableOptions","independentEvents","currentConfig","getInitialOptions","rootNode","_this","buildConfig","keys","templates","key","options","templatesCount","integrationOptions","update","changedOptions","optionChangedHandler","_a","fullName","push","on","changes","getChanges","removedOptions","length","beginUpdate","optionName","resetOption","setValue","off","name","currentPropValue","hasOwnProperty","call","endUpdate","e","valueDescriptor","findValue","split","callOptionChangeHandler","type","Array","ValueType","i","addGuard","Complex","mergeNameParts","valuesAreEqual","valuesAreEqualObjects","shallowEquals","skipOptionsRollBack","dispose","delete","isOptionSubscribable","has","isIndependentEvent","optionValue","parts","propName","startsWith","eventName","capitalizeFirstLetter","changeEvent","Error","substr","args","_i","arguments","apply","undefined","handler","values","option"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme-react/core/options-manager.js"],"sourcesContent":["/*!\n * devextreme-react\n * Version: 22.2.6\n * Build date: Tue Apr 18 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsManager = exports.scheduleGuards = exports.unscheduleGuards = void 0;\n/* eslint-disable no-restricted-globals */\nvar comparer_1 = require(\"./configuration/comparer\");\nvar tree_1 = require(\"./configuration/tree\");\nvar utils_1 = require(\"./configuration/utils\");\nvar helpers_1 = require(\"./helpers\");\nvar optionsManagers = new Set();\nvar guardTimeoutHandler = -1;\nfunction unscheduleGuards() {\n    clearTimeout(guardTimeoutHandler);\n}\nexports.unscheduleGuards = unscheduleGuards;\nfunction scheduleGuards() {\n    unscheduleGuards();\n    guardTimeoutHandler = window.setTimeout(function () {\n        optionsManagers.forEach(function (optionManager) { return optionManager.execGuards(); });\n    });\n}\nexports.scheduleGuards = scheduleGuards;\nvar OptionsManager = /** @class */ (function () {\n    function OptionsManager(templatesManager) {\n        this.guards = {};\n        this.isUpdating = false;\n        this.templatesManager = templatesManager;\n        optionsManagers.add(this);\n        this.onOptionChanged = this.onOptionChanged.bind(this);\n        this.wrapOptionValue = this.wrapOptionValue.bind(this);\n    }\n    OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\n        this.instance = instance;\n        this.currentConfig = config;\n        this.subscribableOptions = new Set(subscribableOptions);\n        this.independentEvents = new Set(independentEvents);\n    };\n    OptionsManager.prototype.getInitialOptions = function (rootNode) {\n        var _this = this;\n        var config = tree_1.buildConfig(rootNode, false);\n        Object.keys(config.templates).forEach(function (key) {\n            _this.templatesManager.add(key, config.templates[key]);\n        });\n        var options = {};\n        Object.keys(config.options).forEach(function (key) {\n            options[key] = _this.wrapOptionValue(key, config.options[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            options.integrationOptions = {\n                templates: this.templatesManager.templates,\n            };\n        }\n        return options;\n    };\n    OptionsManager.prototype.update = function (config) {\n        var _this = this;\n        var changedOptions = [];\n        var optionChangedHandler = function (_a) {\n            var value = _a.value, fullName = _a.fullName;\n            changedOptions.push([fullName, value]);\n        };\n        this.instance.on('optionChanged', optionChangedHandler);\n        var changes = comparer_1.getChanges(config, this.currentConfig);\n        if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n            return;\n        }\n        this.instance.beginUpdate();\n        this.isUpdating = true;\n        changes.removedOptions.forEach(function (optionName) {\n            _this.resetOption(optionName);\n        });\n        Object.keys(changes.templates).forEach(function (key) {\n            _this.templatesManager.add(key, changes.templates[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            this.setValue('integrationOptions', {\n                templates: this.templatesManager.templates,\n            });\n        }\n        Object.keys(changes.options).forEach(function (key) {\n            _this.setValue(key, changes.options[key]);\n        });\n        this.isUpdating = false;\n        this.instance.off('optionChanged', optionChangedHandler);\n        this.currentConfig = config;\n        changedOptions.forEach(function (_a) {\n            var name = _a[0], value = _a[1];\n            var currentPropValue = config.options[name];\n            if (Object.prototype.hasOwnProperty.call(config.options, name)\n                && currentPropValue !== value) {\n                _this.setValue(name, currentPropValue);\n            }\n        });\n        this.instance.endUpdate();\n    };\n    OptionsManager.prototype.onOptionChanged = function (e) {\n        var _this = this;\n        var _a;\n        if (this.isUpdating) {\n            return;\n        }\n        var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor || valueDescriptor.value !== e.value) {\n            this.callOptionChangeHandler(e.fullName, e.value);\n        }\n        valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor) {\n            return;\n        }\n        var value = valueDescriptor.value, type = valueDescriptor.type;\n        if (value instanceof Array && type === tree_1.ValueType.Array) {\n            for (var i = 0; i < value.length; i += 1) {\n                if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\n                    this.addGuard(e.fullName, value);\n                    return;\n                }\n            }\n        }\n        else if (type === tree_1.ValueType.Complex && value instanceof Object) {\n            Object.keys(value).forEach(function (key) {\n                var _a;\n                if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\n                    return;\n                }\n                _this.addGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n            });\n        }\n        else {\n            var valuesAreEqual = value === e.value;\n            var valuesAreEqualObjects = !valuesAreEqual\n                && value instanceof Object\n                && e.value instanceof Object\n                && utils_1.shallowEquals(value, e.value);\n            if (valuesAreEqual || valuesAreEqualObjects || this.instance.skipOptionsRollBack) {\n                return;\n            }\n            this.addGuard(e.fullName, value);\n        }\n    };\n    OptionsManager.prototype.dispose = function () {\n        var _this = this;\n        optionsManagers.delete(this);\n        Object.keys(this.guards).forEach(function (optionName) {\n            delete _this.guards[optionName];\n        });\n    };\n    OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n        return this.subscribableOptions.has(optionName);\n    };\n    OptionsManager.prototype.isIndependentEvent = function (optionName) {\n        return this.independentEvents.has(optionName);\n    };\n    OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n        if (!this.isOptionSubscribable(optionName)) {\n            return;\n        }\n        var parts = optionName.split('.');\n        var propName = parts[parts.length - 1];\n        if (propName.startsWith('on')) {\n            return;\n        }\n        var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n        parts[parts.length - 1] = eventName;\n        var changeEvent = tree_1.findValue(this.currentConfig, parts);\n        if (!changeEvent) {\n            return;\n        }\n        if (typeof changeEvent.value !== 'function') {\n            throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n        }\n        changeEvent.value(optionValue);\n    };\n    OptionsManager.prototype.wrapOptionValue = function (name, value) {\n        var _this = this;\n        if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (!_this.isUpdating || _this.isIndependentEvent(name)) {\n                    value.apply(void 0, args);\n                }\n            };\n        }\n        return value;\n    };\n    OptionsManager.prototype.addGuard = function (optionName, optionValue) {\n        var _this = this;\n        if (this.guards[optionName] !== undefined) {\n            return;\n        }\n        var handler = function () {\n            _this.setValue(optionName, optionValue);\n            delete _this.guards[optionName];\n        };\n        this.guards[optionName] = handler;\n        scheduleGuards();\n    };\n    OptionsManager.prototype.execGuards = function () {\n        Object.values(this.guards)\n            .forEach(function (handler) { return handler(); });\n    };\n    OptionsManager.prototype.resetOption = function (name) {\n        this.instance.resetOption(name);\n    };\n    OptionsManager.prototype.setValue = function (name, value) {\n        if (this.guards[name]) {\n            delete this.guards[name];\n        }\n        this.instance.option(name, this.wrapOptionValue(name, value));\n    };\n    return OptionsManager;\n}());\nexports.OptionsManager = OptionsManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}