{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Guid from \"../../core/guid\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isString } from \"../../core/utils/type\";\nexport default class FormItemsRunTimeInfo {\n  constructor() {\n    this._map = {};\n  }\n  _findWidgetInstance(condition) {\n    var result;\n    each(this._map, function (guid, _ref) {\n      var {\n        widgetInstance: widgetInstance,\n        item: item\n      } = _ref;\n      if (condition(item)) {\n        result = widgetInstance;\n        return false;\n      }\n    });\n    return result;\n  }\n  _findFieldByCondition(callback, valueExpr) {\n    var result;\n    each(this._map, function (key, value) {\n      if (callback(value)) {\n        result = \"guid\" === valueExpr ? key : value[valueExpr];\n        return false;\n      }\n    });\n    return result;\n  }\n  clear() {\n    this._map = {};\n  }\n  removeItemsByItems(itemsRunTimeInfo) {\n    each(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid));\n  }\n  removeItemByKey(key) {\n    delete this._map[key];\n  }\n  add(options) {\n    var key = options.guid || new Guid();\n    this._map[key] = options;\n    return key;\n  }\n  addItemsOrExtendFrom(itemsRunTimeInfo) {\n    itemsRunTimeInfo.each((key, itemRunTimeInfo) => {\n      if (this._map[key]) {\n        if (itemRunTimeInfo.widgetInstance) {\n          this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance;\n        }\n        this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer;\n      } else {\n        this.add({\n          item: itemRunTimeInfo.item,\n          widgetInstance: itemRunTimeInfo.widgetInstance,\n          guid: key,\n          $itemContainer: itemRunTimeInfo.$itemContainer\n        });\n      }\n    });\n  }\n  extendRunTimeItemInfoByKey(key, options) {\n    if (this._map[key]) {\n      this._map[key] = extend(this._map[key], options);\n    }\n  }\n  findWidgetInstanceByItem(item) {\n    return this._findWidgetInstance(storedItem => storedItem === item);\n  }\n  findGroupOrTabLayoutManagerByPath(targetPath) {\n    return this._findFieldByCondition(_ref2 => {\n      var {\n        path: path\n      } = _ref2;\n      return path === targetPath;\n    }, \"layoutManager\");\n  }\n  findKeyByPath(targetPath) {\n    return this._findFieldByCondition(_ref3 => {\n      var {\n        path: path\n      } = _ref3;\n      return path === targetPath;\n    }, \"guid\");\n  }\n  findWidgetInstanceByName(name) {\n    return this._findWidgetInstance(item => name === item.name);\n  }\n  findWidgetInstanceByDataField(dataField) {\n    return this._findWidgetInstance(item => dataField === (isString(item) ? item : item.dataField));\n  }\n  findItemContainerByItem(item) {\n    for (var key in this._map) {\n      if (this._map[key].item === item) {\n        return this._map[key].$itemContainer;\n      }\n    }\n    return null;\n  }\n  findItemIndexByItem(targetItem) {\n    return this._findFieldByCondition(_ref4 => {\n      var {\n        item: item\n      } = _ref4;\n      return item === targetItem;\n    }, \"itemIndex\");\n  }\n  findPreparedItemByItem(item) {\n    return this._findFieldByCondition(_ref5 => {\n      var {\n        item: currentItem\n      } = _ref5;\n      return currentItem === item;\n    }, \"preparedItem\");\n  }\n  getItems() {\n    return this._map;\n  }\n  each(handler) {\n    each(this._map, function (key, itemRunTimeInfo) {\n      handler(key, itemRunTimeInfo);\n    });\n  }\n  removeItemsByPathStartWith(path) {\n    var keys = Object.keys(this._map);\n    var filteredKeys = keys.filter(key => {\n      if (this._map[key].path) {\n        return this._map[key].path.indexOf(path, 0) > -1;\n      }\n      return false;\n    });\n    filteredKeys.forEach(key => this.removeItemByKey(key));\n  }\n}","map":{"version":3,"names":["Guid","each","extend","isString","FormItemsRunTimeInfo","constructor","_map","_findWidgetInstance","condition","result","guid","_ref","widgetInstance","item","_findFieldByCondition","callback","valueExpr","key","value","clear","removeItemsByItems","itemsRunTimeInfo","getItems","removeItemByKey","add","options","addItemsOrExtendFrom","itemRunTimeInfo","$itemContainer","extendRunTimeItemInfoByKey","findWidgetInstanceByItem","storedItem","findGroupOrTabLayoutManagerByPath","targetPath","_ref2","path","findKeyByPath","_ref3","findWidgetInstanceByName","name","findWidgetInstanceByDataField","dataField","findItemContainerByItem","findItemIndexByItem","targetItem","_ref4","findPreparedItemByItem","_ref5","currentItem","handler","removeItemsByPathStartWith","keys","Object","filteredKeys","filter","indexOf","forEach"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/ui/form/ui.form.items_runtime_info.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isString\r\n} from \"../../core/utils/type\";\r\nexport default class FormItemsRunTimeInfo {\r\n    constructor() {\r\n        this._map = {}\r\n    }\r\n    _findWidgetInstance(condition) {\r\n        var result;\r\n        each(this._map, (function(guid, _ref) {\r\n            var {\r\n                widgetInstance: widgetInstance,\r\n                item: item\r\n            } = _ref;\r\n            if (condition(item)) {\r\n                result = widgetInstance;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _findFieldByCondition(callback, valueExpr) {\r\n        var result;\r\n        each(this._map, (function(key, value) {\r\n            if (callback(value)) {\r\n                result = \"guid\" === valueExpr ? key : value[valueExpr];\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    clear() {\r\n        this._map = {}\r\n    }\r\n    removeItemsByItems(itemsRunTimeInfo) {\r\n        each(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid))\r\n    }\r\n    removeItemByKey(key) {\r\n        delete this._map[key]\r\n    }\r\n    add(options) {\r\n        var key = options.guid || new Guid;\r\n        this._map[key] = options;\r\n        return key\r\n    }\r\n    addItemsOrExtendFrom(itemsRunTimeInfo) {\r\n        itemsRunTimeInfo.each((key, itemRunTimeInfo) => {\r\n            if (this._map[key]) {\r\n                if (itemRunTimeInfo.widgetInstance) {\r\n                    this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance\r\n                }\r\n                this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer\r\n            } else {\r\n                this.add({\r\n                    item: itemRunTimeInfo.item,\r\n                    widgetInstance: itemRunTimeInfo.widgetInstance,\r\n                    guid: key,\r\n                    $itemContainer: itemRunTimeInfo.$itemContainer\r\n                })\r\n            }\r\n        })\r\n    }\r\n    extendRunTimeItemInfoByKey(key, options) {\r\n        if (this._map[key]) {\r\n            this._map[key] = extend(this._map[key], options)\r\n        }\r\n    }\r\n    findWidgetInstanceByItem(item) {\r\n        return this._findWidgetInstance(storedItem => storedItem === item)\r\n    }\r\n    findGroupOrTabLayoutManagerByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref2 => {\r\n            var {\r\n                path: path\r\n            } = _ref2;\r\n            return path === targetPath\r\n        }, \"layoutManager\")\r\n    }\r\n    findKeyByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref3 => {\r\n            var {\r\n                path: path\r\n            } = _ref3;\r\n            return path === targetPath\r\n        }, \"guid\")\r\n    }\r\n    findWidgetInstanceByName(name) {\r\n        return this._findWidgetInstance(item => name === item.name)\r\n    }\r\n    findWidgetInstanceByDataField(dataField) {\r\n        return this._findWidgetInstance(item => dataField === (isString(item) ? item : item.dataField))\r\n    }\r\n    findItemContainerByItem(item) {\r\n        for (var key in this._map) {\r\n            if (this._map[key].item === item) {\r\n                return this._map[key].$itemContainer\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    findItemIndexByItem(targetItem) {\r\n        return this._findFieldByCondition(_ref4 => {\r\n            var {\r\n                item: item\r\n            } = _ref4;\r\n            return item === targetItem\r\n        }, \"itemIndex\")\r\n    }\r\n    findPreparedItemByItem(item) {\r\n        return this._findFieldByCondition(_ref5 => {\r\n            var {\r\n                item: currentItem\r\n            } = _ref5;\r\n            return currentItem === item\r\n        }, \"preparedItem\")\r\n    }\r\n    getItems() {\r\n        return this._map\r\n    }\r\n    each(handler) {\r\n        each(this._map, (function(key, itemRunTimeInfo) {\r\n            handler(key, itemRunTimeInfo)\r\n        }))\r\n    }\r\n    removeItemsByPathStartWith(path) {\r\n        var keys = Object.keys(this._map);\r\n        var filteredKeys = keys.filter(key => {\r\n            if (this._map[key].path) {\r\n                return this._map[key].path.indexOf(path, 0) > -1\r\n            }\r\n            return false\r\n        });\r\n        filteredKeys.forEach(key => this.removeItemByKey(key))\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}