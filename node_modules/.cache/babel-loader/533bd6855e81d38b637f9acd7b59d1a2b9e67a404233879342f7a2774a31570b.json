{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/column_state_mixin/module.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../../core/renderer\";\nimport { noop } from \"../../../../core/utils/common\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport { getDefaultAlignment } from \"../../../../core/utils/position\";\nconst COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\nconst GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\nexport default {\n  _applyColumnState(options) {\n    var _a;\n    const rtlEnabled = this.option(\"rtlEnabled\");\n    const columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\n    const parameters = extend(true, {\n      columnAlignment: columnAlignment\n    }, options);\n    const isGroupPanelItem = parameters.rootElement.hasClass(\"dx-group-panel-item\");\n    const $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\n    const $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\n    const columnsController = null === (_a = this.component) || void 0 === _a ? void 0 : _a.getController(\"columns\");\n    const indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\n    parameters.container = $indicatorsContainer;\n    parameters.indicator = $span;\n    this._renderIndicator(parameters);\n    $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\n    return $span;\n  },\n  _getIndicatorClassName: noop,\n  _getColumnAlignment(alignment, rtlEnabled) {\n    rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\n    return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled);\n  },\n  _createIndicatorContainer(options, ignoreIndicatorAlignment) {\n    let $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\n    const indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\n    if (!$indicatorsContainer.length) {\n      $indicatorsContainer = $(\"<div>\").addClass(\"dx-column-indicators\");\n    }\n    this.setAria(\"role\", \"presentation\", $indicatorsContainer);\n    return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null);\n  },\n  _getIndicatorContainer: $cell => $cell && $cell.find(\".dx-column-indicators\"),\n  _getIndicatorElements($cell) {\n    const $indicatorContainer = this._getIndicatorContainer($cell);\n    return $indicatorContainer && $indicatorContainer.children();\n  },\n  _renderIndicator(options) {\n    const $container = options.container;\n    const $indicator = options.indicator;\n    $container && $indicator && $container.append($indicator);\n  },\n  _updateIndicators(indicatorName) {\n    const that = this;\n    const columns = that.getColumns();\n    const $cells = that.getColumnElements();\n    let $cell;\n    if (!$cells || columns.length !== $cells.length) {\n      return;\n    }\n    for (let i = 0; i < columns.length; i++) {\n      $cell = $cells.eq(i);\n      that._updateIndicator($cell, columns[i], indicatorName);\n      const rowOptions = $cell.parent().data(\"options\");\n      if (rowOptions && rowOptions.cells) {\n        rowOptions.cells[$cell.index()].column = columns[i];\n      }\n    }\n  },\n  _updateIndicator($cell, column, indicatorName) {\n    if (!column.command) {\n      return this._applyColumnState({\n        name: indicatorName,\n        rootElement: $cell,\n        column: column,\n        showColumnLines: this.option(\"showColumnLines\")\n      });\n    }\n  }\n};","map":{"version":3,"names":["$","noop","extend","getDefaultAlignment","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","options","_a","rtlEnabled","option","columnAlignment","_getColumnAlignment","column","alignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","addClass","_getIndicatorClassName","name","columnsController","component","getController","indicatorAlignment","getHeaderContentAlignment","container","indicator","_renderIndicator","showColumnLines","ignoreIndicatorAlignment","_getIndicatorContainer","length","setAria","css","$cell","find","_getIndicatorElements","$indicatorContainer","children","$container","$indicator","append","_updateIndicators","indicatorName","that","columns","getColumns","$cells","getColumnElements","i","eq","_updateIndicator","rowOptions","parent","data","cells","index","command"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/__internal/grids/grid_core/column_state_mixin/module.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/column_state_mixin/module.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../../../core/utils/position\";\r\nconst COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nconst GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState(options) {\r\n        var _a;\r\n        const rtlEnabled = this.option(\"rtlEnabled\");\r\n        const columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        const parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        const isGroupPanelItem = parameters.rootElement.hasClass(\"dx-group-panel-item\");\r\n        const $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        const $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        const columnsController = null === (_a = this.component) || void 0 === _a ? void 0 : _a.getController(\"columns\");\r\n        const indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer(options, ignoreIndicatorAlignment) {\r\n        let $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        const indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(\"dx-column-indicators\")\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: $cell => $cell && $cell.find(\".dx-column-indicators\"),\r\n    _getIndicatorElements($cell) {\r\n        const $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator(options) {\r\n        const $container = options.container;\r\n        const $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators(indicatorName) {\r\n        const that = this;\r\n        const columns = that.getColumns();\r\n        const $cells = that.getColumnElements();\r\n        let $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (let i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            that._updateIndicator($cell, columns[i], indicatorName);\r\n            const rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}