{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/remote_query.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport queryAdapters from \"./query_adapters\";\nimport { errors, handleError } from \"./errors\";\nimport { each } from \"../core/utils/iterator\";\nimport { isFunction } from \"../core/utils/type\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport arrayQueryImpl from \"./array_query\";\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\n  tasks = tasks || [];\n  queryOptions = queryOptions || {};\n  var createTask = function (name, args) {\n    return {\n      name: name,\n      args: args\n    };\n  };\n  var exec = function (executorTask) {\n    var d = new Deferred();\n    var _adapterFactory;\n    var _adapter;\n    var _taskQueue;\n    var _currentTask;\n    var _mergedSortArgs;\n    var rejectWithNotify = function (error) {\n      var handler = queryOptions.errorHandler;\n      if (handler) {\n        handler(error);\n      }\n      handleError(error);\n      d.reject(error);\n    };\n    function mergeSortTask(task) {\n      switch (task.name) {\n        case \"sortBy\":\n          _mergedSortArgs = [task.args];\n          return true;\n        case \"thenBy\":\n          if (!_mergedSortArgs) {\n            throw errors.Error(\"E4004\");\n          }\n          _mergedSortArgs.push(task.args);\n          return true;\n      }\n      return false;\n    }\n    try {\n      _adapterFactory = queryOptions.adapter;\n      if (!isFunction(_adapterFactory)) {\n        _adapterFactory = queryAdapters[_adapterFactory];\n      }\n      _adapter = _adapterFactory(queryOptions);\n      _taskQueue = [].concat(tasks).concat(executorTask);\n      var optimize = _adapter.optimize;\n      if (optimize) {\n        optimize(_taskQueue);\n      }\n      while (_taskQueue.length) {\n        _currentTask = _taskQueue[0];\n        if (!mergeSortTask(_currentTask)) {\n          if (_mergedSortArgs) {\n            _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\n            _mergedSortArgs = null;\n            continue;\n          }\n          if (\"enumerate\" !== String(_currentTask.name)) {\n            if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\n              break;\n            }\n          }\n        }\n        _taskQueue.shift();\n      }\n      !function () {\n        var head = _taskQueue[0];\n        var unmergedTasks = [];\n        if (head && \"multiSort\" === head.name) {\n          _taskQueue.shift();\n          each(head.args[0], function () {\n            unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this));\n          });\n        }\n        _taskQueue = unmergedTasks.concat(_taskQueue);\n      }();\n      _adapter.exec(url).done(function (result, extra) {\n        if (!_taskQueue.length) {\n          d.resolve(result, extra);\n        } else {\n          var clientChain = arrayQueryImpl(result, {\n            errorHandler: queryOptions.errorHandler\n          });\n          each(_taskQueue, function () {\n            clientChain = clientChain[this.name].apply(clientChain, this.args);\n          });\n          clientChain.done(d.resolve).fail(d.reject);\n        }\n      }).fail(rejectWithNotify);\n    } catch (x) {\n      rejectWithNotify(x);\n    }\n    return d.promise();\n  };\n  var query = {};\n  each([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], function () {\n    var name = String(this);\n    query[name] = function () {\n      return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)));\n    };\n  });\n  each([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], function () {\n    var name = String(this);\n    query[name] = function () {\n      return exec.call(this, createTask(name, arguments));\n    };\n  });\n  return query;\n};\nexport default remoteQueryImpl;","map":{"version":3,"names":["queryAdapters","errors","handleError","each","isFunction","Deferred","arrayQueryImpl","remoteQueryImpl","url","queryOptions","tasks","createTask","name","args","exec","executorTask","d","_adapterFactory","_adapter","_taskQueue","_currentTask","_mergedSortArgs","rejectWithNotify","error","handler","errorHandler","reject","mergeSortTask","task","Error","push","adapter","concat","optimize","length","unshift","String","apply","shift","head","unmergedTasks","done","result","extra","resolve","clientChain","fail","x","promise","query","arguments","call"],"sources":["C:/Users/ninad/OneDrive/Radna povr≈°ina/zavrsni/client/node_modules/devextreme/esm/data/remote_query.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/data/remote_query.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport queryAdapters from \"./query_adapters\";\r\nimport {\r\n    errors,\r\n    handleError\r\n} from \"./errors\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport arrayQueryImpl from \"./array_query\";\r\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\r\n    tasks = tasks || [];\r\n    queryOptions = queryOptions || {};\r\n    var createTask = function(name, args) {\r\n        return {\r\n            name: name,\r\n            args: args\r\n        }\r\n    };\r\n    var exec = function(executorTask) {\r\n        var d = new Deferred;\r\n        var _adapterFactory;\r\n        var _adapter;\r\n        var _taskQueue;\r\n        var _currentTask;\r\n        var _mergedSortArgs;\r\n        var rejectWithNotify = function(error) {\r\n            var handler = queryOptions.errorHandler;\r\n            if (handler) {\r\n                handler(error)\r\n            }\r\n            handleError(error);\r\n            d.reject(error)\r\n        };\r\n\r\n        function mergeSortTask(task) {\r\n            switch (task.name) {\r\n                case \"sortBy\":\r\n                    _mergedSortArgs = [task.args];\r\n                    return true;\r\n                case \"thenBy\":\r\n                    if (!_mergedSortArgs) {\r\n                        throw errors.Error(\"E4004\")\r\n                    }\r\n                    _mergedSortArgs.push(task.args);\r\n                    return true\r\n            }\r\n            return false\r\n        }\r\n        try {\r\n            _adapterFactory = queryOptions.adapter;\r\n            if (!isFunction(_adapterFactory)) {\r\n                _adapterFactory = queryAdapters[_adapterFactory]\r\n            }\r\n            _adapter = _adapterFactory(queryOptions);\r\n            _taskQueue = [].concat(tasks).concat(executorTask);\r\n            var optimize = _adapter.optimize;\r\n            if (optimize) {\r\n                optimize(_taskQueue)\r\n            }\r\n            while (_taskQueue.length) {\r\n                _currentTask = _taskQueue[0];\r\n                if (!mergeSortTask(_currentTask)) {\r\n                    if (_mergedSortArgs) {\r\n                        _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\r\n                        _mergedSortArgs = null;\r\n                        continue\r\n                    }\r\n                    if (\"enumerate\" !== String(_currentTask.name)) {\r\n                        if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                _taskQueue.shift()\r\n            }! function() {\r\n                var head = _taskQueue[0];\r\n                var unmergedTasks = [];\r\n                if (head && \"multiSort\" === head.name) {\r\n                    _taskQueue.shift();\r\n                    each(head.args[0], (function() {\r\n                        unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this))\r\n                    }))\r\n                }\r\n                _taskQueue = unmergedTasks.concat(_taskQueue)\r\n            }();\r\n            _adapter.exec(url).done((function(result, extra) {\r\n                if (!_taskQueue.length) {\r\n                    d.resolve(result, extra)\r\n                } else {\r\n                    var clientChain = arrayQueryImpl(result, {\r\n                        errorHandler: queryOptions.errorHandler\r\n                    });\r\n                    each(_taskQueue, (function() {\r\n                        clientChain = clientChain[this.name].apply(clientChain, this.args)\r\n                    }));\r\n                    clientChain.done(d.resolve).fail(d.reject)\r\n                }\r\n            })).fail(rejectWithNotify)\r\n        } catch (x) {\r\n            rejectWithNotify(x)\r\n        }\r\n        return d.promise()\r\n    };\r\n    var query = {};\r\n    each([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], (function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)))\r\n        }\r\n    }));\r\n    each([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], (function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return exec.call(this, createTask(name, arguments))\r\n        }\r\n    }));\r\n    return query\r\n};\r\nexport default remoteQueryImpl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}