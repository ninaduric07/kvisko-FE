{"ast":null,"code":"/**\r\n * DevExtreme (esm/localization/currency.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../core/utils/extend\";\nexport default {\n  _formatNumberCore: function (value, format, formatConfig) {\n    if (\"currency\" === format) {\n      formatConfig.precision = formatConfig.precision || 0;\n      var result = this.format(value, extend({}, formatConfig, {\n        type: \"fixedpoint\"\n      }));\n      var currencyPart = this.getCurrencySymbol().symbol.replace(/\\$/g, \"$$$$\");\n      result = result.replace(/^(\\D*)(\\d.*)/, \"$1\" + currencyPart + \"$2\");\n      return result;\n    }\n    return this.callBase.apply(this, arguments);\n  },\n  getCurrencySymbol: function () {\n    return {\n      symbol: \"$\"\n    };\n  },\n  getOpenXmlCurrencyFormat: function () {\n    return \"$#,##0{0}_);\\\\($#,##0{0}\\\\)\";\n  }\n};","map":{"version":3,"names":["extend","_formatNumberCore","value","format","formatConfig","precision","result","type","currencyPart","getCurrencySymbol","symbol","replace","callBase","apply","arguments","getOpenXmlCurrencyFormat"],"sources":["C:/Users/ninad/OneDrive/Radna povr≈°ina/zavrsni/client/node_modules/devextreme/esm/localization/currency.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/localization/currency.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nexport default {\r\n    _formatNumberCore: function(value, format, formatConfig) {\r\n        if (\"currency\" === format) {\r\n            formatConfig.precision = formatConfig.precision || 0;\r\n            var result = this.format(value, extend({}, formatConfig, {\r\n                type: \"fixedpoint\"\r\n            }));\r\n            var currencyPart = this.getCurrencySymbol().symbol.replace(/\\$/g, \"$$$$\");\r\n            result = result.replace(/^(\\D*)(\\d.*)/, \"$1\" + currencyPart + \"$2\");\r\n            return result\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    getCurrencySymbol: function() {\r\n        return {\r\n            symbol: \"$\"\r\n        }\r\n    },\r\n    getOpenXmlCurrencyFormat: function() {\r\n        return \"$#,##0{0}_);\\\\($#,##0{0}\\\\)\"\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MAAM,QACH,sBAAsB;AAC7B,eAAe;EACXC,iBAAiB,EAAE,SAAAA,CAASC,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAE;IACrD,IAAI,UAAU,KAAKD,MAAM,EAAE;MACvBC,YAAY,CAACC,SAAS,GAAGD,YAAY,CAACC,SAAS,IAAI,CAAC;MACpD,IAAIC,MAAM,GAAG,IAAI,CAACH,MAAM,CAACD,KAAK,EAAEF,MAAM,CAAC,CAAC,CAAC,EAAEI,YAAY,EAAE;QACrDG,IAAI,EAAE;MACV,CAAC,CAAC,CAAC;MACH,IAAIC,YAAY,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;MACzEL,MAAM,GAAGA,MAAM,CAACK,OAAO,CAAC,cAAc,EAAE,IAAI,GAAGH,YAAY,GAAG,IAAI,CAAC;MACnE,OAAOF,MAAM;IACjB;IACA,OAAO,IAAI,CAACM,QAAQ,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC/C,CAAC;EACDL,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO;MACHC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDK,wBAAwB,EAAE,SAAAA,CAAA,EAAW;IACjC,OAAO,6BAA6B;EACxC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}