{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/public_component.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { data as elementData } from \"../../core/element_data\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined } from \"./type\";\nimport { removeEvent } from \"../../events/remove\";\nvar COMPONENT_NAMES_DATA_KEY = \"dxComponents\";\nvar ANONYMOUS_COMPONENT_DATA_KEY = \"dxPrivateComponent\";\nvar componentNames = new WeakMap();\nvar nextAnonymousComponent = 0;\nvar getName = function (componentClass, newName) {\n  if (isDefined(newName)) {\n    componentNames.set(componentClass, newName);\n    return;\n  }\n  if (!componentNames.has(componentClass)) {\n    var generatedName = ANONYMOUS_COMPONENT_DATA_KEY + nextAnonymousComponent++;\n    componentNames.set(componentClass, generatedName);\n    return generatedName;\n  }\n  return componentNames.get(componentClass);\n};\nexport function attachInstanceToElement($element, componentInstance, disposeFn) {\n  var data = elementData($element.get(0));\n  var name = getName(componentInstance.constructor);\n  data[name] = componentInstance;\n  if (disposeFn) {\n    eventsEngine.one($element, removeEvent, function () {\n      disposeFn.call(componentInstance);\n    });\n  }\n  if (!data[COMPONENT_NAMES_DATA_KEY]) {\n    data[COMPONENT_NAMES_DATA_KEY] = [];\n  }\n  data[COMPONENT_NAMES_DATA_KEY].push(name);\n}\nexport function getInstanceByElement($element, componentClass) {\n  var name = getName(componentClass);\n  return elementData($element.get(0), name);\n}\nexport { getName as name };","map":{"version":3,"names":["data","elementData","eventsEngine","isDefined","removeEvent","COMPONENT_NAMES_DATA_KEY","ANONYMOUS_COMPONENT_DATA_KEY","componentNames","WeakMap","nextAnonymousComponent","getName","componentClass","newName","set","has","generatedName","get","attachInstanceToElement","$element","componentInstance","disposeFn","name","constructor","one","call","push","getInstanceByElement"],"sources":["C:/Users/ninad/OneDrive/Radna povr≈°ina/zavrsni/client/node_modules/devextreme/esm/core/utils/public_component.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/public_component.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"./type\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nvar COMPONENT_NAMES_DATA_KEY = \"dxComponents\";\r\nvar ANONYMOUS_COMPONENT_DATA_KEY = \"dxPrivateComponent\";\r\nvar componentNames = new WeakMap;\r\nvar nextAnonymousComponent = 0;\r\nvar getName = function(componentClass, newName) {\r\n    if (isDefined(newName)) {\r\n        componentNames.set(componentClass, newName);\r\n        return\r\n    }\r\n    if (!componentNames.has(componentClass)) {\r\n        var generatedName = ANONYMOUS_COMPONENT_DATA_KEY + nextAnonymousComponent++;\r\n        componentNames.set(componentClass, generatedName);\r\n        return generatedName\r\n    }\r\n    return componentNames.get(componentClass)\r\n};\r\nexport function attachInstanceToElement($element, componentInstance, disposeFn) {\r\n    var data = elementData($element.get(0));\r\n    var name = getName(componentInstance.constructor);\r\n    data[name] = componentInstance;\r\n    if (disposeFn) {\r\n        eventsEngine.one($element, removeEvent, (function() {\r\n            disposeFn.call(componentInstance)\r\n        }))\r\n    }\r\n    if (!data[COMPONENT_NAMES_DATA_KEY]) {\r\n        data[COMPONENT_NAMES_DATA_KEY] = []\r\n    }\r\n    data[COMPONENT_NAMES_DATA_KEY].push(name)\r\n}\r\nexport function getInstanceByElement($element, componentClass) {\r\n    var name = getName(componentClass);\r\n    return elementData($element.get(0), name)\r\n}\r\nexport {\r\n    getName as name\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,IAAI,IAAIC,WAAW,QAChB,yBAAyB;AAChC,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SACIC,SAAS,QACN,QAAQ;AACf,SACIC,WAAW,QACR,qBAAqB;AAC5B,IAAIC,wBAAwB,GAAG,cAAc;AAC7C,IAAIC,4BAA4B,GAAG,oBAAoB;AACvD,IAAIC,cAAc,GAAG,IAAIC,OAAO,CAAD,CAAC;AAChC,IAAIC,sBAAsB,GAAG,CAAC;AAC9B,IAAIC,OAAO,GAAG,SAAAA,CAASC,cAAc,EAAEC,OAAO,EAAE;EAC5C,IAAIT,SAAS,CAACS,OAAO,CAAC,EAAE;IACpBL,cAAc,CAACM,GAAG,CAACF,cAAc,EAAEC,OAAO,CAAC;IAC3C;EACJ;EACA,IAAI,CAACL,cAAc,CAACO,GAAG,CAACH,cAAc,CAAC,EAAE;IACrC,IAAII,aAAa,GAAGT,4BAA4B,GAAGG,sBAAsB,EAAE;IAC3EF,cAAc,CAACM,GAAG,CAACF,cAAc,EAAEI,aAAa,CAAC;IACjD,OAAOA,aAAa;EACxB;EACA,OAAOR,cAAc,CAACS,GAAG,CAACL,cAAc,CAAC;AAC7C,CAAC;AACD,OAAO,SAASM,uBAAuBA,CAACC,QAAQ,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EAC5E,IAAIpB,IAAI,GAAGC,WAAW,CAACiB,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIK,IAAI,GAAGX,OAAO,CAACS,iBAAiB,CAACG,WAAW,CAAC;EACjDtB,IAAI,CAACqB,IAAI,CAAC,GAAGF,iBAAiB;EAC9B,IAAIC,SAAS,EAAE;IACXlB,YAAY,CAACqB,GAAG,CAACL,QAAQ,EAAEd,WAAW,EAAG,YAAW;MAChDgB,SAAS,CAACI,IAAI,CAACL,iBAAiB,CAAC;IACrC,CAAE,CAAC;EACP;EACA,IAAI,CAACnB,IAAI,CAACK,wBAAwB,CAAC,EAAE;IACjCL,IAAI,CAACK,wBAAwB,CAAC,GAAG,EAAE;EACvC;EACAL,IAAI,CAACK,wBAAwB,CAAC,CAACoB,IAAI,CAACJ,IAAI,CAAC;AAC7C;AACA,OAAO,SAASK,oBAAoBA,CAACR,QAAQ,EAAEP,cAAc,EAAE;EAC3D,IAAIU,IAAI,GAAGX,OAAO,CAACC,cAAc,CAAC;EAClC,OAAOV,WAAW,CAACiB,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,EAAEK,IAAI,CAAC;AAC7C;AACA,SACIX,OAAO,IAAIW,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}