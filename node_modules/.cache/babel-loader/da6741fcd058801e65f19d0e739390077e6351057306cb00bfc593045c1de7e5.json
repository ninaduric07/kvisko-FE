{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getWidth, getHeight, getOuterWidth, getOuterHeight } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport domAdapter from \"../core/dom_adapter\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { quadToObject } from \"../core/utils/string\";\nimport registerComponent from \"../core/component_registrator\";\nimport { locate, move } from \"../animation/translator\";\nimport Animator from \"./scroll_view/animator\";\nimport { dasherize } from \"../core/utils/inflector\";\nimport { extend } from \"../core/utils/extend\";\nimport DOMComponent from \"../core/dom_component\";\nimport { getPublicElement } from \"../core/element\";\nimport { addNamespace, needSkipEvent } from \"../events/utils/index\";\nimport pointerEvents from \"../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd, enter as dragEventEnter, leave as dragEventLeave } from \"../events/drag\";\nimport positionUtils from \"../animation/position\";\nimport { isFunction, isObject } from \"../core/utils/type\";\nimport { noop, splitPair } from \"../core/utils/common\";\nimport { value as viewPort } from \"../core/utils/view_port\";\nimport { EmptyTemplate } from \"../core/templates/empty_template\";\nimport { when, fromPromise, Deferred } from \"../core/utils/deferred\";\nvar window = getWindow();\nvar KEYDOWN_EVENT = \"keydown\";\nvar DRAGGABLE = \"dxDraggable\";\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\nvar KEYDOWN_EVENT_NAME = addNamespace(KEYDOWN_EVENT, DRAGGABLE);\nvar CLONE_CLASS = \"clone\";\nvar targetDraggable;\nvar sourceDraggable;\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\nvar getMousePosition = event => ({\n  x: event.pageX - $(window).scrollLeft(),\n  y: event.pageY - $(window).scrollTop()\n});\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\nclass ScrollHelper {\n  constructor(orientation, component) {\n    this._preventScroll = true;\n    this._component = component;\n    if (\"vertical\" === orientation) {\n      this._scrollValue = \"scrollTop\";\n      this._overFlowAttr = \"overflowY\";\n      this._sizeAttr = \"height\";\n      this._scrollSizeProp = \"scrollHeight\";\n      this._clientSizeProp = \"clientHeight\";\n      this._limitProps = {\n        start: \"top\",\n        end: \"bottom\"\n      };\n    } else {\n      this._scrollValue = \"scrollLeft\";\n      this._overFlowAttr = \"overflowX\";\n      this._sizeAttr = \"width\";\n      this._scrollSizeProp = \"scrollWidth\";\n      this._clientSizeProp = \"clientWidth\";\n      this._limitProps = {\n        start: \"left\",\n        end: \"right\"\n      };\n    }\n  }\n  updateScrollable(elements, mousePosition) {\n    var isScrollableFound = false;\n    elements.some(element => {\n      var $element = $(element);\n      var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\n      var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\n      if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\n        return true;\n      }\n      isScrollableFound = this._trySetScrollable(element, mousePosition);\n      return isScrollableFound;\n    });\n    if (!isScrollableFound) {\n      this._$scrollableAtPointer = null;\n      this._scrollSpeed = 0;\n    }\n  }\n  isScrolling() {\n    return !!this._scrollSpeed;\n  }\n  isScrollable($element) {\n    return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element));\n  }\n  _trySetScrollable(element, mousePosition) {\n    var $element = $(element);\n    var distanceToBorders;\n    var sensitivity = this._component.option(\"scrollSensitivity\");\n    var isScrollable = this.isScrollable($element);\n    if (isScrollable) {\n      distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\n      if (sensitivity > distanceToBorders[this._limitProps.start]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else {\n        isScrollable = false;\n        this._preventScroll = false;\n      }\n    }\n    return isScrollable;\n  }\n  _calculateDistanceToBorders($area, mousePosition) {\n    var area = $area.get(0);\n    var areaBoundingRect;\n    if (area) {\n      areaBoundingRect = getBoundingRect(area);\n      return {\n        left: mousePosition.x - areaBoundingRect.left,\n        top: mousePosition.y - areaBoundingRect.top,\n        right: areaBoundingRect.right - mousePosition.x,\n        bottom: areaBoundingRect.bottom - mousePosition.y\n      };\n    } else {\n      return {};\n    }\n  }\n  _calculateScrollSpeed(distance) {\n    var component = this._component;\n    var sensitivity = component.option(\"scrollSensitivity\");\n    var maxSpeed = component.option(\"scrollSpeed\");\n    return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);\n  }\n  scrollByStep() {\n    if (this._$scrollableAtPointer && this._scrollSpeed) {\n      if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\n        var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\n        var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\n        if (scrollableInstance) {\n          var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\n          scrollableInstance.scrollTo({\n            [this._limitProps.start]: nextScrollPosition\n          });\n        }\n      } else {\n        var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\n        this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition);\n      }\n      var dragMoveArgs = this._component._dragMoveArgs;\n      if (dragMoveArgs) {\n        this._component._dragMoveHandler(dragMoveArgs);\n      }\n    }\n  }\n  reset() {\n    this._$scrollableAtPointer = null;\n    this._scrollSpeed = 0;\n    this._preventScroll = true;\n  }\n  isOutsideScrollable($scrollable, event) {\n    if (!$scrollable) {\n      return false;\n    }\n    var scrollableSize = getBoundingRect($scrollable.get(0));\n    var start = scrollableSize[this._limitProps.start];\n    var size = scrollableSize[this._sizeAttr];\n    var mousePosition = getMousePosition(event);\n    var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\n    return location < start || location > start + size;\n  }\n}\nvar ScrollAnimator = Animator.inherit({\n  ctor: function (strategy) {\n    this.callBase();\n    this._strategy = strategy;\n  },\n  _step: function () {\n    var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\n    var verticalScrollHelper = this._strategy._verticalScrollHelper;\n    horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\n    verticalScrollHelper && verticalScrollHelper.scrollByStep();\n  }\n});\nvar Draggable = DOMComponent.inherit({\n  reset: noop,\n  dragMove: noop,\n  dragEnter: noop,\n  dragLeave: noop,\n  dragEnd: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable._fireRemoveEvent(sourceEvent);\n    return new Deferred().resolve();\n  },\n  _fireRemoveEvent: noop,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      onDragStart: null,\n      onDragMove: null,\n      onDragEnd: null,\n      onDragEnter: null,\n      onDragLeave: null,\n      onDragCancel: null,\n      onCancelByEsc: false,\n      onDrop: null,\n      immediate: true,\n      dragDirection: \"both\",\n      boundary: void 0,\n      boundOffset: 0,\n      allowMoveByClick: false,\n      itemData: null,\n      container: void 0,\n      dragTemplate: void 0,\n      contentTemplate: \"content\",\n      handle: \"\",\n      filter: \"\",\n      clone: false,\n      autoScroll: true,\n      scrollSpeed: 30,\n      scrollSensitivity: 60,\n      group: void 0,\n      data: void 0\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase.apply(this, arguments);\n    extend(this._optionsByReference, {\n      component: true,\n      group: true,\n      itemData: true,\n      data: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this._attachEventHandlers();\n    this._scrollAnimator = new ScrollAnimator(this);\n    this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\n    this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\n  },\n  _normalizeCursorOffset: function (offset) {\n    if (isObject(offset)) {\n      offset = {\n        h: offset.x,\n        v: offset.y\n      };\n    }\n    offset = splitPair(offset).map(value => parseFloat(value));\n    return {\n      left: offset[0],\n      top: 1 === offset.length ? offset[0] : offset[1]\n    };\n  },\n  _getNormalizedCursorOffset: function (offset, options) {\n    if (isFunction(offset)) {\n      offset = offset.call(this, options);\n    }\n    return this._normalizeCursorOffset(offset);\n  },\n  _calculateElementOffset: function (options) {\n    var elementOffset;\n    var dragElementOffset;\n    var event = options.event;\n    var $element = $(options.itemElement);\n    var $dragElement = $(options.dragElement);\n    var isCloned = this._dragElementIsCloned();\n    var cursorOffset = this.option(\"cursorOffset\");\n    var normalizedCursorOffset = {\n      left: 0,\n      top: 0\n    };\n    var currentLocate = this._initialLocate = locate($dragElement);\n    if (isCloned || options.initialOffset || cursorOffset) {\n      elementOffset = options.initialOffset || $element.offset();\n      if (cursorOffset) {\n        normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\n        if (isFinite(normalizedCursorOffset.left)) {\n          elementOffset.left = event.pageX;\n        }\n        if (isFinite(normalizedCursorOffset.top)) {\n          elementOffset.top = event.pageY;\n        }\n      }\n      dragElementOffset = $dragElement.offset();\n      elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\n      elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;\n    }\n    return elementOffset;\n  },\n  _initPosition: function (options) {\n    var $dragElement = $(options.dragElement);\n    var elementOffset = this._calculateElementOffset(options);\n    if (elementOffset) {\n      this._move(elementOffset, $dragElement);\n    }\n    this._startPosition = locate($dragElement);\n  },\n  _startAnimator: function () {\n    if (!this._scrollAnimator.inProgress()) {\n      this._scrollAnimator.start();\n    }\n  },\n  _stopAnimator: function () {\n    this._scrollAnimator.stop();\n  },\n  _addWidgetPrefix: function (className) {\n    var componentName = this.NAME;\n    return dasherize(componentName) + (className ? \"-\" + className : \"\");\n  },\n  _getItemsSelector: function () {\n    return this.option(\"filter\") || \"\";\n  },\n  _$content: function () {\n    var $element = this.$element();\n    var $wrapper = $element.children(\".dx-template-wrapper\");\n    return $wrapper.length ? $wrapper : $element;\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n    var $element = this._$content();\n    var itemsSelector = this._getItemsSelector();\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    var data = {\n      direction: this.option(\"dragDirection\"),\n      immediate: this.option(\"immediate\"),\n      checkDropTarget: ($target, event) => {\n        var targetGroup = this.option(\"group\");\n        var sourceGroup = this._getSourceDraggable().option(\"group\");\n        var $scrollable = this._getScrollable($target);\n        if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\n          return false;\n        }\n        return sourceGroup && sourceGroup === targetGroup;\n      }\n    };\n    if (allowMoveByClick) {\n      $element = this._getArea();\n      eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));\n    }\n    if (\">\" === itemsSelector[0]) {\n      itemsSelector = itemsSelector.slice(1);\n    }\n    eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\n    eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\n    eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\n    if (this.option(\"onCancelByEsc\")) {\n      eventsEngine.on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this));\n    }\n  },\n  _dragElementIsCloned: function () {\n    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));\n  },\n  _getDragTemplateArgs: function ($element, $container) {\n    return {\n      container: getPublicElement($container),\n      model: {\n        itemData: this.option(\"itemData\"),\n        itemElement: getPublicElement($element)\n      }\n    };\n  },\n  _createDragElement: function ($element) {\n    var result = $element;\n    var clone = this.option(\"clone\");\n    var $container = this._getContainer();\n    var template = this.option(\"dragTemplate\");\n    if (template) {\n      template = this._getTemplate(template);\n      result = $(\"<div>\").appendTo($container);\n      template.render(this._getDragTemplateArgs($element, result));\n    } else if (clone) {\n      result = $(\"<div>\").appendTo($container);\n      $element.clone().css({\n        width: $element.css(\"width\"),\n        height: $element.css(\"height\")\n      }).appendTo(result);\n    }\n    return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"));\n  },\n  _resetDragElement: function () {\n    if (this._dragElementIsCloned()) {\n      this._$dragElement.remove();\n    } else {\n      this._toggleDraggingClass(false);\n    }\n    this._$dragElement = null;\n  },\n  _resetSourceElement: function () {\n    this._toggleDragSourceClass(false);\n    this._$sourceElement = null;\n  },\n  _detachEventHandlers: function () {\n    eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\n    eventsEngine.off(this._getArea(), \".\" + DRAGGABLE);\n  },\n  _move: function (position, $element) {\n    move($element || this._$dragElement, position);\n  },\n  _getDraggableElement: function (e) {\n    var $sourceElement = this._getSourceElement();\n    if ($sourceElement) {\n      return $sourceElement;\n    }\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    if (allowMoveByClick) {\n      return this.$element();\n    }\n    var $target = $(e && e.target);\n    var itemsSelector = this._getItemsSelector();\n    if (\">\" === itemsSelector[0]) {\n      var $items = this._$content().find(itemsSelector);\n      if (!$items.is($target)) {\n        $target = $target.closest($items);\n      }\n    }\n    return $target;\n  },\n  _getSourceElement: function () {\n    var draggable = this._getSourceDraggable();\n    return draggable._$sourceElement;\n  },\n  _pointerDownHandler: function (e) {\n    if (needSkipEvent(e)) {\n      return;\n    }\n    var position = {};\n    var $element = this.$element();\n    var dragDirection = this.option(\"dragDirection\");\n    if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\n      position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2;\n    }\n    if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\n      position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2;\n    }\n    this._move(position, $element);\n    this._getAction(\"onDragMove\")(this._getEventArgs(e));\n  },\n  _isValidElement: function (event, $element) {\n    var handle = this.option(\"handle\");\n    var $target = $(event.originalEvent && event.originalEvent.target);\n    if (handle && !$target.closest(handle).length) {\n      return false;\n    }\n    if (!$element.length) {\n      return false;\n    }\n    return !$element.is(\".dx-state-disabled, .dx-state-disabled *\");\n  },\n  _dragStartHandler: function (e) {\n    var $element = this._getDraggableElement(e);\n    this.dragInProgress = true;\n    if (!this._isValidElement(e, $element)) {\n      e.cancel = true;\n      return;\n    }\n    if (this._$sourceElement) {\n      return;\n    }\n    var dragStartArgs = this._getDragStartArgs(e, $element);\n    this._getAction(\"onDragStart\")(dragStartArgs);\n    if (dragStartArgs.cancel) {\n      e.cancel = true;\n      return;\n    }\n    this.option(\"itemData\", dragStartArgs.itemData);\n    this._setSourceDraggable();\n    this._$sourceElement = $element;\n    var initialOffset = $element.offset();\n    var $dragElement = this._$dragElement = this._createDragElement($element);\n    this._toggleDraggingClass(true);\n    this._toggleDragSourceClass(true);\n    this._setGestureCoverCursor($dragElement.children());\n    var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\n    this._initPosition(extend({}, dragStartArgs, {\n      dragElement: $dragElement.get(0),\n      initialOffset: isFixedPosition && initialOffset\n    }));\n    this._getAction(\"onDraggableElementShown\")(_extends({}, dragStartArgs, {\n      dragElement: $dragElement\n    }));\n    var $area = this._getArea();\n    var areaOffset = this._getAreaOffset($area);\n    var boundOffset = this._getBoundOffset();\n    var areaWidth = getOuterWidth($area);\n    var areaHeight = getOuterHeight($area);\n    var elementWidth = getWidth($dragElement);\n    var elementHeight = getHeight($dragElement);\n    var startOffset_left = $dragElement.offset().left - areaOffset.left,\n      startOffset_top = $dragElement.offset().top - areaOffset.top;\n    if ($area.length) {\n      e.maxLeftOffset = startOffset_left - boundOffset.left;\n      e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\n      e.maxTopOffset = startOffset_top - boundOffset.top;\n      e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom;\n    }\n    if (this.option(\"autoScroll\")) {\n      this._startAnimator();\n    }\n  },\n  _getAreaOffset: function ($area) {\n    var offset = $area && positionUtils.offset($area);\n    return offset ? offset : {\n      left: 0,\n      top: 0\n    };\n  },\n  _toggleDraggingClass: function (value) {\n    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value);\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value);\n  },\n  _setGestureCoverCursor: function ($element) {\n    $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"));\n  },\n  _getBoundOffset: function () {\n    var boundOffset = this.option(\"boundOffset\");\n    if (isFunction(boundOffset)) {\n      boundOffset = boundOffset.call(this);\n    }\n    return quadToObject(boundOffset);\n  },\n  _getArea: function () {\n    var area = this.option(\"boundary\");\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n    return $(area);\n  },\n  _getContainer: function () {\n    var container = this.option(\"container\");\n    if (void 0 === container) {\n      container = viewPort();\n    }\n    return $(container);\n  },\n  _dragMoveHandler: function (e, scrollBy) {\n    this._dragMoveArgs = e;\n    if (!this._$dragElement) {\n      e.cancel = true;\n      return;\n    }\n    var offset = e.offset;\n    var startPosition = this._startPosition;\n    this._move({\n      left: startPosition.left + offset.x,\n      top: startPosition.top + offset.y\n    });\n    if (!scrollBy) {\n      this._updateScrollable(e);\n    }\n    var eventArgs = this._getEventArgs(e);\n    this._getAction(\"onDragMove\")(eventArgs);\n    if (true === eventArgs.cancel) {\n      return;\n    }\n    var targetDraggable = this._getTargetDraggable();\n    targetDraggable.dragMove(e, scrollBy);\n  },\n  _updateScrollable: function (e) {\n    if (this.option(\"autoScroll\")) {\n      var mousePosition = getMousePosition(e);\n      var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));\n      this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\n      this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);\n    }\n  },\n  _getScrollable: function ($element) {\n    var $scrollable;\n    $element.parents().toArray().some(parent => {\n      var $parent = $(parent);\n      if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\n        $scrollable = $parent;\n        return true;\n      }\n    });\n    return $scrollable;\n  },\n  _defaultActionArgs: function () {\n    var args = this.callBase.apply(this, arguments);\n    var component = this.option(\"component\");\n    if (component) {\n      args.component = component;\n      args.element = component.element();\n    }\n    return args;\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n    var targetDraggable = this._getTargetDraggable();\n    return {\n      event: e,\n      itemData: sourceDraggable.option(\"itemData\"),\n      itemElement: getPublicElement(sourceDraggable._$sourceElement),\n      fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\n      toComponent: targetDraggable.option(\"component\") || targetDraggable,\n      fromData: sourceDraggable.option(\"data\"),\n      toData: targetDraggable.option(\"data\")\n    };\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    var args = this._getEventArgs(e);\n    return {\n      event: args.event,\n      itemData: args.itemData,\n      itemElement: $itemElement,\n      fromData: args.fromData\n    };\n  },\n  _revertItemToInitialPosition: function () {\n    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);\n  },\n  _dragEndHandler: function (e) {\n    var d = new Deferred();\n    var dragEndEventArgs = this._getEventArgs(e);\n    var dropEventArgs = this._getEventArgs(e);\n    var targetDraggable = this._getTargetDraggable();\n    var needRevertPosition = true;\n    this.dragInProgress = false;\n    try {\n      this._getAction(\"onDragEnd\")(dragEndEventArgs);\n    } finally {\n      when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\n        if (!cancel) {\n          if (targetDraggable !== this) {\n            targetDraggable._getAction(\"onDrop\")(dropEventArgs);\n          }\n          if (!dropEventArgs.cancel) {\n            needRevertPosition = false;\n            when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\n            return;\n          }\n        }\n        d.resolve();\n      }).fail(d.resolve);\n      d.done(() => {\n        if (needRevertPosition) {\n          this._revertItemToInitialPosition();\n        }\n        this._resetDragOptions(targetDraggable);\n      });\n    }\n  },\n  _isTargetOverAnotherDraggable: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n    if (this === sourceDraggable) {\n      return false;\n    }\n    var $dragElement = sourceDraggable._$dragElement;\n    var $sourceDraggableElement = sourceDraggable.$element();\n    var $targetDraggableElement = this.$element();\n    var mousePosition = getMousePosition(e);\n    var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.element());\n    var firstWidgetElement = elements.filter(element => {\n      var $element = $(element);\n      if ($element.hasClass(this._addWidgetPrefix())) {\n        return !$element.closest($dragElement).length;\n      }\n    })[0];\n    var $sourceElement = this._getSourceElement();\n    var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\n    var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\n    return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;\n  },\n  _dragEnterHandler: function (e) {\n    this._fireDragEnterEvent(e);\n    if (this._isTargetOverAnotherDraggable(e)) {\n      this._setTargetDraggable();\n    }\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable.dragEnter(e);\n  },\n  _dragLeaveHandler: function (e) {\n    this._fireDragLeaveEvent(e);\n    this._resetTargetDraggable();\n    if (this !== this._getSourceDraggable()) {\n      this.reset();\n    }\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable.dragLeave(e);\n  },\n  _keydownHandler: function (e) {\n    if (this.dragInProgress && \"Escape\" === e.key) {\n      this._keydownEscapeHandler(e);\n    }\n  },\n  _keydownEscapeHandler: function (e) {\n    var _sourceDraggable;\n    var $sourceElement = this._getSourceElement();\n    if (!$sourceElement) {\n      return;\n    }\n    var dragCancelEventArgs = this._getEventArgs(e);\n    this._getAction(\"onDragCancel\")(dragCancelEventArgs);\n    if (dragCancelEventArgs.cancel) {\n      return;\n    }\n    this.dragInProgress = false;\n    null === (_sourceDraggable = sourceDraggable) || void 0 === _sourceDraggable ? void 0 : _sourceDraggable._toggleDraggingClass(false);\n    this._detachEventHandlers();\n    this._revertItemToInitialPosition();\n    var targetDraggable = this._getTargetDraggable();\n    this._resetDragOptions(targetDraggable);\n    this._attachEventHandlers();\n  },\n  _getAction: function (name) {\n    return this[\"_\" + name + \"Action\"] || this._createActionByOption(name);\n  },\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initTemplates: function () {\n    if (!this.option(\"contentTemplate\")) {\n      return;\n    }\n    this._templateManager.addDefaultTemplates({\n      content: new EmptyTemplate()\n    });\n    this.callBase.apply(this, arguments);\n  },\n  _render: function () {\n    this.callBase();\n    this.$element().addClass(this._addWidgetPrefix());\n    var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\n    var template = this._getTemplateByOption(\"contentTemplate\");\n    if (template) {\n      $(template.render({\n        container: this.element(),\n        transclude: transclude\n      }));\n    }\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n    switch (name) {\n      case \"onDragStart\":\n      case \"onDragMove\":\n      case \"onDragEnd\":\n      case \"onDrop\":\n      case \"onDragEnter\":\n      case \"onDragLeave\":\n      case \"onDragCancel\":\n      case \"onDraggableElementShown\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n      case \"dragTemplate\":\n      case \"contentTemplate\":\n      case \"container\":\n      case \"clone\":\n        break;\n      case \"allowMoveByClick\":\n      case \"dragDirection\":\n      case \"disabled\":\n      case \"boundary\":\n      case \"filter\":\n      case \"immediate\":\n        this._resetDragElement();\n        this._detachEventHandlers();\n        this._attachEventHandlers();\n        break;\n      case \"onCancelByEsc\":\n        this._keydownHandler();\n        break;\n      case \"autoScroll\":\n        this._verticalScrollHelper.reset();\n        this._horizontalScrollHelper.reset();\n        break;\n      case \"scrollSensitivity\":\n      case \"scrollSpeed\":\n      case \"boundOffset\":\n      case \"handle\":\n      case \"group\":\n      case \"data\":\n      case \"itemData\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _getTargetDraggable: function () {\n    return targetDraggable || this;\n  },\n  _getSourceDraggable: function () {\n    return sourceDraggable || this;\n  },\n  _setTargetDraggable: function () {\n    var currentGroup = this.option(\"group\");\n    var sourceDraggable = this._getSourceDraggable();\n    if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\n      targetDraggable = this;\n    }\n  },\n  _setSourceDraggable: function () {\n    sourceDraggable = this;\n  },\n  _resetSourceDraggable: function () {\n    sourceDraggable = null;\n  },\n  _resetTargetDraggable: function () {\n    targetDraggable = null;\n  },\n  _resetDragOptions: function (targetDraggable) {\n    this.reset();\n    targetDraggable.reset();\n    this._stopAnimator();\n    this._horizontalScrollHelper.reset();\n    this._verticalScrollHelper.reset();\n    this._resetDragElement();\n    this._resetSourceElement();\n    this._resetTargetDraggable();\n    this._resetSourceDraggable();\n  },\n  _dispose: function () {\n    this.callBase();\n    this._detachEventHandlers();\n    this._resetDragElement();\n    this._resetTargetDraggable();\n    this._resetSourceDraggable();\n    this._$sourceElement = null;\n    this._stopAnimator();\n  },\n  _fireDragEnterEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onDragEnter\")(args);\n  },\n  _fireDragLeaveEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onDragLeave\")(args);\n  }\n});\nregisterComponent(DRAGGABLE, Draggable);\nexport default Draggable;","map":{"version":3,"names":["_extends","getWidth","getHeight","getOuterWidth","getOuterHeight","$","domAdapter","getWindow","getBoundingRect","eventsEngine","quadToObject","registerComponent","locate","move","Animator","dasherize","extend","DOMComponent","getPublicElement","addNamespace","needSkipEvent","pointerEvents","start","dragEventStart","dragEventMove","end","dragEventEnd","enter","dragEventEnter","leave","dragEventLeave","positionUtils","isFunction","isObject","noop","splitPair","value","viewPort","EmptyTemplate","when","fromPromise","Deferred","window","KEYDOWN_EVENT","DRAGGABLE","DRAGSTART_EVENT_NAME","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","DRAG_ENTER_EVENT_NAME","DRAGEND_LEAVE_EVENT_NAME","POINTERDOWN_EVENT_NAME","down","KEYDOWN_EVENT_NAME","CLONE_CLASS","targetDraggable","sourceDraggable","ANONYMOUS_TEMPLATE_NAME","getMousePosition","event","x","pageX","scrollLeft","y","pageY","scrollTop","GESTURE_COVER_CLASS","OVERLAY_WRAPPER_CLASS","OVERLAY_CONTENT_CLASS","ScrollHelper","constructor","orientation","component","_preventScroll","_component","_scrollValue","_overFlowAttr","_sizeAttr","_scrollSizeProp","_clientSizeProp","_limitProps","updateScrollable","elements","mousePosition","isScrollableFound","some","element","$element","isTargetOverOverlayWrapper","hasClass","isTargetOverOverlayContent","_trySetScrollable","_$scrollableAtPointer","_scrollSpeed","isScrolling","isScrollable","css","prop","Math","ceil","distanceToBorders","sensitivity","option","_calculateDistanceToBorders","_calculateScrollSpeed","$area","area","get","areaBoundingRect","left","top","right","bottom","distance","maxSpeed","pow","scrollByStep","$scrollable","closest","scrollableInstance","data","nextScrollPosition","scrollOffset","scrollTo","_nextScrollPosition","dragMoveArgs","_dragMoveArgs","_dragMoveHandler","reset","isOutsideScrollable","scrollableSize","size","location","ScrollAnimator","inherit","ctor","strategy","callBase","_strategy","_step","horizontalScrollHelper","_horizontalScrollHelper","verticalScrollHelper","_verticalScrollHelper","Draggable","dragMove","dragEnter","dragLeave","dragEnd","sourceEvent","_getSourceDraggable","_fireRemoveEvent","resolve","_getDefaultOptions","onDragStart","onDragMove","onDragEnd","onDragEnter","onDragLeave","onDragCancel","onCancelByEsc","onDrop","immediate","dragDirection","boundary","boundOffset","allowMoveByClick","itemData","container","dragTemplate","contentTemplate","handle","filter","clone","autoScroll","scrollSpeed","scrollSensitivity","group","_setOptionsByReference","apply","arguments","_optionsByReference","_init","_attachEventHandlers","_scrollAnimator","_normalizeCursorOffset","offset","h","v","map","parseFloat","length","_getNormalizedCursorOffset","options","call","_calculateElementOffset","elementOffset","dragElementOffset","itemElement","$dragElement","dragElement","isCloned","_dragElementIsCloned","cursorOffset","normalizedCursorOffset","currentLocate","_initialLocate","initialOffset","isFinite","_initPosition","_move","_startPosition","_startAnimator","inProgress","_stopAnimator","stop","_addWidgetPrefix","className","componentName","NAME","_getItemsSelector","_$content","$wrapper","children","itemsSelector","direction","checkDropTarget","$target","targetGroup","sourceGroup","_getScrollable","_getArea","on","_pointerDownHandler","bind","slice","_dragStartHandler","_dragEndHandler","_dragEnterHandler","_dragLeaveHandler","_keydownHandler","_$dragElement","_getDragTemplateArgs","$container","model","_createDragElement","result","_getContainer","template","_getTemplate","appendTo","render","width","height","toggleClass","_resetDragElement","remove","_toggleDraggingClass","_resetSourceElement","_toggleDragSourceClass","_$sourceElement","_detachEventHandlers","off","position","_getDraggableElement","e","$sourceElement","_getSourceElement","target","$items","find","is","draggable","_getAction","_getEventArgs","_isValidElement","originalEvent","dragInProgress","cancel","dragStartArgs","_getDragStartArgs","_setSourceDraggable","_setGestureCoverCursor","isFixedPosition","areaOffset","_getAreaOffset","_getBoundOffset","areaWidth","areaHeight","elementWidth","elementHeight","startOffset_left","startOffset_top","maxLeftOffset","maxRightOffset","maxTopOffset","maxBottomOffset","concat","scrollBy","startPosition","_updateScrollable","eventArgs","_getTargetDraggable","allObjects","elementsFromPoint","parents","toArray","parent","$parent","_defaultActionArgs","args","fromComponent","toComponent","fromData","toData","$itemElement","_revertItemToInitialPosition","d","dragEndEventArgs","dropEventArgs","needRevertPosition","done","always","fail","_resetDragOptions","_isTargetOverAnotherDraggable","$sourceDraggableElement","$targetDraggableElement","firstWidgetElement","isTargetOverItself","isTargetOverNestedDraggable","_fireDragEnterEvent","_setTargetDraggable","_fireDragLeaveEvent","_resetTargetDraggable","key","_keydownEscapeHandler","_sourceDraggable","dragCancelEventArgs","name","_createActionByOption","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_render","addClass","transclude","anonymousTemplateName","_getTemplateByOption","_optionChanged","currentGroup","_resetSourceDraggable","_dispose"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/draggable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    quadToObject\r\n} from \"../core/utils/string\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport Animator from \"./scroll_view/animator\";\r\nimport {\r\n    dasherize\r\n} from \"../core/utils/inflector\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    addNamespace,\r\n    needSkipEvent\r\n} from \"../events/utils/index\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd,\r\n    enter as dragEventEnter,\r\n    leave as dragEventLeave\r\n} from \"../events/drag\";\r\nimport positionUtils from \"../animation/position\";\r\nimport {\r\n    isFunction,\r\n    isObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    noop,\r\n    splitPair\r\n} from \"../core/utils/common\";\r\nimport {\r\n    value as viewPort\r\n} from \"../core/utils/view_port\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../core/templates/empty_template\";\r\nimport {\r\n    when,\r\n    fromPromise,\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar window = getWindow();\r\nvar KEYDOWN_EVENT = \"keydown\";\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\r\nvar KEYDOWN_EVENT_NAME = addNamespace(KEYDOWN_EVENT, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = event => ({\r\n    x: event.pageX - $(window).scrollLeft(),\r\n    y: event.pageY - $(window).scrollTop()\r\n});\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\r\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\r\nclass ScrollHelper {\r\n    constructor(orientation, component) {\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._clientSizeProp = \"clientHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._clientSizeProp = \"clientWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    updateScrollable(elements, mousePosition) {\r\n        var isScrollableFound = false;\r\n        elements.some(element => {\r\n            var $element = $(element);\r\n            var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\r\n            var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\r\n            if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\r\n                return true\r\n            }\r\n            isScrollableFound = this._trySetScrollable(element, mousePosition);\r\n            return isScrollableFound\r\n        });\r\n        if (!isScrollableFound) {\r\n            this._$scrollableAtPointer = null;\r\n            this._scrollSpeed = 0\r\n        }\r\n    }\r\n    isScrolling() {\r\n        return !!this._scrollSpeed\r\n    }\r\n    isScrollable($element) {\r\n        return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element))\r\n    }\r\n    _trySetScrollable(element, mousePosition) {\r\n        var $element = $(element);\r\n        var distanceToBorders;\r\n        var sensitivity = this._component.option(\"scrollSensitivity\");\r\n        var isScrollable = this.isScrollable($element);\r\n        if (isScrollable) {\r\n            distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\r\n            if (sensitivity > distanceToBorders[this._limitProps.start]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else {\r\n                isScrollable = false;\r\n                this._preventScroll = false\r\n            }\r\n        }\r\n        return isScrollable\r\n    }\r\n    _calculateDistanceToBorders($area, mousePosition) {\r\n        var area = $area.get(0);\r\n        var areaBoundingRect;\r\n        if (area) {\r\n            areaBoundingRect = getBoundingRect(area);\r\n            return {\r\n                left: mousePosition.x - areaBoundingRect.left,\r\n                top: mousePosition.y - areaBoundingRect.top,\r\n                right: areaBoundingRect.right - mousePosition.x,\r\n                bottom: areaBoundingRect.bottom - mousePosition.y\r\n            }\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n    _calculateScrollSpeed(distance) {\r\n        var component = this._component;\r\n        var sensitivity = component.option(\"scrollSensitivity\");\r\n        var maxSpeed = component.option(\"scrollSpeed\");\r\n        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n    }\r\n    scrollByStep() {\r\n        if (this._$scrollableAtPointer && this._scrollSpeed) {\r\n            if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                if (scrollableInstance) {\r\n                    var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\r\n                    scrollableInstance.scrollTo({\r\n                        [this._limitProps.start]: nextScrollPosition\r\n                    })\r\n                }\r\n            } else {\r\n                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\r\n                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition)\r\n            }\r\n            var dragMoveArgs = this._component._dragMoveArgs;\r\n            if (dragMoveArgs) {\r\n                this._component._dragMoveHandler(dragMoveArgs)\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this._$scrollableAtPointer = null;\r\n        this._scrollSpeed = 0;\r\n        this._preventScroll = true\r\n    }\r\n    isOutsideScrollable($scrollable, event) {\r\n        if (!$scrollable) {\r\n            return false\r\n        }\r\n        var scrollableSize = getBoundingRect($scrollable.get(0));\r\n        var start = scrollableSize[this._limitProps.start];\r\n        var size = scrollableSize[this._sizeAttr];\r\n        var mousePosition = getMousePosition(event);\r\n        var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n        return location < start || location > start + size\r\n    }\r\n}\r\nvar ScrollAnimator = Animator.inherit({\r\n    ctor: function(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step: function() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = DOMComponent.inherit({\r\n    reset: noop,\r\n    dragMove: noop,\r\n    dragEnter: noop,\r\n    dragLeave: noop,\r\n    dragEnd: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return (new Deferred).resolve()\r\n    },\r\n    _fireRemoveEvent: noop,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDragEnter: null,\r\n            onDragLeave: null,\r\n            onDragCancel: null,\r\n            onCancelByEsc: false,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase.apply(this, arguments);\r\n        extend(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this)\r\n    },\r\n    _normalizeCursorOffset: function(offset) {\r\n        if (isObject(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = splitPair(offset).map(value => parseFloat(value));\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset: function(offset, options) {\r\n        if (isFunction(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset: function(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var event = options.event;\r\n        var $element = $(options.itemElement);\r\n        var $dragElement = $(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = locate($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition: function(options) {\r\n        var $dragElement = $(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = locate($dragElement)\r\n    },\r\n    _startAnimator: function() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator: function() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix: function(className) {\r\n        var componentName = this.NAME;\r\n        return dasherize(componentName) + (className ? \"-\" + className : \"\")\r\n    },\r\n    _getItemsSelector: function() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content: function() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: ($target, event) => {\r\n                var targetGroup = this.option(\"group\");\r\n                var sourceGroup = this._getSourceDraggable().option(\"group\");\r\n                var $scrollable = this._getScrollable($target);\r\n                if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\r\n        if (this.option(\"onCancelByEsc\")) {\r\n            eventsEngine.on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this))\r\n        }\r\n    },\r\n    _dragElementIsCloned: function() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs: function($element, $container) {\r\n        return {\r\n            container: getPublicElement($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: getPublicElement($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement: function($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = $(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else if (clone) {\r\n            result = $(\"<div>\").appendTo($container);\r\n            $element.clone().css({\r\n                width: $element.css(\"width\"),\r\n                height: $element.css(\"height\")\r\n            }).appendTo(result)\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement: function() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement: function() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position, $element) {\r\n        move($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement: function(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = $(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement: function() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement: function(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = $(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        this.dragInProgress = true;\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        this._setGestureCoverCursor($dragElement.children());\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition(extend({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        this._getAction(\"onDraggableElementShown\")(_extends({}, dragStartArgs, {\r\n            dragElement: $dragElement\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = getOuterWidth($area);\r\n        var areaHeight = getOuterHeight($area);\r\n        var elementWidth = getWidth($dragElement);\r\n        var elementHeight = getHeight($dragElement);\r\n        var startOffset_left = $dragElement.offset().left - areaOffset.left,\r\n            startOffset_top = $dragElement.offset().top - areaOffset.top;\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset_left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset_top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _setGestureCoverCursor: function($element) {\r\n        $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"))\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"boundary\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _getContainer: function() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = viewPort()\r\n        }\r\n        return $(container)\r\n    },\r\n    _dragMoveHandler: function(e, scrollBy) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = e.offset;\r\n        var startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        if (!scrollBy) {\r\n            this._updateScrollable(e)\r\n        }\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e, scrollBy)\r\n    },\r\n    _updateScrollable: function(e) {\r\n        if (this.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));\r\n            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    _getScrollable: function($element) {\r\n        var $scrollable;\r\n        $element.parents().toArray().some(parent => {\r\n            var $parent = $(parent);\r\n            if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n        });\r\n        return $scrollable\r\n    },\r\n    _defaultActionArgs: function() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: getPublicElement(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition: function() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var d = new Deferred;\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        this.dragInProgress = false;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== this) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(() => {\r\n                if (needRevertPosition) {\r\n                    this._revertItemToInitialPosition()\r\n                }\r\n                this._resetDragOptions(targetDraggable)\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.element());\r\n        var firstWidgetElement = elements.filter(element => {\r\n            var $element = $(element);\r\n            if ($element.hasClass(this._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this._fireDragEnterEvent(e);\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler: function(e) {\r\n        this._fireDragLeaveEvent(e);\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _keydownHandler: function(e) {\r\n        if (this.dragInProgress && \"Escape\" === e.key) {\r\n            this._keydownEscapeHandler(e)\r\n        }\r\n    },\r\n    _keydownEscapeHandler: function(e) {\r\n        var _sourceDraggable;\r\n        var $sourceElement = this._getSourceElement();\r\n        if (!$sourceElement) {\r\n            return\r\n        }\r\n        var dragCancelEventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragCancel\")(dragCancelEventArgs);\r\n        if (dragCancelEventArgs.cancel) {\r\n            return\r\n        }\r\n        this.dragInProgress = false;\r\n        null === (_sourceDraggable = sourceDraggable) || void 0 === _sourceDraggable ? void 0 : _sourceDraggable._toggleDraggingClass(false);\r\n        this._detachEventHandlers();\r\n        this._revertItemToInitialPosition();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        this._resetDragOptions(targetDraggable);\r\n        this._attachEventHandlers()\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            $(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n            case \"onDragEnter\":\r\n            case \"onDragLeave\":\r\n            case \"onDragCancel\":\r\n            case \"onDraggableElementShown\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"onCancelByEsc\":\r\n                this._keydownHandler();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable: function() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable: function() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable: function() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable: function() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable: function() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable: function() {\r\n        targetDraggable = null\r\n    },\r\n    _resetDragOptions: function(targetDraggable) {\r\n        this.reset();\r\n        targetDraggable.reset();\r\n        this._stopAnimator();\r\n        this._horizontalScrollHelper.reset();\r\n        this._verticalScrollHelper.reset();\r\n        this._resetDragElement();\r\n        this._resetSourceElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable()\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    },\r\n    _fireDragEnterEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragEnter\")(args)\r\n    },\r\n    _fireDragLeaveEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragLeave\")(args)\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nexport default Draggable;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SACIC,QAAQ,EACRC,SAAS,EACTC,aAAa,EACbC,cAAc,QACX,oBAAoB;AAC3B,OAAOC,CAAC,MAAM,kBAAkB;AAChC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SACIC,SAAS,QACN,sBAAsB;AAC7B,SACIC,eAAe,QACZ,wBAAwB;AAC/B,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SACIC,YAAY,QACT,sBAAsB;AAC7B,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,SACIC,MAAM,EACNC,IAAI,QACD,yBAAyB;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SACIC,SAAS,QACN,yBAAyB;AAChC,SACIC,MAAM,QACH,sBAAsB;AAC7B,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SACIC,gBAAgB,QACb,iBAAiB;AACxB,SACIC,YAAY,EACZC,aAAa,QACV,uBAAuB;AAC9B,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,SACIC,KAAK,IAAIC,cAAc,EACvBV,IAAI,IAAIW,aAAa,EACrBC,GAAG,IAAIC,YAAY,EACnBC,KAAK,IAAIC,cAAc,EACvBC,KAAK,IAAIC,cAAc,QACpB,gBAAgB;AACvB,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SACIC,UAAU,EACVC,QAAQ,QACL,oBAAoB;AAC3B,SACIC,IAAI,EACJC,SAAS,QACN,sBAAsB;AAC7B,SACIC,KAAK,IAAIC,QAAQ,QACd,yBAAyB;AAChC,SACIC,aAAa,QACV,kCAAkC;AACzC,SACIC,IAAI,EACJC,WAAW,EACXC,QAAQ,QACL,wBAAwB;AAC/B,IAAIC,MAAM,GAAGnC,SAAS,CAAC,CAAC;AACxB,IAAIoC,aAAa,GAAG,SAAS;AAC7B,IAAIC,SAAS,GAAG,aAAa;AAC7B,IAAIC,oBAAoB,GAAG1B,YAAY,CAACI,cAAc,EAAEqB,SAAS,CAAC;AAClE,IAAIE,eAAe,GAAG3B,YAAY,CAACK,aAAa,EAAEoB,SAAS,CAAC;AAC5D,IAAIG,kBAAkB,GAAG5B,YAAY,CAACO,YAAY,EAAEkB,SAAS,CAAC;AAC9D,IAAII,qBAAqB,GAAG7B,YAAY,CAACS,cAAc,EAAEgB,SAAS,CAAC;AACnE,IAAIK,wBAAwB,GAAG9B,YAAY,CAACW,cAAc,EAAEc,SAAS,CAAC;AACtE,IAAIM,sBAAsB,GAAG/B,YAAY,CAACE,aAAa,CAAC8B,IAAI,EAAEP,SAAS,CAAC;AACxE,IAAIQ,kBAAkB,GAAGjC,YAAY,CAACwB,aAAa,EAAEC,SAAS,CAAC;AAC/D,IAAIS,WAAW,GAAG,OAAO;AACzB,IAAIC,eAAe;AACnB,IAAIC,eAAe;AACnB,IAAIC,uBAAuB,GAAG,SAAS;AACvC,IAAIC,gBAAgB,GAAGC,KAAK,KAAK;EAC7BC,CAAC,EAAED,KAAK,CAACE,KAAK,GAAGvD,CAAC,CAACqC,MAAM,CAAC,CAACmB,UAAU,CAAC,CAAC;EACvCC,CAAC,EAAEJ,KAAK,CAACK,KAAK,GAAG1D,CAAC,CAACqC,MAAM,CAAC,CAACsB,SAAS,CAAC;AACzC,CAAC,CAAC;AACF,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,qBAAqB,GAAG,oBAAoB;AAChD,IAAIC,qBAAqB,GAAG,oBAAoB;AAChD,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAACC,WAAW,EAAEC,SAAS,EAAE;IAChC,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,UAAU,GAAGF,SAAS;IAC3B,IAAI,UAAU,KAAKD,WAAW,EAAE;MAC5B,IAAI,CAACI,YAAY,GAAG,WAAW;MAC/B,IAAI,CAACC,aAAa,GAAG,WAAW;MAChC,IAAI,CAACC,SAAS,GAAG,QAAQ;MACzB,IAAI,CAACC,eAAe,GAAG,cAAc;MACrC,IAAI,CAACC,eAAe,GAAG,cAAc;MACrC,IAAI,CAACC,WAAW,GAAG;QACfzD,KAAK,EAAE,KAAK;QACZG,GAAG,EAAE;MACT,CAAC;IACL,CAAC,MAAM;MACH,IAAI,CAACiD,YAAY,GAAG,YAAY;MAChC,IAAI,CAACC,aAAa,GAAG,WAAW;MAChC,IAAI,CAACC,SAAS,GAAG,OAAO;MACxB,IAAI,CAACC,eAAe,GAAG,aAAa;MACpC,IAAI,CAACC,eAAe,GAAG,aAAa;MACpC,IAAI,CAACC,WAAW,GAAG;QACfzD,KAAK,EAAE,MAAM;QACbG,GAAG,EAAE;MACT,CAAC;IACL;EACJ;EACAuD,gBAAgBA,CAACC,QAAQ,EAAEC,aAAa,EAAE;IACtC,IAAIC,iBAAiB,GAAG,KAAK;IAC7BF,QAAQ,CAACG,IAAI,CAACC,OAAO,IAAI;MACrB,IAAIC,QAAQ,GAAGjF,CAAC,CAACgF,OAAO,CAAC;MACzB,IAAIE,0BAA0B,GAAGD,QAAQ,CAACE,QAAQ,CAACtB,qBAAqB,CAAC;MACzE,IAAIuB,0BAA0B,GAAGH,QAAQ,CAACE,QAAQ,CAACrB,qBAAqB,CAAC;MACzE,IAAIoB,0BAA0B,IAAIE,0BAA0B,EAAE;QAC1D,OAAO,IAAI;MACf;MACAN,iBAAiB,GAAG,IAAI,CAACO,iBAAiB,CAACL,OAAO,EAAEH,aAAa,CAAC;MAClE,OAAOC,iBAAiB;IAC5B,CAAC,CAAC;IACF,IAAI,CAACA,iBAAiB,EAAE;MACpB,IAAI,CAACQ,qBAAqB,GAAG,IAAI;MACjC,IAAI,CAACC,YAAY,GAAG,CAAC;IACzB;EACJ;EACAC,WAAWA,CAAA,EAAG;IACV,OAAO,CAAC,CAAC,IAAI,CAACD,YAAY;EAC9B;EACAE,YAAYA,CAACR,QAAQ,EAAE;IACnB,OAAO,CAAC,MAAM,KAAKA,QAAQ,CAACS,GAAG,CAAC,IAAI,CAACpB,aAAa,CAAC,IAAIW,QAAQ,CAACE,QAAQ,CAAC,yBAAyB,CAAC,KAAKF,QAAQ,CAACU,IAAI,CAAC,IAAI,CAACnB,eAAe,CAAC,GAAGoB,IAAI,CAACC,IAAI,CAAC,OAAO,KAAK,IAAI,CAACtB,SAAS,GAAG3E,QAAQ,CAACqF,QAAQ,CAAC,GAAGpF,SAAS,CAACoF,QAAQ,CAAC,CAAC;EAClO;EACAI,iBAAiBA,CAACL,OAAO,EAAEH,aAAa,EAAE;IACtC,IAAII,QAAQ,GAAGjF,CAAC,CAACgF,OAAO,CAAC;IACzB,IAAIc,iBAAiB;IACrB,IAAIC,WAAW,GAAG,IAAI,CAAC3B,UAAU,CAAC4B,MAAM,CAAC,mBAAmB,CAAC;IAC7D,IAAIP,YAAY,GAAG,IAAI,CAACA,YAAY,CAACR,QAAQ,CAAC;IAC9C,IAAIQ,YAAY,EAAE;MACdK,iBAAiB,GAAG,IAAI,CAACG,2BAA2B,CAAChB,QAAQ,EAAEJ,aAAa,CAAC;MAC7E,IAAIkB,WAAW,GAAGD,iBAAiB,CAAC,IAAI,CAACpB,WAAW,CAACzD,KAAK,CAAC,EAAE;QACzD,IAAI,CAAC,IAAI,CAACkD,cAAc,EAAE;UACtB,IAAI,CAACoB,YAAY,GAAG,CAAC,IAAI,CAACW,qBAAqB,CAACJ,iBAAiB,CAAC,IAAI,CAACpB,WAAW,CAACzD,KAAK,CAAC,CAAC;UAC1F,IAAI,CAACqE,qBAAqB,GAAGL,QAAQ;QACzC;MACJ,CAAC,MAAM,IAAIc,WAAW,GAAGD,iBAAiB,CAAC,IAAI,CAACpB,WAAW,CAACtD,GAAG,CAAC,EAAE;QAC9D,IAAI,CAAC,IAAI,CAAC+C,cAAc,EAAE;UACtB,IAAI,CAACoB,YAAY,GAAG,IAAI,CAACW,qBAAqB,CAACJ,iBAAiB,CAAC,IAAI,CAACpB,WAAW,CAACtD,GAAG,CAAC,CAAC;UACvF,IAAI,CAACkE,qBAAqB,GAAGL,QAAQ;QACzC;MACJ,CAAC,MAAM;QACHQ,YAAY,GAAG,KAAK;QACpB,IAAI,CAACtB,cAAc,GAAG,KAAK;MAC/B;IACJ;IACA,OAAOsB,YAAY;EACvB;EACAQ,2BAA2BA,CAACE,KAAK,EAAEtB,aAAa,EAAE;IAC9C,IAAIuB,IAAI,GAAGD,KAAK,CAACE,GAAG,CAAC,CAAC,CAAC;IACvB,IAAIC,gBAAgB;IACpB,IAAIF,IAAI,EAAE;MACNE,gBAAgB,GAAGnG,eAAe,CAACiG,IAAI,CAAC;MACxC,OAAO;QACHG,IAAI,EAAE1B,aAAa,CAACvB,CAAC,GAAGgD,gBAAgB,CAACC,IAAI;QAC7CC,GAAG,EAAE3B,aAAa,CAACpB,CAAC,GAAG6C,gBAAgB,CAACE,GAAG;QAC3CC,KAAK,EAAEH,gBAAgB,CAACG,KAAK,GAAG5B,aAAa,CAACvB,CAAC;QAC/CoD,MAAM,EAAEJ,gBAAgB,CAACI,MAAM,GAAG7B,aAAa,CAACpB;MACpD,CAAC;IACL,CAAC,MAAM;MACH,OAAO,CAAC,CAAC;IACb;EACJ;EACAyC,qBAAqBA,CAACS,QAAQ,EAAE;IAC5B,IAAIzC,SAAS,GAAG,IAAI,CAACE,UAAU;IAC/B,IAAI2B,WAAW,GAAG7B,SAAS,CAAC8B,MAAM,CAAC,mBAAmB,CAAC;IACvD,IAAIY,QAAQ,GAAG1C,SAAS,CAAC8B,MAAM,CAAC,aAAa,CAAC;IAC9C,OAAOJ,IAAI,CAACC,IAAI,CAACD,IAAI,CAACiB,GAAG,CAAC,CAACd,WAAW,GAAGY,QAAQ,IAAIZ,WAAW,EAAE,CAAC,CAAC,GAAGa,QAAQ,CAAC;EACpF;EACAE,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACxB,qBAAqB,IAAI,IAAI,CAACC,YAAY,EAAE;MACjD,IAAI,IAAI,CAACD,qBAAqB,CAACH,QAAQ,CAAC,yBAAyB,CAAC,EAAE;QAChE,IAAI4B,WAAW,GAAG,IAAI,CAACzB,qBAAqB,CAAC0B,OAAO,CAAC,gBAAgB,CAAC;QACtE,IAAIC,kBAAkB,GAAGF,WAAW,CAACG,IAAI,CAAC,cAAc,CAAC,IAAIH,WAAW,CAACG,IAAI,CAAC,cAAc,CAAC;QAC7F,IAAID,kBAAkB,EAAE;UACpB,IAAIE,kBAAkB,GAAGF,kBAAkB,CAACG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC1C,WAAW,CAACzD,KAAK,CAAC,GAAG,IAAI,CAACsE,YAAY;UACtG0B,kBAAkB,CAACI,QAAQ,CAAC;YACxB,CAAC,IAAI,CAAC3C,WAAW,CAACzD,KAAK,GAAGkG;UAC9B,CAAC,CAAC;QACN;MACJ,CAAC,MAAM;QACH,IAAIG,mBAAmB,GAAG,IAAI,CAAChC,qBAAqB,CAAC,IAAI,CAACjB,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAACkB,YAAY;QAC7F,IAAI,CAACD,qBAAqB,CAAC,IAAI,CAACjB,YAAY,CAAC,CAACiD,mBAAmB,CAAC;MACtE;MACA,IAAIC,YAAY,GAAG,IAAI,CAACnD,UAAU,CAACoD,aAAa;MAChD,IAAID,YAAY,EAAE;QACd,IAAI,CAACnD,UAAU,CAACqD,gBAAgB,CAACF,YAAY,CAAC;MAClD;IACJ;EACJ;EACAG,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACpC,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACpB,cAAc,GAAG,IAAI;EAC9B;EACAwD,mBAAmBA,CAACZ,WAAW,EAAE1D,KAAK,EAAE;IACpC,IAAI,CAAC0D,WAAW,EAAE;MACd,OAAO,KAAK;IAChB;IACA,IAAIa,cAAc,GAAGzH,eAAe,CAAC4G,WAAW,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC;IACxD,IAAIpF,KAAK,GAAG2G,cAAc,CAAC,IAAI,CAAClD,WAAW,CAACzD,KAAK,CAAC;IAClD,IAAI4G,IAAI,GAAGD,cAAc,CAAC,IAAI,CAACrD,SAAS,CAAC;IACzC,IAAIM,aAAa,GAAGzB,gBAAgB,CAACC,KAAK,CAAC;IAC3C,IAAIyE,QAAQ,GAAG,OAAO,KAAK,IAAI,CAACvD,SAAS,GAAGM,aAAa,CAACvB,CAAC,GAAGuB,aAAa,CAACpB,CAAC;IAC7E,OAAOqE,QAAQ,GAAG7G,KAAK,IAAI6G,QAAQ,GAAG7G,KAAK,GAAG4G,IAAI;EACtD;AACJ;AACA,IAAIE,cAAc,GAAGtH,QAAQ,CAACuH,OAAO,CAAC;EAClCC,IAAI,EAAE,SAAAA,CAASC,QAAQ,EAAE;IACrB,IAAI,CAACC,QAAQ,CAAC,CAAC;IACf,IAAI,CAACC,SAAS,GAAGF,QAAQ;EAC7B,CAAC;EACDG,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAIC,sBAAsB,GAAG,IAAI,CAACF,SAAS,CAACG,uBAAuB;IACnE,IAAIC,oBAAoB,GAAG,IAAI,CAACJ,SAAS,CAACK,qBAAqB;IAC/DH,sBAAsB,IAAIA,sBAAsB,CAACxB,YAAY,CAAC,CAAC;IAC/D0B,oBAAoB,IAAIA,oBAAoB,CAAC1B,YAAY,CAAC,CAAC;EAC/D;AACJ,CAAC,CAAC;AACF,IAAI4B,SAAS,GAAG9H,YAAY,CAACoH,OAAO,CAAC;EACjCN,KAAK,EAAE7F,IAAI;EACX8G,QAAQ,EAAE9G,IAAI;EACd+G,SAAS,EAAE/G,IAAI;EACfgH,SAAS,EAAEhH,IAAI;EACfiH,OAAO,EAAE,SAAAA,CAASC,WAAW,EAAE;IAC3B,IAAI7F,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD9F,eAAe,CAAC+F,gBAAgB,CAACF,WAAW,CAAC;IAC7C,OAAQ,IAAI3G,QAAQ,CAAD,CAAC,CAAE8G,OAAO,CAAC,CAAC;EACnC,CAAC;EACDD,gBAAgB,EAAEpH,IAAI;EACtBsH,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC3B,OAAOxI,MAAM,CAAC,IAAI,CAACwH,QAAQ,CAAC,CAAC,EAAE;MAC3BiB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE,MAAM;MACrBC,QAAQ,EAAE,KAAK,CAAC;MAChBC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE,KAAK;MACvBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,KAAK,CAAC;MACjBC,YAAY,EAAE,KAAK,CAAC;MACpBC,eAAe,EAAE,SAAS;MAC1BC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE,EAAE;MACfC,iBAAiB,EAAE,EAAE;MACrBC,KAAK,EAAE,KAAK,CAAC;MACbzD,IAAI,EAAE,KAAK;IACf,CAAC,CAAC;EACN,CAAC;EACD0D,sBAAsB,EAAE,SAAAA,CAAA,EAAW;IAC/B,IAAI,CAACzC,QAAQ,CAAC0C,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpCnK,MAAM,CAAC,IAAI,CAACoK,mBAAmB,EAAE;MAC7B7G,SAAS,EAAE,IAAI;MACfyG,KAAK,EAAE,IAAI;MACXV,QAAQ,EAAE,IAAI;MACd/C,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EACD8D,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC7C,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC8C,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,eAAe,GAAG,IAAInD,cAAc,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACQ,uBAAuB,GAAG,IAAIxE,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC;IACnE,IAAI,CAAC0E,qBAAqB,GAAG,IAAI1E,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;EACnE,CAAC;EACDoH,sBAAsB,EAAE,SAAAA,CAASC,MAAM,EAAE;IACrC,IAAIxJ,QAAQ,CAACwJ,MAAM,CAAC,EAAE;MAClBA,MAAM,GAAG;QACLC,CAAC,EAAED,MAAM,CAAC9H,CAAC;QACXgI,CAAC,EAAEF,MAAM,CAAC3H;MACd,CAAC;IACL;IACA2H,MAAM,GAAGtJ,SAAS,CAACsJ,MAAM,CAAC,CAACG,GAAG,CAACxJ,KAAK,IAAIyJ,UAAU,CAACzJ,KAAK,CAAC,CAAC;IAC1D,OAAO;MACHwE,IAAI,EAAE6E,MAAM,CAAC,CAAC,CAAC;MACf5E,GAAG,EAAE,CAAC,KAAK4E,MAAM,CAACK,MAAM,GAAGL,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC;IACnD,CAAC;EACL,CAAC;EACDM,0BAA0B,EAAE,SAAAA,CAASN,MAAM,EAAEO,OAAO,EAAE;IAClD,IAAIhK,UAAU,CAACyJ,MAAM,CAAC,EAAE;MACpBA,MAAM,GAAGA,MAAM,CAACQ,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;IACvC;IACA,OAAO,IAAI,CAACR,sBAAsB,CAACC,MAAM,CAAC;EAC9C,CAAC;EACDS,uBAAuB,EAAE,SAAAA,CAASF,OAAO,EAAE;IACvC,IAAIG,aAAa;IACjB,IAAIC,iBAAiB;IACrB,IAAI1I,KAAK,GAAGsI,OAAO,CAACtI,KAAK;IACzB,IAAI4B,QAAQ,GAAGjF,CAAC,CAAC2L,OAAO,CAACK,WAAW,CAAC;IACrC,IAAIC,YAAY,GAAGjM,CAAC,CAAC2L,OAAO,CAACO,WAAW,CAAC;IACzC,IAAIC,QAAQ,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC1C,IAAIC,YAAY,GAAG,IAAI,CAACrG,MAAM,CAAC,cAAc,CAAC;IAC9C,IAAIsG,sBAAsB,GAAG;MACzB/F,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;IACT,CAAC;IACD,IAAI+F,aAAa,GAAG,IAAI,CAACC,cAAc,GAAGjM,MAAM,CAAC0L,YAAY,CAAC;IAC9D,IAAIE,QAAQ,IAAIR,OAAO,CAACc,aAAa,IAAIJ,YAAY,EAAE;MACnDP,aAAa,GAAGH,OAAO,CAACc,aAAa,IAAIxH,QAAQ,CAACmG,MAAM,CAAC,CAAC;MAC1D,IAAIiB,YAAY,EAAE;QACdC,sBAAsB,GAAG,IAAI,CAACZ,0BAA0B,CAACW,YAAY,EAAEV,OAAO,CAAC;QAC/E,IAAIe,QAAQ,CAACJ,sBAAsB,CAAC/F,IAAI,CAAC,EAAE;UACvCuF,aAAa,CAACvF,IAAI,GAAGlD,KAAK,CAACE,KAAK;QACpC;QACA,IAAImJ,QAAQ,CAACJ,sBAAsB,CAAC9F,GAAG,CAAC,EAAE;UACtCsF,aAAa,CAACtF,GAAG,GAAGnD,KAAK,CAACK,KAAK;QACnC;MACJ;MACAqI,iBAAiB,GAAGE,YAAY,CAACb,MAAM,CAAC,CAAC;MACzCU,aAAa,CAACtF,GAAG,IAAIuF,iBAAiB,CAACvF,GAAG,IAAI8F,sBAAsB,CAAC9F,GAAG,IAAI,CAAC,CAAC,GAAG+F,aAAa,CAAC/F,GAAG;MAClGsF,aAAa,CAACvF,IAAI,IAAIwF,iBAAiB,CAACxF,IAAI,IAAI+F,sBAAsB,CAAC/F,IAAI,IAAI,CAAC,CAAC,GAAGgG,aAAa,CAAChG,IAAI;IAC1G;IACA,OAAOuF,aAAa;EACxB,CAAC;EACDa,aAAa,EAAE,SAAAA,CAAShB,OAAO,EAAE;IAC7B,IAAIM,YAAY,GAAGjM,CAAC,CAAC2L,OAAO,CAACO,WAAW,CAAC;IACzC,IAAIJ,aAAa,GAAG,IAAI,CAACD,uBAAuB,CAACF,OAAO,CAAC;IACzD,IAAIG,aAAa,EAAE;MACf,IAAI,CAACc,KAAK,CAACd,aAAa,EAAEG,YAAY,CAAC;IAC3C;IACA,IAAI,CAACY,cAAc,GAAGtM,MAAM,CAAC0L,YAAY,CAAC;EAC9C,CAAC;EACDa,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAI,CAAC,IAAI,CAAC5B,eAAe,CAAC6B,UAAU,CAAC,CAAC,EAAE;MACpC,IAAI,CAAC7B,eAAe,CAACjK,KAAK,CAAC,CAAC;IAChC;EACJ,CAAC;EACD+L,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI,CAAC9B,eAAe,CAAC+B,IAAI,CAAC,CAAC;EAC/B,CAAC;EACDC,gBAAgB,EAAE,SAAAA,CAASC,SAAS,EAAE;IAClC,IAAIC,aAAa,GAAG,IAAI,CAACC,IAAI;IAC7B,OAAO3M,SAAS,CAAC0M,aAAa,CAAC,IAAID,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EACxE,CAAC;EACDG,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO,IAAI,CAACtH,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;EACtC,CAAC;EACDuH,SAAS,EAAE,SAAAA,CAAA,EAAW;IAClB,IAAItI,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9B,IAAIuI,QAAQ,GAAGvI,QAAQ,CAACwI,QAAQ,CAAC,sBAAsB,CAAC;IACxD,OAAOD,QAAQ,CAAC/B,MAAM,GAAG+B,QAAQ,GAAGvI,QAAQ;EAChD,CAAC;EACDgG,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B,IAAI,IAAI,CAACjF,MAAM,CAAC,UAAU,CAAC,EAAE;MACzB;IACJ;IACA,IAAIf,QAAQ,GAAG,IAAI,CAACsI,SAAS,CAAC,CAAC;IAC/B,IAAIG,aAAa,GAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;IAC5C,IAAItD,gBAAgB,GAAG,IAAI,CAAChE,MAAM,CAAC,kBAAkB,CAAC;IACtD,IAAIkB,IAAI,GAAG;MACPyG,SAAS,EAAE,IAAI,CAAC3H,MAAM,CAAC,eAAe,CAAC;MACvC4D,SAAS,EAAE,IAAI,CAAC5D,MAAM,CAAC,WAAW,CAAC;MACnC4H,eAAe,EAAEA,CAACC,OAAO,EAAExK,KAAK,KAAK;QACjC,IAAIyK,WAAW,GAAG,IAAI,CAAC9H,MAAM,CAAC,OAAO,CAAC;QACtC,IAAI+H,WAAW,GAAG,IAAI,CAAC/E,mBAAmB,CAAC,CAAC,CAAChD,MAAM,CAAC,OAAO,CAAC;QAC5D,IAAIe,WAAW,GAAG,IAAI,CAACiH,cAAc,CAACH,OAAO,CAAC;QAC9C,IAAI,IAAI,CAACpF,qBAAqB,CAACd,mBAAmB,CAACZ,WAAW,EAAE1D,KAAK,CAAC,IAAI,IAAI,CAACkF,uBAAuB,CAACZ,mBAAmB,CAACZ,WAAW,EAAE1D,KAAK,CAAC,EAAE;UAC5I,OAAO,KAAK;QAChB;QACA,OAAO0K,WAAW,IAAIA,WAAW,KAAKD,WAAW;MACrD;IACJ,CAAC;IACD,IAAI9D,gBAAgB,EAAE;MAClB/E,QAAQ,GAAG,IAAI,CAACgJ,QAAQ,CAAC,CAAC;MAC1B7N,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAEpC,sBAAsB,EAAEqE,IAAI,EAAE,IAAI,CAACiH,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChG;IACA,IAAI,GAAG,KAAKV,aAAa,CAAC,CAAC,CAAC,EAAE;MAC1BA,aAAa,GAAGA,aAAa,CAACW,KAAK,CAAC,CAAC,CAAC;IAC1C;IACAjO,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAEzC,oBAAoB,EAAEkL,aAAa,EAAExG,IAAI,EAAE,IAAI,CAACoH,iBAAiB,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;IACvGhO,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAExC,eAAe,EAAEyE,IAAI,EAAE,IAAI,CAACO,gBAAgB,CAAC2G,IAAI,CAAC,IAAI,CAAC,CAAC;IAClFhO,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAEvC,kBAAkB,EAAEwE,IAAI,EAAE,IAAI,CAACqH,eAAe,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC;IACpFhO,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAEtC,qBAAqB,EAAEuE,IAAI,EAAE,IAAI,CAACsH,iBAAiB,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC;IACzFhO,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAErC,wBAAwB,EAAEsE,IAAI,EAAE,IAAI,CAACuH,iBAAiB,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5F,IAAI,IAAI,CAACpI,MAAM,CAAC,eAAe,CAAC,EAAE;MAC9B5F,YAAY,CAAC8N,EAAE,CAACjJ,QAAQ,EAAElC,kBAAkB,EAAE,IAAI,CAAC2L,eAAe,CAACN,IAAI,CAAC,IAAI,CAAC,CAAC;IAClF;EACJ,CAAC;EACDhC,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B,OAAO,IAAI,CAACuC,aAAa,IAAI,IAAI,CAACA,aAAa,CAACxJ,QAAQ,CAAC,IAAI,CAAC+H,gBAAgB,CAAClK,WAAW,CAAC,CAAC;EAChG,CAAC;EACD4L,oBAAoB,EAAE,SAAAA,CAAS3J,QAAQ,EAAE4J,UAAU,EAAE;IACjD,OAAO;MACH3E,SAAS,EAAErJ,gBAAgB,CAACgO,UAAU,CAAC;MACvCC,KAAK,EAAE;QACH7E,QAAQ,EAAE,IAAI,CAACjE,MAAM,CAAC,UAAU,CAAC;QACjCgG,WAAW,EAAEnL,gBAAgB,CAACoE,QAAQ;MAC1C;IACJ,CAAC;EACL,CAAC;EACD8J,kBAAkB,EAAE,SAAAA,CAAS9J,QAAQ,EAAE;IACnC,IAAI+J,MAAM,GAAG/J,QAAQ;IACrB,IAAIsF,KAAK,GAAG,IAAI,CAACvE,MAAM,CAAC,OAAO,CAAC;IAChC,IAAI6I,UAAU,GAAG,IAAI,CAACI,aAAa,CAAC,CAAC;IACrC,IAAIC,QAAQ,GAAG,IAAI,CAAClJ,MAAM,CAAC,cAAc,CAAC;IAC1C,IAAIkJ,QAAQ,EAAE;MACVA,QAAQ,GAAG,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC;MACtCF,MAAM,GAAGhP,CAAC,CAAC,OAAO,CAAC,CAACoP,QAAQ,CAACP,UAAU,CAAC;MACxCK,QAAQ,CAACG,MAAM,CAAC,IAAI,CAACT,oBAAoB,CAAC3J,QAAQ,EAAE+J,MAAM,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIzE,KAAK,EAAE;MACdyE,MAAM,GAAGhP,CAAC,CAAC,OAAO,CAAC,CAACoP,QAAQ,CAACP,UAAU,CAAC;MACxC5J,QAAQ,CAACsF,KAAK,CAAC,CAAC,CAAC7E,GAAG,CAAC;QACjB4J,KAAK,EAAErK,QAAQ,CAACS,GAAG,CAAC,OAAO,CAAC;QAC5B6J,MAAM,EAAEtK,QAAQ,CAACS,GAAG,CAAC,QAAQ;MACjC,CAAC,CAAC,CAAC0J,QAAQ,CAACJ,MAAM,CAAC;IACvB;IACA,OAAOA,MAAM,CAACQ,WAAW,CAAC,IAAI,CAACtC,gBAAgB,CAAClK,WAAW,CAAC,EAAEgM,MAAM,CAAC3I,GAAG,CAAC,CAAC,CAAC,KAAKpB,QAAQ,CAACoB,GAAG,CAAC,CAAC,CAAC,CAAC,CAACmJ,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACxJ,MAAM,CAAC,YAAY,CAAC,CAAC;EACrJ,CAAC;EACDyJ,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,IAAI,IAAI,CAACrD,oBAAoB,CAAC,CAAC,EAAE;MAC7B,IAAI,CAACuC,aAAa,CAACe,MAAM,CAAC,CAAC;IAC/B,CAAC,MAAM;MACH,IAAI,CAACC,oBAAoB,CAAC,KAAK,CAAC;IACpC;IACA,IAAI,CAAChB,aAAa,GAAG,IAAI;EAC7B,CAAC;EACDiB,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC5B,IAAI,CAACC,sBAAsB,CAAC,KAAK,CAAC;IAClC,IAAI,CAACC,eAAe,GAAG,IAAI;EAC/B,CAAC;EACDC,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B3P,YAAY,CAAC4P,GAAG,CAAC,IAAI,CAACzC,SAAS,CAAC,CAAC,EAAE,GAAG,GAAGhL,SAAS,CAAC;IACnDnC,YAAY,CAAC4P,GAAG,CAAC,IAAI,CAAC/B,QAAQ,CAAC,CAAC,EAAE,GAAG,GAAG1L,SAAS,CAAC;EACtD,CAAC;EACDqK,KAAK,EAAE,SAAAA,CAASqD,QAAQ,EAAEhL,QAAQ,EAAE;IAChCzE,IAAI,CAACyE,QAAQ,IAAI,IAAI,CAAC0J,aAAa,EAAEsB,QAAQ,CAAC;EAClD,CAAC;EACDC,oBAAoB,EAAE,SAAAA,CAASC,CAAC,EAAE;IAC9B,IAAIC,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC7C,IAAID,cAAc,EAAE;MAChB,OAAOA,cAAc;IACzB;IACA,IAAIpG,gBAAgB,GAAG,IAAI,CAAChE,MAAM,CAAC,kBAAkB,CAAC;IACtD,IAAIgE,gBAAgB,EAAE;MAClB,OAAO,IAAI,CAAC/E,QAAQ,CAAC,CAAC;IAC1B;IACA,IAAI4I,OAAO,GAAG7N,CAAC,CAACmQ,CAAC,IAAIA,CAAC,CAACG,MAAM,CAAC;IAC9B,IAAI5C,aAAa,GAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;IAC5C,IAAI,GAAG,KAAKI,aAAa,CAAC,CAAC,CAAC,EAAE;MAC1B,IAAI6C,MAAM,GAAG,IAAI,CAAChD,SAAS,CAAC,CAAC,CAACiD,IAAI,CAAC9C,aAAa,CAAC;MACjD,IAAI,CAAC6C,MAAM,CAACE,EAAE,CAAC5C,OAAO,CAAC,EAAE;QACrBA,OAAO,GAAGA,OAAO,CAAC7G,OAAO,CAACuJ,MAAM,CAAC;MACrC;IACJ;IACA,OAAO1C,OAAO;EAClB,CAAC;EACDwC,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,IAAIK,SAAS,GAAG,IAAI,CAAC1H,mBAAmB,CAAC,CAAC;IAC1C,OAAO0H,SAAS,CAACZ,eAAe;EACpC,CAAC;EACD3B,mBAAmB,EAAE,SAAAA,CAASgC,CAAC,EAAE;IAC7B,IAAIpP,aAAa,CAACoP,CAAC,CAAC,EAAE;MAClB;IACJ;IACA,IAAIF,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAIhL,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9B,IAAI4E,aAAa,GAAG,IAAI,CAAC7D,MAAM,CAAC,eAAe,CAAC;IAChD,IAAI,YAAY,KAAK6D,aAAa,IAAI,MAAM,KAAKA,aAAa,EAAE;MAC5DoG,QAAQ,CAAC1J,IAAI,GAAG4J,CAAC,CAAC5M,KAAK,GAAG0B,QAAQ,CAACmG,MAAM,CAAC,CAAC,CAAC7E,IAAI,GAAGhG,MAAM,CAAC0E,QAAQ,CAAC,CAACsB,IAAI,GAAG3G,QAAQ,CAACqF,QAAQ,CAAC,GAAG,CAAC;IACrG;IACA,IAAI,UAAU,KAAK4E,aAAa,IAAI,MAAM,KAAKA,aAAa,EAAE;MAC1DoG,QAAQ,CAACzJ,GAAG,GAAG2J,CAAC,CAACzM,KAAK,GAAGuB,QAAQ,CAACmG,MAAM,CAAC,CAAC,CAAC5E,GAAG,GAAGjG,MAAM,CAAC0E,QAAQ,CAAC,CAACuB,GAAG,GAAG3G,SAAS,CAACoF,QAAQ,CAAC,GAAG,CAAC;IACnG;IACA,IAAI,CAAC2H,KAAK,CAACqD,QAAQ,EAAEhL,QAAQ,CAAC;IAC9B,IAAI,CAAC0L,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAACC,aAAa,CAACT,CAAC,CAAC,CAAC;EACxD,CAAC;EACDU,eAAe,EAAE,SAAAA,CAASxN,KAAK,EAAE4B,QAAQ,EAAE;IACvC,IAAIoF,MAAM,GAAG,IAAI,CAACrE,MAAM,CAAC,QAAQ,CAAC;IAClC,IAAI6H,OAAO,GAAG7N,CAAC,CAACqD,KAAK,CAACyN,aAAa,IAAIzN,KAAK,CAACyN,aAAa,CAACR,MAAM,CAAC;IAClE,IAAIjG,MAAM,IAAI,CAACwD,OAAO,CAAC7G,OAAO,CAACqD,MAAM,CAAC,CAACoB,MAAM,EAAE;MAC3C,OAAO,KAAK;IAChB;IACA,IAAI,CAACxG,QAAQ,CAACwG,MAAM,EAAE;MAClB,OAAO,KAAK;IAChB;IACA,OAAO,CAACxG,QAAQ,CAACwL,EAAE,CAAC,0CAA0C,CAAC;EACnE,CAAC;EACDnC,iBAAiB,EAAE,SAAAA,CAAS6B,CAAC,EAAE;IAC3B,IAAIlL,QAAQ,GAAG,IAAI,CAACiL,oBAAoB,CAACC,CAAC,CAAC;IAC3C,IAAI,CAACY,cAAc,GAAG,IAAI;IAC1B,IAAI,CAAC,IAAI,CAACF,eAAe,CAACV,CAAC,EAAElL,QAAQ,CAAC,EAAE;MACpCkL,CAAC,CAACa,MAAM,GAAG,IAAI;MACf;IACJ;IACA,IAAI,IAAI,CAAClB,eAAe,EAAE;MACtB;IACJ;IACA,IAAImB,aAAa,GAAG,IAAI,CAACC,iBAAiB,CAACf,CAAC,EAAElL,QAAQ,CAAC;IACvD,IAAI,CAAC0L,UAAU,CAAC,aAAa,CAAC,CAACM,aAAa,CAAC;IAC7C,IAAIA,aAAa,CAACD,MAAM,EAAE;MACtBb,CAAC,CAACa,MAAM,GAAG,IAAI;MACf;IACJ;IACA,IAAI,CAAChL,MAAM,CAAC,UAAU,EAAEiL,aAAa,CAAChH,QAAQ,CAAC;IAC/C,IAAI,CAACkH,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACrB,eAAe,GAAG7K,QAAQ;IAC/B,IAAIwH,aAAa,GAAGxH,QAAQ,CAACmG,MAAM,CAAC,CAAC;IACrC,IAAIa,YAAY,GAAG,IAAI,CAAC0C,aAAa,GAAG,IAAI,CAACI,kBAAkB,CAAC9J,QAAQ,CAAC;IACzE,IAAI,CAAC0K,oBAAoB,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACE,sBAAsB,CAAC,IAAI,CAAC;IACjC,IAAI,CAACuB,sBAAsB,CAACnF,YAAY,CAACwB,QAAQ,CAAC,CAAC,CAAC;IACpD,IAAI4D,eAAe,GAAG,OAAO,KAAKpF,YAAY,CAACvG,GAAG,CAAC,UAAU,CAAC;IAC9D,IAAI,CAACiH,aAAa,CAAChM,MAAM,CAAC,CAAC,CAAC,EAAEsQ,aAAa,EAAE;MACzC/E,WAAW,EAAED,YAAY,CAAC5F,GAAG,CAAC,CAAC,CAAC;MAChCoG,aAAa,EAAE4E,eAAe,IAAI5E;IACtC,CAAC,CAAC,CAAC;IACH,IAAI,CAACkE,UAAU,CAAC,yBAAyB,CAAC,CAAChR,QAAQ,CAAC,CAAC,CAAC,EAAEsR,aAAa,EAAE;MACnE/E,WAAW,EAAED;IACjB,CAAC,CAAC,CAAC;IACH,IAAI9F,KAAK,GAAG,IAAI,CAAC8H,QAAQ,CAAC,CAAC;IAC3B,IAAIqD,UAAU,GAAG,IAAI,CAACC,cAAc,CAACpL,KAAK,CAAC;IAC3C,IAAI4D,WAAW,GAAG,IAAI,CAACyH,eAAe,CAAC,CAAC;IACxC,IAAIC,SAAS,GAAG3R,aAAa,CAACqG,KAAK,CAAC;IACpC,IAAIuL,UAAU,GAAG3R,cAAc,CAACoG,KAAK,CAAC;IACtC,IAAIwL,YAAY,GAAG/R,QAAQ,CAACqM,YAAY,CAAC;IACzC,IAAI2F,aAAa,GAAG/R,SAAS,CAACoM,YAAY,CAAC;IAC3C,IAAI4F,gBAAgB,GAAG5F,YAAY,CAACb,MAAM,CAAC,CAAC,CAAC7E,IAAI,GAAG+K,UAAU,CAAC/K,IAAI;MAC/DuL,eAAe,GAAG7F,YAAY,CAACb,MAAM,CAAC,CAAC,CAAC5E,GAAG,GAAG8K,UAAU,CAAC9K,GAAG;IAChE,IAAIL,KAAK,CAACsF,MAAM,EAAE;MACd0E,CAAC,CAAC4B,aAAa,GAAGF,gBAAgB,GAAG9H,WAAW,CAACxD,IAAI;MACrD4J,CAAC,CAAC6B,cAAc,GAAGP,SAAS,GAAGI,gBAAgB,GAAGF,YAAY,GAAG5H,WAAW,CAACtD,KAAK;MAClF0J,CAAC,CAAC8B,YAAY,GAAGH,eAAe,GAAG/H,WAAW,CAACvD,GAAG;MAClD2J,CAAC,CAAC+B,eAAe,GAAGR,UAAU,GAAGI,eAAe,GAAGF,aAAa,GAAG7H,WAAW,CAACrD,MAAM;IACzF;IACA,IAAI,IAAI,CAACV,MAAM,CAAC,YAAY,CAAC,EAAE;MAC3B,IAAI,CAAC8G,cAAc,CAAC,CAAC;IACzB;EACJ,CAAC;EACDyE,cAAc,EAAE,SAAAA,CAASpL,KAAK,EAAE;IAC5B,IAAIiF,MAAM,GAAGjF,KAAK,IAAIzE,aAAa,CAAC0J,MAAM,CAACjF,KAAK,CAAC;IACjD,OAAOiF,MAAM,GAAGA,MAAM,GAAG;MACrB7E,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDmJ,oBAAoB,EAAE,SAAAA,CAAS5N,KAAK,EAAE;IAClC,IAAI,CAAC4M,aAAa,IAAI,IAAI,CAACA,aAAa,CAACa,WAAW,CAAC,IAAI,CAACtC,gBAAgB,CAAC,UAAU,CAAC,EAAEnL,KAAK,CAAC;EAClG,CAAC;EACD8N,sBAAsB,EAAE,SAAAA,CAAS9N,KAAK,EAAEkD,QAAQ,EAAE;IAC9C,IAAImL,cAAc,GAAGnL,QAAQ,IAAI,IAAI,CAAC6K,eAAe;IACrDM,cAAc,IAAIA,cAAc,CAACZ,WAAW,CAAC,IAAI,CAACtC,gBAAgB,CAAC,QAAQ,CAAC,EAAEnL,KAAK,CAAC;EACxF,CAAC;EACDqP,sBAAsB,EAAE,SAAAA,CAASnM,QAAQ,EAAE;IACvCjF,CAAC,CAAC,GAAG,CAACmS,MAAM,CAACvO,mBAAmB,CAAC,CAAC,CAAC8B,GAAG,CAAC,QAAQ,EAAET,QAAQ,CAACS,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC5E,CAAC;EACD8L,eAAe,EAAE,SAAAA,CAAA,EAAW;IACxB,IAAIzH,WAAW,GAAG,IAAI,CAAC/D,MAAM,CAAC,aAAa,CAAC;IAC5C,IAAIrE,UAAU,CAACoI,WAAW,CAAC,EAAE;MACzBA,WAAW,GAAGA,WAAW,CAAC6B,IAAI,CAAC,IAAI,CAAC;IACxC;IACA,OAAOvL,YAAY,CAAC0J,WAAW,CAAC;EACpC,CAAC;EACDkE,QAAQ,EAAE,SAAAA,CAAA,EAAW;IACjB,IAAI7H,IAAI,GAAG,IAAI,CAACJ,MAAM,CAAC,UAAU,CAAC;IAClC,IAAIrE,UAAU,CAACyE,IAAI,CAAC,EAAE;MAClBA,IAAI,GAAGA,IAAI,CAACwF,IAAI,CAAC,IAAI,CAAC;IAC1B;IACA,OAAO5L,CAAC,CAACoG,IAAI,CAAC;EAClB,CAAC;EACD6I,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI/E,SAAS,GAAG,IAAI,CAAClE,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI,KAAK,CAAC,KAAKkE,SAAS,EAAE;MACtBA,SAAS,GAAGlI,QAAQ,CAAC,CAAC;IAC1B;IACA,OAAOhC,CAAC,CAACkK,SAAS,CAAC;EACvB,CAAC;EACDzC,gBAAgB,EAAE,SAAAA,CAAS0I,CAAC,EAAEiC,QAAQ,EAAE;IACpC,IAAI,CAAC5K,aAAa,GAAG2I,CAAC;IACtB,IAAI,CAAC,IAAI,CAACxB,aAAa,EAAE;MACrBwB,CAAC,CAACa,MAAM,GAAG,IAAI;MACf;IACJ;IACA,IAAI5F,MAAM,GAAG+E,CAAC,CAAC/E,MAAM;IACrB,IAAIiH,aAAa,GAAG,IAAI,CAACxF,cAAc;IACvC,IAAI,CAACD,KAAK,CAAC;MACPrG,IAAI,EAAE8L,aAAa,CAAC9L,IAAI,GAAG6E,MAAM,CAAC9H,CAAC;MACnCkD,GAAG,EAAE6L,aAAa,CAAC7L,GAAG,GAAG4E,MAAM,CAAC3H;IACpC,CAAC,CAAC;IACF,IAAI,CAAC2O,QAAQ,EAAE;MACX,IAAI,CAACE,iBAAiB,CAACnC,CAAC,CAAC;IAC7B;IACA,IAAIoC,SAAS,GAAG,IAAI,CAAC3B,aAAa,CAACT,CAAC,CAAC;IACrC,IAAI,CAACQ,UAAU,CAAC,YAAY,CAAC,CAAC4B,SAAS,CAAC;IACxC,IAAI,IAAI,KAAKA,SAAS,CAACvB,MAAM,EAAE;MAC3B;IACJ;IACA,IAAI/N,eAAe,GAAG,IAAI,CAACuP,mBAAmB,CAAC,CAAC;IAChDvP,eAAe,CAAC0F,QAAQ,CAACwH,CAAC,EAAEiC,QAAQ,CAAC;EACzC,CAAC;EACDE,iBAAiB,EAAE,SAAAA,CAASnC,CAAC,EAAE;IAC3B,IAAI,IAAI,CAACnK,MAAM,CAAC,YAAY,CAAC,EAAE;MAC3B,IAAInB,aAAa,GAAGzB,gBAAgB,CAAC+M,CAAC,CAAC;MACvC,IAAIsC,UAAU,GAAGxS,UAAU,CAACyS,iBAAiB,CAAC7N,aAAa,CAACvB,CAAC,EAAEuB,aAAa,CAACpB,CAAC,EAAE,IAAI,CAACwB,QAAQ,CAAC,CAAC,CAACoB,GAAG,CAAC,CAAC,CAAC,CAAC;MACvG,IAAI,CAACoC,qBAAqB,CAAC9D,gBAAgB,CAAC8N,UAAU,EAAE5N,aAAa,CAAC;MACtE,IAAI,CAAC0D,uBAAuB,CAAC5D,gBAAgB,CAAC8N,UAAU,EAAE5N,aAAa,CAAC;IAC5E;EACJ,CAAC;EACDmJ,cAAc,EAAE,SAAAA,CAAS/I,QAAQ,EAAE;IAC/B,IAAI8B,WAAW;IACf9B,QAAQ,CAAC0N,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC7N,IAAI,CAAC8N,MAAM,IAAI;MACxC,IAAIC,OAAO,GAAG9S,CAAC,CAAC6S,MAAM,CAAC;MACvB,IAAI,IAAI,CAACtK,uBAAuB,CAAC9C,YAAY,CAACqN,OAAO,CAAC,IAAI,IAAI,CAACrK,qBAAqB,CAAChD,YAAY,CAACqN,OAAO,CAAC,EAAE;QACxG/L,WAAW,GAAG+L,OAAO;QACrB,OAAO,IAAI;MACf;IACJ,CAAC,CAAC;IACF,OAAO/L,WAAW;EACtB,CAAC;EACDgM,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC3B,IAAIC,IAAI,GAAG,IAAI,CAAC7K,QAAQ,CAAC0C,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC/C,IAAI5G,SAAS,GAAG,IAAI,CAAC8B,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI9B,SAAS,EAAE;MACX8O,IAAI,CAAC9O,SAAS,GAAGA,SAAS;MAC1B8O,IAAI,CAAChO,OAAO,GAAGd,SAAS,CAACc,OAAO,CAAC,CAAC;IACtC;IACA,OAAOgO,IAAI;EACf,CAAC;EACDpC,aAAa,EAAE,SAAAA,CAAST,CAAC,EAAE;IACvB,IAAIjN,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD,IAAI/F,eAAe,GAAG,IAAI,CAACuP,mBAAmB,CAAC,CAAC;IAChD,OAAO;MACHnP,KAAK,EAAE8M,CAAC;MACRlG,QAAQ,EAAE/G,eAAe,CAAC8C,MAAM,CAAC,UAAU,CAAC;MAC5CgG,WAAW,EAAEnL,gBAAgB,CAACqC,eAAe,CAAC4M,eAAe,CAAC;MAC9DmD,aAAa,EAAE/P,eAAe,CAAC8C,MAAM,CAAC,WAAW,CAAC,IAAI9C,eAAe;MACrEgQ,WAAW,EAAEjQ,eAAe,CAAC+C,MAAM,CAAC,WAAW,CAAC,IAAI/C,eAAe;MACnEkQ,QAAQ,EAAEjQ,eAAe,CAAC8C,MAAM,CAAC,MAAM,CAAC;MACxCoN,MAAM,EAAEnQ,eAAe,CAAC+C,MAAM,CAAC,MAAM;IACzC,CAAC;EACL,CAAC;EACDkL,iBAAiB,EAAE,SAAAA,CAASf,CAAC,EAAEkD,YAAY,EAAE;IACzC,IAAIL,IAAI,GAAG,IAAI,CAACpC,aAAa,CAACT,CAAC,CAAC;IAChC,OAAO;MACH9M,KAAK,EAAE2P,IAAI,CAAC3P,KAAK;MACjB4G,QAAQ,EAAE+I,IAAI,CAAC/I,QAAQ;MACvB+B,WAAW,EAAEqH,YAAY;MACzBF,QAAQ,EAAEH,IAAI,CAACG;IACnB,CAAC;EACL,CAAC;EACDG,4BAA4B,EAAE,SAAAA,CAAA,EAAW;IACrC,CAAC,IAAI,CAAClH,oBAAoB,CAAC,CAAC,IAAI,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACJ,cAAc,EAAE,IAAI,CAACsD,eAAe,CAAC;EACzF,CAAC;EACDvB,eAAe,EAAE,SAAAA,CAAS4B,CAAC,EAAE;IACzB,IAAIoD,CAAC,GAAG,IAAInR,QAAQ,CAAD,CAAC;IACpB,IAAIoR,gBAAgB,GAAG,IAAI,CAAC5C,aAAa,CAACT,CAAC,CAAC;IAC5C,IAAIsD,aAAa,GAAG,IAAI,CAAC7C,aAAa,CAACT,CAAC,CAAC;IACzC,IAAIlN,eAAe,GAAG,IAAI,CAACuP,mBAAmB,CAAC,CAAC;IAChD,IAAIkB,kBAAkB,GAAG,IAAI;IAC7B,IAAI,CAAC3C,cAAc,GAAG,KAAK;IAC3B,IAAI;MACA,IAAI,CAACJ,UAAU,CAAC,WAAW,CAAC,CAAC6C,gBAAgB,CAAC;IAClD,CAAC,SAAS;MACNtR,IAAI,CAACC,WAAW,CAACqR,gBAAgB,CAACxC,MAAM,CAAC,CAAC,CAAC2C,IAAI,CAAC3C,MAAM,IAAI;QACtD,IAAI,CAACA,MAAM,EAAE;UACT,IAAI/N,eAAe,KAAK,IAAI,EAAE;YAC1BA,eAAe,CAAC0N,UAAU,CAAC,QAAQ,CAAC,CAAC8C,aAAa,CAAC;UACvD;UACA,IAAI,CAACA,aAAa,CAACzC,MAAM,EAAE;YACvB0C,kBAAkB,GAAG,KAAK;YAC1BxR,IAAI,CAACC,WAAW,CAACc,eAAe,CAAC6F,OAAO,CAAC0K,gBAAgB,CAAC,CAAC,CAAC,CAACI,MAAM,CAACL,CAAC,CAACrK,OAAO,CAAC;YAC9E;UACJ;QACJ;QACAqK,CAAC,CAACrK,OAAO,CAAC,CAAC;MACf,CAAC,CAAC,CAAC2K,IAAI,CAACN,CAAC,CAACrK,OAAO,CAAC;MAClBqK,CAAC,CAACI,IAAI,CAAC,MAAM;QACT,IAAID,kBAAkB,EAAE;UACpB,IAAI,CAACJ,4BAA4B,CAAC,CAAC;QACvC;QACA,IAAI,CAACQ,iBAAiB,CAAC7Q,eAAe,CAAC;MAC3C,CAAC,CAAC;IACN;EACJ,CAAC;EACD8Q,6BAA6B,EAAE,SAAAA,CAAS5D,CAAC,EAAE;IACvC,IAAIjN,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD,IAAI,IAAI,KAAK9F,eAAe,EAAE;MAC1B,OAAO,KAAK;IAChB;IACA,IAAI+I,YAAY,GAAG/I,eAAe,CAACyL,aAAa;IAChD,IAAIqF,uBAAuB,GAAG9Q,eAAe,CAAC+B,QAAQ,CAAC,CAAC;IACxD,IAAIgP,uBAAuB,GAAG,IAAI,CAAChP,QAAQ,CAAC,CAAC;IAC7C,IAAIJ,aAAa,GAAGzB,gBAAgB,CAAC+M,CAAC,CAAC;IACvC,IAAIvL,QAAQ,GAAG3E,UAAU,CAACyS,iBAAiB,CAAC7N,aAAa,CAACvB,CAAC,EAAEuB,aAAa,CAACpB,CAAC,EAAE,IAAI,CAACuB,OAAO,CAAC,CAAC,CAAC;IAC7F,IAAIkP,kBAAkB,GAAGtP,QAAQ,CAAC0F,MAAM,CAACtF,OAAO,IAAI;MAChD,IAAIC,QAAQ,GAAGjF,CAAC,CAACgF,OAAO,CAAC;MACzB,IAAIC,QAAQ,CAACE,QAAQ,CAAC,IAAI,CAAC+H,gBAAgB,CAAC,CAAC,CAAC,EAAE;QAC5C,OAAO,CAACjI,QAAQ,CAAC+B,OAAO,CAACiF,YAAY,CAAC,CAACR,MAAM;MACjD;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,IAAI2E,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC7C,IAAI8D,kBAAkB,GAAGD,kBAAkB,KAAKF,uBAAuB,CAAC3N,GAAG,CAAC,CAAC,CAAC;IAC9E,IAAI+N,2BAA2B,GAAGpU,CAAC,CAACkU,kBAAkB,CAAC,CAAClN,OAAO,CAACoJ,cAAc,CAAC,CAAC3E,MAAM;IACtF,OAAO,CAACyI,kBAAkB,IAAIA,kBAAkB,KAAKD,uBAAuB,CAAC5N,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC8N,kBAAkB,IAAI,CAACC,2BAA2B;EAC9I,CAAC;EACD5F,iBAAiB,EAAE,SAAAA,CAAS2B,CAAC,EAAE;IAC3B,IAAI,CAACkE,mBAAmB,CAAClE,CAAC,CAAC;IAC3B,IAAI,IAAI,CAAC4D,6BAA6B,CAAC5D,CAAC,CAAC,EAAE;MACvC,IAAI,CAACmE,mBAAmB,CAAC,CAAC;IAC9B;IACA,IAAIpR,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD9F,eAAe,CAAC0F,SAAS,CAACuH,CAAC,CAAC;EAChC,CAAC;EACD1B,iBAAiB,EAAE,SAAAA,CAAS0B,CAAC,EAAE;IAC3B,IAAI,CAACoE,mBAAmB,CAACpE,CAAC,CAAC;IAC3B,IAAI,CAACqE,qBAAqB,CAAC,CAAC;IAC5B,IAAI,IAAI,KAAK,IAAI,CAACxL,mBAAmB,CAAC,CAAC,EAAE;MACrC,IAAI,CAACtB,KAAK,CAAC,CAAC;IAChB;IACA,IAAIxE,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD9F,eAAe,CAAC2F,SAAS,CAACsH,CAAC,CAAC;EAChC,CAAC;EACDzB,eAAe,EAAE,SAAAA,CAASyB,CAAC,EAAE;IACzB,IAAI,IAAI,CAACY,cAAc,IAAI,QAAQ,KAAKZ,CAAC,CAACsE,GAAG,EAAE;MAC3C,IAAI,CAACC,qBAAqB,CAACvE,CAAC,CAAC;IACjC;EACJ,CAAC;EACDuE,qBAAqB,EAAE,SAAAA,CAASvE,CAAC,EAAE;IAC/B,IAAIwE,gBAAgB;IACpB,IAAIvE,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC7C,IAAI,CAACD,cAAc,EAAE;MACjB;IACJ;IACA,IAAIwE,mBAAmB,GAAG,IAAI,CAAChE,aAAa,CAACT,CAAC,CAAC;IAC/C,IAAI,CAACQ,UAAU,CAAC,cAAc,CAAC,CAACiE,mBAAmB,CAAC;IACpD,IAAIA,mBAAmB,CAAC5D,MAAM,EAAE;MAC5B;IACJ;IACA,IAAI,CAACD,cAAc,GAAG,KAAK;IAC3B,IAAI,MAAM4D,gBAAgB,GAAGzR,eAAe,CAAC,IAAI,KAAK,CAAC,KAAKyR,gBAAgB,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAChF,oBAAoB,CAAC,KAAK,CAAC;IACpI,IAAI,CAACI,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACuD,4BAA4B,CAAC,CAAC;IACnC,IAAIrQ,eAAe,GAAG,IAAI,CAACuP,mBAAmB,CAAC,CAAC;IAChD,IAAI,CAACsB,iBAAiB,CAAC7Q,eAAe,CAAC;IACvC,IAAI,CAACgI,oBAAoB,CAAC,CAAC;EAC/B,CAAC;EACD0F,UAAU,EAAE,SAAAA,CAASkE,IAAI,EAAE;IACvB,OAAO,IAAI,CAAC,GAAG,GAAGA,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,CAACC,qBAAqB,CAACD,IAAI,CAAC;EAC1E,CAAC;EACDE,yBAAyB,EAAE,SAAAA,CAAA,EAAW;IAClC,OAAO5R,uBAAuB;EAClC,CAAC;EACD6R,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAI,CAAC,IAAI,CAAChP,MAAM,CAAC,iBAAiB,CAAC,EAAE;MACjC;IACJ;IACA,IAAI,CAACiP,gBAAgB,CAACC,mBAAmB,CAAC;MACtCC,OAAO,EAAE,IAAIlT,aAAa,CAAD;IAC7B,CAAC,CAAC;IACF,IAAI,CAACkG,QAAQ,CAAC0C,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACxC,CAAC;EACDsK,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAI,CAACjN,QAAQ,CAAC,CAAC;IACf,IAAI,CAAClD,QAAQ,CAAC,CAAC,CAACoQ,QAAQ,CAAC,IAAI,CAACnI,gBAAgB,CAAC,CAAC,CAAC;IACjD,IAAIoI,UAAU,GAAG,IAAI,CAACL,gBAAgB,CAACM,qBAAqB,KAAK,IAAI,CAACvP,MAAM,CAAC,iBAAiB,CAAC;IAC/F,IAAIkJ,QAAQ,GAAG,IAAI,CAACsG,oBAAoB,CAAC,iBAAiB,CAAC;IAC3D,IAAItG,QAAQ,EAAE;MACVlP,CAAC,CAACkP,QAAQ,CAACG,MAAM,CAAC;QACdnF,SAAS,EAAE,IAAI,CAAClF,OAAO,CAAC,CAAC;QACzBsQ,UAAU,EAAEA;MAChB,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EACDG,cAAc,EAAE,SAAAA,CAASzC,IAAI,EAAE;IAC3B,IAAI6B,IAAI,GAAG7B,IAAI,CAAC6B,IAAI;IACpB,QAAQA,IAAI;MACR,KAAK,aAAa;MAClB,KAAK,YAAY;MACjB,KAAK,WAAW;MAChB,KAAK,QAAQ;MACb,KAAK,aAAa;MAClB,KAAK,aAAa;MAClB,KAAK,cAAc;MACnB,KAAK,yBAAyB;QAC1B,IAAI,CAAC,GAAG,GAAGA,IAAI,GAAG,QAAQ,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAACD,IAAI,CAAC;QAC9D;MACJ,KAAK,cAAc;MACnB,KAAK,iBAAiB;MACtB,KAAK,WAAW;MAChB,KAAK,OAAO;QACR;MACJ,KAAK,kBAAkB;MACvB,KAAK,eAAe;MACpB,KAAK,UAAU;MACf,KAAK,UAAU;MACf,KAAK,QAAQ;MACb,KAAK,WAAW;QACZ,IAAI,CAACpF,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAACM,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAAC9E,oBAAoB,CAAC,CAAC;QAC3B;MACJ,KAAK,eAAe;QAChB,IAAI,CAACyD,eAAe,CAAC,CAAC;QACtB;MACJ,KAAK,YAAY;QACb,IAAI,CAACjG,qBAAqB,CAACf,KAAK,CAAC,CAAC;QAClC,IAAI,CAACa,uBAAuB,CAACb,KAAK,CAAC,CAAC;QACpC;MACJ,KAAK,mBAAmB;MACxB,KAAK,aAAa;MAClB,KAAK,aAAa;MAClB,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,MAAM;MACX,KAAK,UAAU;QACX;MACJ;QACI,IAAI,CAACS,QAAQ,CAAC6K,IAAI,CAAC;IAC3B;EACJ,CAAC;EACDR,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC5B,OAAOvP,eAAe,IAAI,IAAI;EAClC,CAAC;EACD+F,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC5B,OAAO9F,eAAe,IAAI,IAAI;EAClC,CAAC;EACDoR,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC5B,IAAIoB,YAAY,GAAG,IAAI,CAAC1P,MAAM,CAAC,OAAO,CAAC;IACvC,IAAI9C,eAAe,GAAG,IAAI,CAAC8F,mBAAmB,CAAC,CAAC;IAChD,IAAI0M,YAAY,IAAIA,YAAY,KAAKxS,eAAe,CAAC8C,MAAM,CAAC,OAAO,CAAC,EAAE;MAClE/C,eAAe,GAAG,IAAI;IAC1B;EACJ,CAAC;EACDkO,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC5BjO,eAAe,GAAG,IAAI;EAC1B,CAAC;EACDyS,qBAAqB,EAAE,SAAAA,CAAA,EAAW;IAC9BzS,eAAe,GAAG,IAAI;EAC1B,CAAC;EACDsR,qBAAqB,EAAE,SAAAA,CAAA,EAAW;IAC9BvR,eAAe,GAAG,IAAI;EAC1B,CAAC;EACD6Q,iBAAiB,EAAE,SAAAA,CAAS7Q,eAAe,EAAE;IACzC,IAAI,CAACyE,KAAK,CAAC,CAAC;IACZzE,eAAe,CAACyE,KAAK,CAAC,CAAC;IACvB,IAAI,CAACsF,aAAa,CAAC,CAAC;IACpB,IAAI,CAACzE,uBAAuB,CAACb,KAAK,CAAC,CAAC;IACpC,IAAI,CAACe,qBAAqB,CAACf,KAAK,CAAC,CAAC;IAClC,IAAI,CAAC+H,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAAC4E,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAACmB,qBAAqB,CAAC,CAAC;EAChC,CAAC;EACDC,QAAQ,EAAE,SAAAA,CAAA,EAAW;IACjB,IAAI,CAACzN,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC4H,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACN,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAAC+E,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAACmB,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAAC7F,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC9C,aAAa,CAAC,CAAC;EACxB,CAAC;EACDqH,mBAAmB,EAAE,SAAAA,CAAStL,WAAW,EAAE;IACvC,IAAIiK,IAAI,GAAG,IAAI,CAACpC,aAAa,CAAC7H,WAAW,CAAC;IAC1C,IAAI,CAAC4H,UAAU,CAAC,aAAa,CAAC,CAACqC,IAAI,CAAC;EACxC,CAAC;EACDuB,mBAAmB,EAAE,SAAAA,CAASxL,WAAW,EAAE;IACvC,IAAIiK,IAAI,GAAG,IAAI,CAACpC,aAAa,CAAC7H,WAAW,CAAC;IAC1C,IAAI,CAAC4H,UAAU,CAAC,aAAa,CAAC,CAACqC,IAAI,CAAC;EACxC;AACJ,CAAC,CAAC;AACF1S,iBAAiB,CAACiC,SAAS,EAAEmG,SAAS,CAAC;AACvC,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}