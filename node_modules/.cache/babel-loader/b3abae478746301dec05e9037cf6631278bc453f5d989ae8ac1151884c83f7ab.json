{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/common/utils/get_updated_options.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isPlainObject, type } from \"../../../../core/utils/type\";\nvar defaultNotDeepCopyArrays = [\"dataSource\", \"selectedRowKeys\"];\nvar propsToIgnore = {\n  integrationOptions: true\n};\nfunction getDiffItem(key, value, previousValue) {\n  return {\n    path: key,\n    value: value,\n    previousValue: previousValue\n  };\n}\nfunction compare(resultPaths, item1, item2, key, fullPropName, notDeepCopyArrays) {\n  if (propsToIgnore[key]) {\n    return;\n  }\n  var type1 = type(item1);\n  var type2 = type(item2);\n  if (item1 === item2) {\n    return;\n  }\n  if (type1 !== type2) {\n    resultPaths.push(getDiffItem(key, item2, item1));\n  } else if (\"object\" === type1) {\n    if (!isPlainObject(item2)) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else {\n      var diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\n      resultPaths.push(...diffPaths.map(item => _extends({}, item, {\n        path: \"\".concat(key, \".\").concat(item.path)\n      })));\n    }\n  } else if (\"array\" === type1) {\n    var notDeepCopy = notDeepCopyArrays.some(prop => fullPropName.includes(prop));\n    if (notDeepCopy && item1 !== item2) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else if (item1.length !== item2.length) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else {\n      var _diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\n      [].push.apply(resultPaths, _diffPaths.map(item => _extends({}, item, {\n        path: \"\".concat(key).concat(item.path)\n      })));\n    }\n  } else {\n    resultPaths.push(getDiffItem(key, item2, item1));\n  }\n}\nvar objectDiffsFiltered = propsEnumerator => (oldProps, props, fullPropName, notDeepCopyArrays) => {\n  var resultPaths = [];\n  var processItem = !Array.isArray(oldProps) ? propName => {\n    compare(resultPaths, oldProps[propName], props[propName], propName, \"\".concat(fullPropName, \".\").concat(propName), notDeepCopyArrays);\n  } : propName => {\n    compare(resultPaths, oldProps[propName], props[propName], \"[\".concat(propName, \"]\"), \"\".concat(fullPropName, \".\").concat(propName), notDeepCopyArrays);\n  };\n  propsEnumerator(oldProps).forEach(processItem);\n  Object.keys(props).filter(propName => !Object.prototype.hasOwnProperty.call(oldProps, propName) && oldProps[propName] !== props[propName]).forEach(propName => {\n    resultPaths.push({\n      path: propName,\n      value: props[propName],\n      previousValue: oldProps[propName]\n    });\n  });\n  return resultPaths;\n};\nvar objectDiffs = objectDiffsFiltered(oldProps => Object.keys(oldProps));\nvar reactProps = {\n  key: true,\n  ref: true,\n  children: true,\n  style: true\n};\nvar objectDiffsWithoutReactProps = objectDiffsFiltered(prop => Object.keys(prop).filter(p => !reactProps[p]));\nexport function getUpdatedOptions(oldProps, props) {\n  var notDeepCopyArrays = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : defaultNotDeepCopyArrays;\n  return objectDiffsWithoutReactProps(oldProps, props, \"\", notDeepCopyArrays);\n}","map":{"version":3,"names":["_extends","isPlainObject","type","defaultNotDeepCopyArrays","propsToIgnore","integrationOptions","getDiffItem","key","value","previousValue","path","compare","resultPaths","item1","item2","fullPropName","notDeepCopyArrays","type1","type2","push","diffPaths","objectDiffs","map","item","concat","notDeepCopy","some","prop","includes","length","_diffPaths","apply","objectDiffsFiltered","propsEnumerator","oldProps","props","processItem","Array","isArray","propName","forEach","Object","keys","filter","prototype","hasOwnProperty","call","reactProps","ref","children","style","objectDiffsWithoutReactProps","p","getUpdatedOptions","arguments"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/renovation/ui/common/utils/get_updated_options.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/common/utils/get_updated_options.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    isPlainObject,\r\n    type\r\n} from \"../../../../core/utils/type\";\r\nvar defaultNotDeepCopyArrays = [\"dataSource\", \"selectedRowKeys\"];\r\nvar propsToIgnore = {\r\n    integrationOptions: true\r\n};\r\n\r\nfunction getDiffItem(key, value, previousValue) {\r\n    return {\r\n        path: key,\r\n        value: value,\r\n        previousValue: previousValue\r\n    }\r\n}\r\n\r\nfunction compare(resultPaths, item1, item2, key, fullPropName, notDeepCopyArrays) {\r\n    if (propsToIgnore[key]) {\r\n        return\r\n    }\r\n    var type1 = type(item1);\r\n    var type2 = type(item2);\r\n    if (item1 === item2) {\r\n        return\r\n    }\r\n    if (type1 !== type2) {\r\n        resultPaths.push(getDiffItem(key, item2, item1))\r\n    } else if (\"object\" === type1) {\r\n        if (!isPlainObject(item2)) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else {\r\n            var diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\r\n            resultPaths.push(...diffPaths.map(item => _extends({}, item, {\r\n                path: \"\".concat(key, \".\").concat(item.path)\r\n            })))\r\n        }\r\n    } else if (\"array\" === type1) {\r\n        var notDeepCopy = notDeepCopyArrays.some(prop => fullPropName.includes(prop));\r\n        if (notDeepCopy && item1 !== item2) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else if (item1.length !== item2.length) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else {\r\n            var _diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\r\n            [].push.apply(resultPaths, _diffPaths.map(item => _extends({}, item, {\r\n                path: \"\".concat(key).concat(item.path)\r\n            })))\r\n        }\r\n    } else {\r\n        resultPaths.push(getDiffItem(key, item2, item1))\r\n    }\r\n}\r\nvar objectDiffsFiltered = propsEnumerator => (oldProps, props, fullPropName, notDeepCopyArrays) => {\r\n    var resultPaths = [];\r\n    var processItem = !Array.isArray(oldProps) ? propName => {\r\n        compare(resultPaths, oldProps[propName], props[propName], propName, \"\".concat(fullPropName, \".\").concat(propName), notDeepCopyArrays)\r\n    } : propName => {\r\n        compare(resultPaths, oldProps[propName], props[propName], \"[\".concat(propName, \"]\"), \"\".concat(fullPropName, \".\").concat(propName), notDeepCopyArrays)\r\n    };\r\n    propsEnumerator(oldProps).forEach(processItem);\r\n    Object.keys(props).filter(propName => !Object.prototype.hasOwnProperty.call(oldProps, propName) && oldProps[propName] !== props[propName]).forEach(propName => {\r\n        resultPaths.push({\r\n            path: propName,\r\n            value: props[propName],\r\n            previousValue: oldProps[propName]\r\n        })\r\n    });\r\n    return resultPaths\r\n};\r\nvar objectDiffs = objectDiffsFiltered(oldProps => Object.keys(oldProps));\r\nvar reactProps = {\r\n    key: true,\r\n    ref: true,\r\n    children: true,\r\n    style: true\r\n};\r\nvar objectDiffsWithoutReactProps = objectDiffsFiltered(prop => Object.keys(prop).filter(p => !reactProps[p]));\r\nexport function getUpdatedOptions(oldProps, props) {\r\n    var notDeepCopyArrays = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : defaultNotDeepCopyArrays;\r\n    return objectDiffsWithoutReactProps(oldProps, props, \"\", notDeepCopyArrays)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}