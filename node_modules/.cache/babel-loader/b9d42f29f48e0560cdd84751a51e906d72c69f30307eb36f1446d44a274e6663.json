{"ast":null,"code":"/**\r\n * DevExtreme (esm/animation/position.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth, getOuterHeight, getWidth, getHeight } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport { splitPair, pairToObject } from \"../core/utils/common\";\nimport { each } from \"../core/utils/iterator\";\nimport { getWindow } from \"../core/utils/window\";\nvar window = getWindow();\nimport domAdapter from \"../core/dom_adapter\";\nimport { isWindow, isDefined } from \"../core/utils/type\";\nimport { extend } from \"../core/utils/extend\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport browser from \"../core/utils/browser\";\nimport { resetPosition, move } from \"./translator\";\nimport { touch } from \"../core/utils/support\";\nimport devices from \"../core/devices\";\nvar horzRe = /left|right/;\nvar vertRe = /top|bottom/;\nvar collisionRe = /fit|flip|none/;\nvar scaleRe = /scale\\(.+?\\)/;\nvar IS_SAFARI = browser.safari;\nvar normalizeAlign = function (raw) {\n  var result = {\n    h: \"center\",\n    v: \"center\"\n  };\n  var pair = splitPair(raw);\n  if (pair) {\n    each(pair, function () {\n      var w = String(this).toLowerCase();\n      if (horzRe.test(w)) {\n        result.h = w;\n      } else if (vertRe.test(w)) {\n        result.v = w;\n      }\n    });\n  }\n  return result;\n};\nvar normalizeOffset = function (raw) {\n  return pairToObject(raw);\n};\nvar normalizeCollision = function (raw) {\n  var pair = splitPair(raw);\n  var h = String(pair && pair[0]).toLowerCase();\n  var v = String(pair && pair[1]).toLowerCase();\n  if (!collisionRe.test(h)) {\n    h = \"none\";\n  }\n  if (!collisionRe.test(v)) {\n    v = h;\n  }\n  return {\n    h: h,\n    v: v\n  };\n};\nvar getAlignFactor = function (align) {\n  switch (align) {\n    case \"center\":\n      return .5;\n    case \"right\":\n    case \"bottom\":\n      return 1;\n    default:\n      return 0;\n  }\n};\nvar inverseAlign = function (align) {\n  switch (align) {\n    case \"left\":\n      return \"right\";\n    case \"right\":\n      return \"left\";\n    case \"top\":\n      return \"bottom\";\n    case \"bottom\":\n      return \"top\";\n    default:\n      return align;\n  }\n};\nvar calculateOversize = function (data, bounds) {\n  var oversize = 0;\n  if (data.myLocation < bounds.min) {\n    oversize += bounds.min - data.myLocation;\n  }\n  if (data.myLocation > bounds.max) {\n    oversize += data.myLocation - bounds.max;\n  }\n  return oversize;\n};\nvar collisionSide = function (direction, data, bounds) {\n  if (data.myLocation < bounds.min) {\n    return \"h\" === direction ? \"left\" : \"top\";\n  }\n  if (data.myLocation > bounds.max) {\n    return \"h\" === direction ? \"right\" : \"bottom\";\n  }\n  return \"none\";\n};\nvar initMyLocation = function (data) {\n  data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset;\n};\nvar collisionResolvers = {\n  fit: function (data, bounds) {\n    var result = false;\n    if (data.myLocation > bounds.max) {\n      data.myLocation = bounds.max;\n      result = true;\n    }\n    if (data.myLocation < bounds.min) {\n      data.myLocation = bounds.min;\n      result = true;\n    }\n    data.fit = result;\n  },\n  flip: function (data, bounds) {\n    data.flip = false;\n    if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\n      return;\n    }\n    if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\n      var inverseData = extend({}, data, {\n        myAlign: inverseAlign(data.myAlign),\n        atAlign: inverseAlign(data.atAlign),\n        offset: -data.offset\n      });\n      initMyLocation(inverseData);\n      inverseData.oversize = calculateOversize(inverseData, bounds);\n      if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\n        data.myLocation = inverseData.myLocation;\n        data.oversize = inverseData.oversize;\n        data.flip = true;\n      }\n    }\n  },\n  flipfit: function (data, bounds) {\n    this.flip(data, bounds);\n    this.fit(data, bounds);\n  },\n  none: function (data) {\n    data.oversize = 0;\n  }\n};\nvar scrollbarWidth;\nvar calculateScrollbarWidth = function () {\n  var $scrollDiv = $(\"<div>\").css({\n    width: 100,\n    height: 100,\n    overflow: \"scroll\",\n    position: \"absolute\",\n    top: -9999\n  }).appendTo($(\"body\"));\n  var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\n  $scrollDiv.remove();\n  scrollbarWidth = result;\n};\nvar defaultPositionResult = {\n  h: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  },\n  v: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  }\n};\nvar calculatePosition = function (what, options) {\n  var $what = $(what);\n  var currentOffset = $what.offset();\n  var result = extend(true, {}, defaultPositionResult, {\n    h: {\n      location: currentOffset.left\n    },\n    v: {\n      location: currentOffset.top\n    }\n  });\n  if (!options) {\n    return result;\n  }\n  var my = normalizeAlign(options.my);\n  var at = normalizeAlign(options.at);\n  var of = $(options.of).length && options.of || window;\n  var offset = normalizeOffset(options.offset);\n  var collision = normalizeCollision(options.collision);\n  var boundary = options.boundary;\n  var boundaryOffset = normalizeOffset(options.boundaryOffset);\n  var h = {\n    mySize: getOuterWidth($what),\n    myAlign: my.h,\n    atAlign: at.h,\n    offset: offset.h,\n    collision: collision.h,\n    boundaryOffset: boundaryOffset.h\n  };\n  var v = {\n    mySize: getOuterHeight($what),\n    myAlign: my.v,\n    atAlign: at.v,\n    offset: offset.v,\n    collision: collision.v,\n    boundaryOffset: boundaryOffset.v\n  };\n  if (of.preventDefault) {\n    h.atLocation = of.pageX;\n    v.atLocation = of.pageY;\n    h.atSize = 0;\n    v.atSize = 0;\n  } else {\n    of = $(of);\n    if (isWindow(of[0])) {\n      h.atLocation = of.scrollLeft();\n      v.atLocation = of.scrollTop();\n      if (\"phone\" === devices.real().deviceType && of[0].visualViewport) {\n        h.atLocation = Math.max(h.atLocation, of[0].visualViewport.offsetLeft);\n        v.atLocation = Math.max(v.atLocation, of[0].visualViewport.offsetTop);\n        h.atSize = of[0].visualViewport.width;\n        v.atSize = of[0].visualViewport.height;\n      } else {\n        h.atSize = of[0].innerWidth > of[0].outerWidth ? of[0].innerWidth : getWidth(of);\n        v.atSize = of[0].innerHeight > of[0].outerHeight || IS_SAFARI ? of[0].innerHeight : getHeight(of);\n      }\n    } else if (9 === of[0].nodeType) {\n      h.atLocation = 0;\n      v.atLocation = 0;\n      h.atSize = getWidth(of);\n      v.atSize = getHeight(of);\n    } else {\n      var ofRect = getBoundingRect(of.get(0));\n      var o = getOffsetWithoutScale(of);\n      h.atLocation = o.left;\n      v.atLocation = o.top;\n      h.atSize = Math.max(ofRect.width, getOuterWidth(of));\n      v.atSize = Math.max(ofRect.height, getOuterHeight(of));\n    }\n  }\n  initMyLocation(h);\n  initMyLocation(v);\n  var bounds = function () {\n    var win = $(window);\n    var windowWidth = getWidth(win);\n    var windowHeight = getHeight(win);\n    var left = win.scrollLeft();\n    var top = win.scrollTop();\n    var documentElement = domAdapter.getDocumentElement();\n    var hZoomLevel = touch ? documentElement.clientWidth / windowWidth : 1;\n    var vZoomLevel = touch ? documentElement.clientHeight / windowHeight : 1;\n    if (void 0 === scrollbarWidth) {\n      calculateScrollbarWidth();\n    }\n    var boundaryWidth = windowWidth;\n    var boundaryHeight = windowHeight;\n    if (boundary && !isWindow(boundary)) {\n      var $boundary = $(boundary);\n      var boundaryPosition = $boundary.offset();\n      left = boundaryPosition.left;\n      top = boundaryPosition.top;\n      boundaryWidth = getWidth($boundary);\n      boundaryHeight = getHeight($boundary);\n    }\n    return {\n      h: {\n        min: left + h.boundaryOffset,\n        max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\n      },\n      v: {\n        min: top + v.boundaryOffset,\n        max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\n      }\n    };\n  }();\n  h.oversize = calculateOversize(h, bounds.h);\n  v.oversize = calculateOversize(v, bounds.v);\n  h.collisionSide = collisionSide(\"h\", h, bounds.h);\n  v.collisionSide = collisionSide(\"v\", v, bounds.v);\n  if (collisionResolvers[h.collision]) {\n    collisionResolvers[h.collision](h, bounds.h);\n  }\n  if (collisionResolvers[v.collision]) {\n    collisionResolvers[v.collision](v, bounds.v);\n  }\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n  extend(true, result, {\n    h: {\n      location: preciser(h.myLocation),\n      oversize: preciser(h.oversize),\n      fit: h.fit,\n      flip: h.flip,\n      collisionSide: h.collisionSide\n    },\n    v: {\n      location: preciser(v.myLocation),\n      oversize: preciser(v.oversize),\n      fit: v.fit,\n      flip: v.flip,\n      collisionSide: v.collisionSide\n    },\n    precise: options.precise\n  });\n  return result;\n};\nvar setScaleProperty = function (element, scale, transformProp, styleAttr, isEmpty) {\n  var stylePropIsValid = isDefined(element.style) && !domAdapter.isNode(element.style);\n  if (stylePropIsValid) {\n    element.style.transform = isEmpty ? transformProp.replace(scale, \"\") : transformProp;\n  } else {\n    element.setAttribute(\"style\", isEmpty ? styleAttr.replace(scale, \"\") : styleAttr);\n  }\n};\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\n  var _currentElement$getAt, _currentElement$style, _style$match;\n  var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\n  var currentElement = $currentElement.get(0);\n  if (!currentElement) {\n    return $startElement.offset();\n  }\n  var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\n  var transform = null === (_currentElement$style = currentElement.style) || void 0 === _currentElement$style ? void 0 : _currentElement$style.transform;\n  var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\n  var offset;\n  if (scale) {\n    setScaleProperty(currentElement, scale, transform, style, true);\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n    setScaleProperty(currentElement, scale, transform, style, false);\n  } else {\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n  }\n  return offset;\n};\nvar position = function (what, options) {\n  var $what = $(what);\n  if (!options) {\n    return $what.offset();\n  }\n  resetPosition($what, true);\n  var offset = getOffsetWithoutScale($what);\n  var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n  move($what, {\n    left: targetPosition.h.location - preciser(offset.left),\n    top: targetPosition.v.location - preciser(offset.top)\n  });\n  return targetPosition;\n};\nvar offset = function (element) {\n  element = $(element).get(0);\n  if (isWindow(element)) {\n    return null;\n  } else if (element && \"pageY\" in element && \"pageX\" in element) {\n    return {\n      top: element.pageY,\n      left: element.pageX\n    };\n  }\n  return $(element).offset();\n};\nif (!position.inverseAlign) {\n  position.inverseAlign = inverseAlign;\n}\nif (!position.normalizeAlign) {\n  position.normalizeAlign = normalizeAlign;\n}\nexport default {\n  calculateScrollbarWidth: calculateScrollbarWidth,\n  calculate: calculatePosition,\n  setup: position,\n  offset: offset\n};","map":{"version":3,"names":["getOuterWidth","getOuterHeight","getWidth","getHeight","$","splitPair","pairToObject","each","getWindow","window","domAdapter","isWindow","isDefined","extend","getBoundingRect","browser","resetPosition","move","touch","devices","horzRe","vertRe","collisionRe","scaleRe","IS_SAFARI","safari","normalizeAlign","raw","result","h","v","pair","w","String","toLowerCase","test","normalizeOffset","normalizeCollision","getAlignFactor","align","inverseAlign","calculateOversize","data","bounds","oversize","myLocation","min","max","collisionSide","direction","initMyLocation","atLocation","atAlign","atSize","myAlign","mySize","offset","collisionResolvers","fit","flip","inverseData","flipfit","none","scrollbarWidth","calculateScrollbarWidth","$scrollDiv","css","width","height","overflow","position","top","appendTo","get","offsetWidth","clientWidth","remove","defaultPositionResult","location","calculatePosition","what","options","$what","currentOffset","left","my","at","of","length","collision","boundary","boundaryOffset","preventDefault","pageX","pageY","scrollLeft","scrollTop","real","deviceType","visualViewport","Math","offsetLeft","offsetTop","innerWidth","outerWidth","innerHeight","outerHeight","nodeType","ofRect","o","getOffsetWithoutScale","win","windowWidth","windowHeight","documentElement","getDocumentElement","hZoomLevel","vZoomLevel","clientHeight","boundaryWidth","boundaryHeight","$boundary","boundaryPosition","preciser","number","precise","round","setScaleProperty","element","scale","transformProp","styleAttr","isEmpty","stylePropIsValid","style","isNode","transform","replace","setAttribute","$startElement","_currentElement$getAt","_currentElement$style","_style$match","$currentElement","arguments","currentElement","getAttribute","call","match","parent","targetPosition","calculate","setup"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/animation/position.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/animation/position.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight,\r\n    getWidth,\r\n    getHeight\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    splitPair,\r\n    pairToObject\r\n} from \"../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nvar window = getWindow();\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport {\r\n    isWindow,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport browser from \"../core/utils/browser\";\r\nimport {\r\n    resetPosition,\r\n    move\r\n} from \"./translator\";\r\nimport {\r\n    touch\r\n} from \"../core/utils/support\";\r\nimport devices from \"../core/devices\";\r\nvar horzRe = /left|right/;\r\nvar vertRe = /top|bottom/;\r\nvar collisionRe = /fit|flip|none/;\r\nvar scaleRe = /scale\\(.+?\\)/;\r\nvar IS_SAFARI = browser.safari;\r\nvar normalizeAlign = function(raw) {\r\n    var result = {\r\n        h: \"center\",\r\n        v: \"center\"\r\n    };\r\n    var pair = splitPair(raw);\r\n    if (pair) {\r\n        each(pair, (function() {\r\n            var w = String(this).toLowerCase();\r\n            if (horzRe.test(w)) {\r\n                result.h = w\r\n            } else if (vertRe.test(w)) {\r\n                result.v = w\r\n            }\r\n        }))\r\n    }\r\n    return result\r\n};\r\nvar normalizeOffset = function(raw) {\r\n    return pairToObject(raw)\r\n};\r\nvar normalizeCollision = function(raw) {\r\n    var pair = splitPair(raw);\r\n    var h = String(pair && pair[0]).toLowerCase();\r\n    var v = String(pair && pair[1]).toLowerCase();\r\n    if (!collisionRe.test(h)) {\r\n        h = \"none\"\r\n    }\r\n    if (!collisionRe.test(v)) {\r\n        v = h\r\n    }\r\n    return {\r\n        h: h,\r\n        v: v\r\n    }\r\n};\r\nvar getAlignFactor = function(align) {\r\n    switch (align) {\r\n        case \"center\":\r\n            return .5;\r\n        case \"right\":\r\n        case \"bottom\":\r\n            return 1;\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar inverseAlign = function(align) {\r\n    switch (align) {\r\n        case \"left\":\r\n            return \"right\";\r\n        case \"right\":\r\n            return \"left\";\r\n        case \"top\":\r\n            return \"bottom\";\r\n        case \"bottom\":\r\n            return \"top\";\r\n        default:\r\n            return align\r\n    }\r\n};\r\nvar calculateOversize = function(data, bounds) {\r\n    var oversize = 0;\r\n    if (data.myLocation < bounds.min) {\r\n        oversize += bounds.min - data.myLocation\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        oversize += data.myLocation - bounds.max\r\n    }\r\n    return oversize\r\n};\r\nvar collisionSide = function(direction, data, bounds) {\r\n    if (data.myLocation < bounds.min) {\r\n        return \"h\" === direction ? \"left\" : \"top\"\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        return \"h\" === direction ? \"right\" : \"bottom\"\r\n    }\r\n    return \"none\"\r\n};\r\nvar initMyLocation = function(data) {\r\n    data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset\r\n};\r\nvar collisionResolvers = {\r\n    fit: function(data, bounds) {\r\n        var result = false;\r\n        if (data.myLocation > bounds.max) {\r\n            data.myLocation = bounds.max;\r\n            result = true\r\n        }\r\n        if (data.myLocation < bounds.min) {\r\n            data.myLocation = bounds.min;\r\n            result = true\r\n        }\r\n        data.fit = result\r\n    },\r\n    flip: function(data, bounds) {\r\n        data.flip = false;\r\n        if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\r\n            return\r\n        }\r\n        if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\r\n            var inverseData = extend({}, data, {\r\n                myAlign: inverseAlign(data.myAlign),\r\n                atAlign: inverseAlign(data.atAlign),\r\n                offset: -data.offset\r\n            });\r\n            initMyLocation(inverseData);\r\n            inverseData.oversize = calculateOversize(inverseData, bounds);\r\n            if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\r\n                data.myLocation = inverseData.myLocation;\r\n                data.oversize = inverseData.oversize;\r\n                data.flip = true\r\n            }\r\n        }\r\n    },\r\n    flipfit: function(data, bounds) {\r\n        this.flip(data, bounds);\r\n        this.fit(data, bounds)\r\n    },\r\n    none: function(data) {\r\n        data.oversize = 0\r\n    }\r\n};\r\nvar scrollbarWidth;\r\nvar calculateScrollbarWidth = function() {\r\n    var $scrollDiv = $(\"<div>\").css({\r\n        width: 100,\r\n        height: 100,\r\n        overflow: \"scroll\",\r\n        position: \"absolute\",\r\n        top: -9999\r\n    }).appendTo($(\"body\"));\r\n    var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\r\n    $scrollDiv.remove();\r\n    scrollbarWidth = result\r\n};\r\nvar defaultPositionResult = {\r\n    h: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    },\r\n    v: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    }\r\n};\r\nvar calculatePosition = function(what, options) {\r\n    var $what = $(what);\r\n    var currentOffset = $what.offset();\r\n    var result = extend(true, {}, defaultPositionResult, {\r\n        h: {\r\n            location: currentOffset.left\r\n        },\r\n        v: {\r\n            location: currentOffset.top\r\n        }\r\n    });\r\n    if (!options) {\r\n        return result\r\n    }\r\n    var my = normalizeAlign(options.my);\r\n    var at = normalizeAlign(options.at);\r\n    var of = $(options.of).length && options.of || window;\r\n    var offset = normalizeOffset(options.offset);\r\n    var collision = normalizeCollision(options.collision);\r\n    var boundary = options.boundary;\r\n    var boundaryOffset = normalizeOffset(options.boundaryOffset);\r\n    var h = {\r\n        mySize: getOuterWidth($what),\r\n        myAlign: my.h,\r\n        atAlign: at.h,\r\n        offset: offset.h,\r\n        collision: collision.h,\r\n        boundaryOffset: boundaryOffset.h\r\n    };\r\n    var v = {\r\n        mySize: getOuterHeight($what),\r\n        myAlign: my.v,\r\n        atAlign: at.v,\r\n        offset: offset.v,\r\n        collision: collision.v,\r\n        boundaryOffset: boundaryOffset.v\r\n    };\r\n    if (of.preventDefault) {\r\n        h.atLocation = of.pageX;\r\n        v.atLocation = of.pageY;\r\n        h.atSize = 0;\r\n        v.atSize = 0\r\n    } else {\r\n        of = $(of);\r\n        if (isWindow(of [0])) {\r\n            h.atLocation = of.scrollLeft();\r\n            v.atLocation = of.scrollTop();\r\n            if (\"phone\" === devices.real().deviceType && of [0].visualViewport) {\r\n                h.atLocation = Math.max(h.atLocation, of [0].visualViewport.offsetLeft);\r\n                v.atLocation = Math.max(v.atLocation, of [0].visualViewport.offsetTop);\r\n                h.atSize = of [0].visualViewport.width;\r\n                v.atSize = of [0].visualViewport.height\r\n            } else {\r\n                h.atSize = of [0].innerWidth > of [0].outerWidth ? of [0].innerWidth : getWidth(of);\r\n                v.atSize = of [0].innerHeight > of [0].outerHeight || IS_SAFARI ? of [0].innerHeight : getHeight(of)\r\n            }\r\n        } else if (9 === of [0].nodeType) {\r\n            h.atLocation = 0;\r\n            v.atLocation = 0;\r\n            h.atSize = getWidth(of);\r\n            v.atSize = getHeight(of)\r\n        } else {\r\n            var ofRect = getBoundingRect(of.get(0));\r\n            var o = getOffsetWithoutScale(of);\r\n            h.atLocation = o.left;\r\n            v.atLocation = o.top;\r\n            h.atSize = Math.max(ofRect.width, getOuterWidth(of));\r\n            v.atSize = Math.max(ofRect.height, getOuterHeight(of))\r\n        }\r\n    }\r\n    initMyLocation(h);\r\n    initMyLocation(v);\r\n    var bounds = function() {\r\n        var win = $(window);\r\n        var windowWidth = getWidth(win);\r\n        var windowHeight = getHeight(win);\r\n        var left = win.scrollLeft();\r\n        var top = win.scrollTop();\r\n        var documentElement = domAdapter.getDocumentElement();\r\n        var hZoomLevel = touch ? documentElement.clientWidth / windowWidth : 1;\r\n        var vZoomLevel = touch ? documentElement.clientHeight / windowHeight : 1;\r\n        if (void 0 === scrollbarWidth) {\r\n            calculateScrollbarWidth()\r\n        }\r\n        var boundaryWidth = windowWidth;\r\n        var boundaryHeight = windowHeight;\r\n        if (boundary && !isWindow(boundary)) {\r\n            var $boundary = $(boundary);\r\n            var boundaryPosition = $boundary.offset();\r\n            left = boundaryPosition.left;\r\n            top = boundaryPosition.top;\r\n            boundaryWidth = getWidth($boundary);\r\n            boundaryHeight = getHeight($boundary)\r\n        }\r\n        return {\r\n            h: {\r\n                min: left + h.boundaryOffset,\r\n                max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\r\n            },\r\n            v: {\r\n                min: top + v.boundaryOffset,\r\n                max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\r\n            }\r\n        }\r\n    }();\r\n    h.oversize = calculateOversize(h, bounds.h);\r\n    v.oversize = calculateOversize(v, bounds.v);\r\n    h.collisionSide = collisionSide(\"h\", h, bounds.h);\r\n    v.collisionSide = collisionSide(\"v\", v, bounds.v);\r\n    if (collisionResolvers[h.collision]) {\r\n        collisionResolvers[h.collision](h, bounds.h)\r\n    }\r\n    if (collisionResolvers[v.collision]) {\r\n        collisionResolvers[v.collision](v, bounds.v)\r\n    }\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    extend(true, result, {\r\n        h: {\r\n            location: preciser(h.myLocation),\r\n            oversize: preciser(h.oversize),\r\n            fit: h.fit,\r\n            flip: h.flip,\r\n            collisionSide: h.collisionSide\r\n        },\r\n        v: {\r\n            location: preciser(v.myLocation),\r\n            oversize: preciser(v.oversize),\r\n            fit: v.fit,\r\n            flip: v.flip,\r\n            collisionSide: v.collisionSide\r\n        },\r\n        precise: options.precise\r\n    });\r\n    return result\r\n};\r\nvar setScaleProperty = function(element, scale, transformProp, styleAttr, isEmpty) {\r\n    var stylePropIsValid = isDefined(element.style) && !domAdapter.isNode(element.style);\r\n    if (stylePropIsValid) {\r\n        element.style.transform = isEmpty ? transformProp.replace(scale, \"\") : transformProp\r\n    } else {\r\n        element.setAttribute(\"style\", isEmpty ? styleAttr.replace(scale, \"\") : styleAttr)\r\n    }\r\n};\r\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\r\n    var _currentElement$getAt, _currentElement$style, _style$match;\r\n    var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\r\n    var currentElement = $currentElement.get(0);\r\n    if (!currentElement) {\r\n        return $startElement.offset()\r\n    }\r\n    var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\r\n    var transform = null === (_currentElement$style = currentElement.style) || void 0 === _currentElement$style ? void 0 : _currentElement$style.transform;\r\n    var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\r\n    var offset;\r\n    if (scale) {\r\n        setScaleProperty(currentElement, scale, transform, style, true);\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent());\r\n        setScaleProperty(currentElement, scale, transform, style, false)\r\n    } else {\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent())\r\n    }\r\n    return offset\r\n};\r\nvar position = function(what, options) {\r\n    var $what = $(what);\r\n    if (!options) {\r\n        return $what.offset()\r\n    }\r\n    resetPosition($what, true);\r\n    var offset = getOffsetWithoutScale($what);\r\n    var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    move($what, {\r\n        left: targetPosition.h.location - preciser(offset.left),\r\n        top: targetPosition.v.location - preciser(offset.top)\r\n    });\r\n    return targetPosition\r\n};\r\nvar offset = function(element) {\r\n    element = $(element).get(0);\r\n    if (isWindow(element)) {\r\n        return null\r\n    } else if (element && \"pageY\" in element && \"pageX\" in element) {\r\n        return {\r\n            top: element.pageY,\r\n            left: element.pageX\r\n        }\r\n    }\r\n    return $(element).offset()\r\n};\r\nif (!position.inverseAlign) {\r\n    position.inverseAlign = inverseAlign\r\n}\r\nif (!position.normalizeAlign) {\r\n    position.normalizeAlign = normalizeAlign\r\n}\r\nexport default {\r\n    calculateScrollbarWidth: calculateScrollbarWidth,\r\n    calculate: calculatePosition,\r\n    setup: position,\r\n    offset: offset\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}