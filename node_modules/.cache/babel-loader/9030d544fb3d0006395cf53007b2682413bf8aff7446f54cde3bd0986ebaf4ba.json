{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/selection/selection.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport deferredStrategy from \"./selection.strategy.deferred\";\nimport standardStrategy from \"./selection.strategy.standard\";\nimport { extend } from \"../../core/utils/extend\";\nimport { noop } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nexport default Class.inherit({\n  ctor: function (options) {\n    this.options = extend(this._getDefaultOptions(), options, {\n      selectedItemKeys: options.selectedKeys || []\n    });\n    this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\n    this._focusedItemIndex = -1;\n    if (!this.options.equalByReference) {\n      this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n    }\n  },\n  _getDefaultOptions: function () {\n    return {\n      allowNullValue: false,\n      deferred: false,\n      equalByReference: false,\n      mode: \"multiple\",\n      selectedItems: [],\n      selectionFilter: [],\n      maxFilterLengthInRequest: 0,\n      onSelectionChanged: noop,\n      key: noop,\n      keyOf: function (item) {\n        return item;\n      },\n      load: function () {\n        return new Deferred().resolve([]);\n      },\n      totalCount: function () {\n        return -1;\n      },\n      isSelectableItem: function () {\n        return true;\n      },\n      isItemSelected: function () {\n        return false;\n      },\n      getItemData: function (item) {\n        return item;\n      },\n      dataFields: noop,\n      filter: noop\n    };\n  },\n  validate: function () {\n    this._selectionStrategy.validate();\n  },\n  getSelectedItemKeys: function () {\n    return this._selectionStrategy.getSelectedItemKeys();\n  },\n  getSelectedItems: function () {\n    return this._selectionStrategy.getSelectedItems();\n  },\n  selectionFilter: function (value) {\n    if (void 0 === value) {\n      return this.options.selectionFilter;\n    }\n    var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\n    this.options.selectionFilter = value;\n    filterIsChanged && this.onSelectionChanged();\n  },\n  setSelection: function (keys, updatedKeys) {\n    return this.selectedItemKeys(keys, false, false, false, updatedKeys);\n  },\n  select: function (keys) {\n    return this.selectedItemKeys(keys, true);\n  },\n  deselect: function (keys) {\n    return this.selectedItemKeys(keys, true, true);\n  },\n  selectedItemKeys: function (keys, preserve, isDeselect, isSelectAll, updatedKeys) {\n    var _keys;\n    keys = null !== (_keys = keys) && void 0 !== _keys ? _keys : [];\n    keys = Array.isArray(keys) ? keys : [keys];\n    this.validate();\n    return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys);\n  },\n  clearSelection: function () {\n    return this.selectedItemKeys([]);\n  },\n  _addSelectedItem: function (itemData, key) {\n    this._selectionStrategy.addSelectedItem(key, itemData);\n  },\n  _removeSelectedItem: function (key) {\n    this._selectionStrategy.removeSelectedItem(key);\n  },\n  _setSelectedItems: function (keys, items) {\n    this._selectionStrategy.setSelectedItems(keys, items);\n  },\n  onSelectionChanged: function () {\n    this._selectionStrategy.onSelectionChanged();\n  },\n  changeItemSelection: function (itemIndex, keys, setFocusOnly) {\n    var _this$options$allowLo, _this$options;\n    var isSelectedItemsChanged;\n    var items = this.options.plainItems();\n    var item = items[itemIndex];\n    var deferred;\n    var allowLoadByRange = null === (_this$options$allowLo = (_this$options = this.options).allowLoadByRange) || void 0 === _this$options$allowLo ? void 0 : _this$options$allowLo.call(_this$options);\n    var indexOffset;\n    var focusedItemNotInLoadedRange = false;\n    var shiftFocusedItemNotInLoadedRange = false;\n    var itemIsNotInLoadedRange = index => index >= 0 && !items.filter(it => it.loadIndex === index).length;\n    if (allowLoadByRange) {\n      indexOffset = item.loadIndex - itemIndex;\n      itemIndex = item.loadIndex;\n      focusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._focusedItemIndex);\n      if (isDefined(this._shiftFocusedItemIndex)) {\n        shiftFocusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._shiftFocusedItemIndex);\n      }\n    }\n    if (!this.isSelectable() || !this.isDataItem(item)) {\n      return false;\n    }\n    var itemData = this.options.getItemData(item);\n    var itemKey = this.options.keyOf(itemData);\n    keys = keys || {};\n    if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\n      if (focusedItemNotInLoadedRange || shiftFocusedItemNotInLoadedRange) {\n        isSelectedItemsChanged = itemIndex !== this._shiftFocusedItemIndex || this._focusedItemIndex !== this._shiftFocusedItemIndex;\n        if (isSelectedItemsChanged) {\n          deferred = this.changeItemSelectionWhenShiftKeyInVirtualPaging(itemIndex);\n        }\n      } else {\n        isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset);\n      }\n    } else if (keys.control) {\n      this._resetItemSelectionWhenShiftKeyPressed();\n      if (!setFocusOnly) {\n        var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\n        if (\"single\" === this.options.mode) {\n          this.clearSelectedItems();\n        }\n        if (isSelected) {\n          this._removeSelectedItem(itemKey);\n        } else {\n          this._addSelectedItem(itemData, itemKey);\n        }\n      }\n      isSelectedItemsChanged = true;\n    } else {\n      this._resetItemSelectionWhenShiftKeyPressed();\n      var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\n      if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\n        this._setSelectedItems([itemKey], [itemData]);\n        isSelectedItemsChanged = true;\n      }\n    }\n    if (isSelectedItemsChanged) {\n      when(deferred).done(() => {\n        this._focusedItemIndex = itemIndex;\n        !setFocusOnly && this.onSelectionChanged();\n      });\n      return true;\n    }\n  },\n  isDataItem: function (item) {\n    return this.options.isSelectableItem(item);\n  },\n  isSelectable: function () {\n    return \"single\" === this.options.mode || \"multiple\" === this.options.mode;\n  },\n  isItemDataSelected: function (data) {\n    return this._selectionStrategy.isItemDataSelected(data, {\n      checkPending: true\n    });\n  },\n  isItemSelected: function (arg, options) {\n    return this._selectionStrategy.isItemKeySelected(arg, options);\n  },\n  _resetItemSelectionWhenShiftKeyPressed: function () {\n    delete this._shiftFocusedItemIndex;\n  },\n  _resetFocusedItemIndex: function () {\n    this._focusedItemIndex = -1;\n  },\n  changeItemSelectionWhenShiftKeyInVirtualPaging: function (loadIndex) {\n    var loadOptions = this.options.getLoadOptions(loadIndex, this._focusedItemIndex, this._shiftFocusedItemIndex);\n    var deferred = new Deferred();\n    var indexOffset = loadOptions.skip;\n    this.options.load(loadOptions).done(items => {\n      this.changeItemSelectionWhenShiftKeyPressed(loadIndex, items, indexOffset);\n      deferred.resolve();\n    });\n    return deferred.promise();\n  },\n  changeItemSelectionWhenShiftKeyPressed: function (itemIndex, items, indexOffset) {\n    var isSelectedItemsChanged = false;\n    var itemIndexStep;\n    var indexOffsetDefined = isDefined(indexOffset);\n    var index = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\n    var keyOf = this.options.keyOf;\n    var focusedItem = items[index];\n    var focusedData = this.options.getItemData(focusedItem);\n    var focusedKey = keyOf(focusedData);\n    var isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\n    if (!isDefined(this._shiftFocusedItemIndex)) {\n      this._shiftFocusedItemIndex = this._focusedItemIndex;\n    }\n    var data;\n    var itemKey;\n    var startIndex;\n    var endIndex;\n    if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\n      itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n      startIndex = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\n      endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\n      for (index = startIndex; index !== endIndex; index += itemIndexStep) {\n        if (indexOffsetDefined || this.isDataItem(items[index])) {\n          itemKey = keyOf(this.options.getItemData(items[index]));\n          this._removeSelectedItem(itemKey);\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n    if (itemIndex !== this._shiftFocusedItemIndex) {\n      itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n      startIndex = indexOffsetDefined ? itemIndex - indexOffset : itemIndex;\n      endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\n      for (index = startIndex; index !== endIndex; index += itemIndexStep) {\n        if (indexOffsetDefined || this.isDataItem(items[index])) {\n          data = this.options.getItemData(items[index]);\n          itemKey = keyOf(data);\n          this._addSelectedItem(data, itemKey);\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n    if ((indexOffsetDefined || this.isDataItem(focusedItem)) && !isFocusedItemSelected) {\n      this._addSelectedItem(focusedData, focusedKey);\n      isSelectedItemsChanged = true;\n    }\n    return isSelectedItemsChanged;\n  },\n  clearSelectedItems: function () {\n    this._setSelectedItems([], []);\n  },\n  selectAll: function (isOnePage) {\n    this._resetFocusedItemIndex();\n    if (isOnePage) {\n      return this._onePageSelectAll(false);\n    } else {\n      return this.selectedItemKeys([], true, false, true);\n    }\n  },\n  deselectAll: function (isOnePage) {\n    this._resetFocusedItemIndex();\n    if (isOnePage) {\n      return this._onePageSelectAll(true);\n    } else {\n      return this.selectedItemKeys([], true, true, true);\n    }\n  },\n  _onePageSelectAll: function (isDeselect) {\n    var items = this._selectionStrategy.getSelectableItems(this.options.plainItems());\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      if (this.isDataItem(item)) {\n        var itemData = this.options.getItemData(item);\n        var itemKey = this.options.keyOf(itemData);\n        var isSelected = this.isItemSelected(itemKey);\n        if (!isSelected && !isDeselect) {\n          this._addSelectedItem(itemData, itemKey);\n        }\n        if (isSelected && isDeselect) {\n          this._removeSelectedItem(itemKey);\n        }\n      }\n    }\n    this.onSelectionChanged();\n    return new Deferred().resolve();\n  },\n  getSelectAllState: function (visibleOnly) {\n    return this._selectionStrategy.getSelectAllState(visibleOnly);\n  }\n});","map":{"version":3,"names":["Class","deferredStrategy","standardStrategy","extend","noop","isDefined","Deferred","when","inherit","ctor","options","_getDefaultOptions","selectedItemKeys","selectedKeys","_selectionStrategy","deferred","_focusedItemIndex","equalByReference","updateSelectedItemKeyHash","allowNullValue","mode","selectedItems","selectionFilter","maxFilterLengthInRequest","onSelectionChanged","key","keyOf","item","load","resolve","totalCount","isSelectableItem","isItemSelected","getItemData","dataFields","filter","validate","getSelectedItemKeys","getSelectedItems","value","filterIsChanged","JSON","stringify","setSelection","keys","updatedKeys","select","deselect","preserve","isDeselect","isSelectAll","_keys","Array","isArray","clearSelection","_addSelectedItem","itemData","addSelectedItem","_removeSelectedItem","removeSelectedItem","_setSelectedItems","items","setSelectedItems","changeItemSelection","itemIndex","setFocusOnly","_this$options$allowLo","_this$options","isSelectedItemsChanged","plainItems","allowLoadByRange","call","indexOffset","focusedItemNotInLoadedRange","shiftFocusedItemNotInLoadedRange","itemIsNotInLoadedRange","index","it","loadIndex","length","_shiftFocusedItemIndex","isSelectable","isDataItem","itemKey","shift","changeItemSelectionWhenShiftKeyInVirtualPaging","changeItemSelectionWhenShiftKeyPressed","control","_resetItemSelectionWhenShiftKeyPressed","isSelected","isItemDataSelected","clearSelectedItems","isKeysEqual","equalKeys","done","data","checkPending","arg","isItemKeySelected","_resetFocusedItemIndex","loadOptions","getLoadOptions","skip","promise","itemIndexStep","indexOffsetDefined","focusedItem","focusedData","focusedKey","isFocusedItemSelected","startIndex","endIndex","selectAll","isOnePage","_onePageSelectAll","deselectAll","getSelectableItems","i","getSelectAllState","visibleOnly"],"sources":["C:/Users/ninad/OneDrive/Radna površina/zavrsni/client/node_modules/devextreme/esm/ui/selection/selection.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/selection/selection.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport deferredStrategy from \"./selection.strategy.deferred\";\r\nimport standardStrategy from \"./selection.strategy.standard\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = extend(this._getDefaultOptions(), options, {\r\n            selectedItemKeys: options.selectedKeys || []\r\n        });\r\n        this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\r\n        this._focusedItemIndex = -1;\r\n        if (!this.options.equalByReference) {\r\n            this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return {\r\n            allowNullValue: false,\r\n            deferred: false,\r\n            equalByReference: false,\r\n            mode: \"multiple\",\r\n            selectedItems: [],\r\n            selectionFilter: [],\r\n            maxFilterLengthInRequest: 0,\r\n            onSelectionChanged: noop,\r\n            key: noop,\r\n            keyOf: function(item) {\r\n                return item\r\n            },\r\n            load: function() {\r\n                return (new Deferred).resolve([])\r\n            },\r\n            totalCount: function() {\r\n                return -1\r\n            },\r\n            isSelectableItem: function() {\r\n                return true\r\n            },\r\n            isItemSelected: function() {\r\n                return false\r\n            },\r\n            getItemData: function(item) {\r\n                return item\r\n            },\r\n            dataFields: noop,\r\n            filter: noop\r\n        }\r\n    },\r\n    validate: function() {\r\n        this._selectionStrategy.validate()\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this._selectionStrategy.getSelectedItemKeys()\r\n    },\r\n    getSelectedItems: function() {\r\n        return this._selectionStrategy.getSelectedItems()\r\n    },\r\n    selectionFilter: function(value) {\r\n        if (void 0 === value) {\r\n            return this.options.selectionFilter\r\n        }\r\n        var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\r\n        this.options.selectionFilter = value;\r\n        filterIsChanged && this.onSelectionChanged()\r\n    },\r\n    setSelection: function(keys, updatedKeys) {\r\n        return this.selectedItemKeys(keys, false, false, false, updatedKeys)\r\n    },\r\n    select: function(keys) {\r\n        return this.selectedItemKeys(keys, true)\r\n    },\r\n    deselect: function(keys) {\r\n        return this.selectedItemKeys(keys, true, true)\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        var _keys;\r\n        keys = null !== (_keys = keys) && void 0 !== _keys ? _keys : [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        this.validate();\r\n        return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys)\r\n    },\r\n    clearSelection: function() {\r\n        return this.selectedItemKeys([])\r\n    },\r\n    _addSelectedItem: function(itemData, key) {\r\n        this._selectionStrategy.addSelectedItem(key, itemData)\r\n    },\r\n    _removeSelectedItem: function(key) {\r\n        this._selectionStrategy.removeSelectedItem(key)\r\n    },\r\n    _setSelectedItems: function(keys, items) {\r\n        this._selectionStrategy.setSelectedItems(keys, items)\r\n    },\r\n    onSelectionChanged: function() {\r\n        this._selectionStrategy.onSelectionChanged()\r\n    },\r\n    changeItemSelection: function(itemIndex, keys, setFocusOnly) {\r\n        var _this$options$allowLo, _this$options;\r\n        var isSelectedItemsChanged;\r\n        var items = this.options.plainItems();\r\n        var item = items[itemIndex];\r\n        var deferred;\r\n        var allowLoadByRange = null === (_this$options$allowLo = (_this$options = this.options).allowLoadByRange) || void 0 === _this$options$allowLo ? void 0 : _this$options$allowLo.call(_this$options);\r\n        var indexOffset;\r\n        var focusedItemNotInLoadedRange = false;\r\n        var shiftFocusedItemNotInLoadedRange = false;\r\n        var itemIsNotInLoadedRange = index => index >= 0 && !items.filter(it => it.loadIndex === index).length;\r\n        if (allowLoadByRange) {\r\n            indexOffset = item.loadIndex - itemIndex;\r\n            itemIndex = item.loadIndex;\r\n            focusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._focusedItemIndex);\r\n            if (isDefined(this._shiftFocusedItemIndex)) {\r\n                shiftFocusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._shiftFocusedItemIndex)\r\n            }\r\n        }\r\n        if (!this.isSelectable() || !this.isDataItem(item)) {\r\n            return false\r\n        }\r\n        var itemData = this.options.getItemData(item);\r\n        var itemKey = this.options.keyOf(itemData);\r\n        keys = keys || {};\r\n        if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\r\n            if (focusedItemNotInLoadedRange || shiftFocusedItemNotInLoadedRange) {\r\n                isSelectedItemsChanged = itemIndex !== this._shiftFocusedItemIndex || this._focusedItemIndex !== this._shiftFocusedItemIndex;\r\n                if (isSelectedItemsChanged) {\r\n                    deferred = this.changeItemSelectionWhenShiftKeyInVirtualPaging(itemIndex)\r\n                }\r\n            } else {\r\n                isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset)\r\n            }\r\n        } else if (keys.control) {\r\n            this._resetItemSelectionWhenShiftKeyPressed();\r\n            if (!setFocusOnly) {\r\n                var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\r\n                if (\"single\" === this.options.mode) {\r\n                    this.clearSelectedItems()\r\n                }\r\n                if (isSelected) {\r\n                    this._removeSelectedItem(itemKey)\r\n                } else {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n            }\r\n            isSelectedItemsChanged = true\r\n        } else {\r\n            this._resetItemSelectionWhenShiftKeyPressed();\r\n            var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\r\n            if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\r\n                this._setSelectedItems([itemKey], [itemData]);\r\n                isSelectedItemsChanged = true\r\n            }\r\n        }\r\n        if (isSelectedItemsChanged) {\r\n            when(deferred).done(() => {\r\n                this._focusedItemIndex = itemIndex;\r\n                !setFocusOnly && this.onSelectionChanged()\r\n            });\r\n            return true\r\n        }\r\n    },\r\n    isDataItem: function(item) {\r\n        return this.options.isSelectableItem(item)\r\n    },\r\n    isSelectable: function() {\r\n        return \"single\" === this.options.mode || \"multiple\" === this.options.mode\r\n    },\r\n    isItemDataSelected: function(data) {\r\n        return this._selectionStrategy.isItemDataSelected(data, {\r\n            checkPending: true\r\n        })\r\n    },\r\n    isItemSelected: function(arg, options) {\r\n        return this._selectionStrategy.isItemKeySelected(arg, options)\r\n    },\r\n    _resetItemSelectionWhenShiftKeyPressed: function() {\r\n        delete this._shiftFocusedItemIndex\r\n    },\r\n    _resetFocusedItemIndex: function() {\r\n        this._focusedItemIndex = -1\r\n    },\r\n    changeItemSelectionWhenShiftKeyInVirtualPaging: function(loadIndex) {\r\n        var loadOptions = this.options.getLoadOptions(loadIndex, this._focusedItemIndex, this._shiftFocusedItemIndex);\r\n        var deferred = new Deferred;\r\n        var indexOffset = loadOptions.skip;\r\n        this.options.load(loadOptions).done(items => {\r\n            this.changeItemSelectionWhenShiftKeyPressed(loadIndex, items, indexOffset);\r\n            deferred.resolve()\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    changeItemSelectionWhenShiftKeyPressed: function(itemIndex, items, indexOffset) {\r\n        var isSelectedItemsChanged = false;\r\n        var itemIndexStep;\r\n        var indexOffsetDefined = isDefined(indexOffset);\r\n        var index = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\r\n        var keyOf = this.options.keyOf;\r\n        var focusedItem = items[index];\r\n        var focusedData = this.options.getItemData(focusedItem);\r\n        var focusedKey = keyOf(focusedData);\r\n        var isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\r\n        if (!isDefined(this._shiftFocusedItemIndex)) {\r\n            this._shiftFocusedItemIndex = this._focusedItemIndex\r\n        }\r\n        var data;\r\n        var itemKey;\r\n        var startIndex;\r\n        var endIndex;\r\n        if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\r\n            itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            startIndex = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\r\n            endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\r\n            for (index = startIndex; index !== endIndex; index += itemIndexStep) {\r\n                if (indexOffsetDefined || this.isDataItem(items[index])) {\r\n                    itemKey = keyOf(this.options.getItemData(items[index]));\r\n                    this._removeSelectedItem(itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== this._shiftFocusedItemIndex) {\r\n            itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            startIndex = indexOffsetDefined ? itemIndex - indexOffset : itemIndex;\r\n            endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\r\n            for (index = startIndex; index !== endIndex; index += itemIndexStep) {\r\n                if (indexOffsetDefined || this.isDataItem(items[index])) {\r\n                    data = this.options.getItemData(items[index]);\r\n                    itemKey = keyOf(data);\r\n                    this._addSelectedItem(data, itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if ((indexOffsetDefined || this.isDataItem(focusedItem)) && !isFocusedItemSelected) {\r\n            this._addSelectedItem(focusedData, focusedKey);\r\n            isSelectedItemsChanged = true\r\n        }\r\n        return isSelectedItemsChanged\r\n    },\r\n    clearSelectedItems: function() {\r\n        this._setSelectedItems([], [])\r\n    },\r\n    selectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(false)\r\n        } else {\r\n            return this.selectedItemKeys([], true, false, true)\r\n        }\r\n    },\r\n    deselectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(true)\r\n        } else {\r\n            return this.selectedItemKeys([], true, true, true)\r\n        }\r\n    },\r\n    _onePageSelectAll: function(isDeselect) {\r\n        var items = this._selectionStrategy.getSelectableItems(this.options.plainItems());\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (this.isDataItem(item)) {\r\n                var itemData = this.options.getItemData(item);\r\n                var itemKey = this.options.keyOf(itemData);\r\n                var isSelected = this.isItemSelected(itemKey);\r\n                if (!isSelected && !isDeselect) {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                if (isSelected && isDeselect) {\r\n                    this._removeSelectedItem(itemKey)\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return (new Deferred).resolve()\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        return this._selectionStrategy.getSelectAllState(visibleOnly)\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}