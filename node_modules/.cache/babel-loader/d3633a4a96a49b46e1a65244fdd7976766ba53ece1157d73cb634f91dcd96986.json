{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../devices\";\nimport { isEmptyObject, isFunction } from \"../utils/type\";\nimport { findBestMatches } from \"../utils/common\";\nimport { extend } from \"../utils/extend\";\nimport { compileGetter } from \"../utils/data\";\nvar cachedGetters = {};\nexport var convertRulesToOptions = rules => {\n  var currentDevice = devices.current();\n  return rules.reduce((options, _ref) => {\n    var {\n      device: device,\n      options: ruleOptions\n    } = _ref;\n    var deviceFilter = device || {};\n    var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\n    if (match) {\n      extend(true, options, ruleOptions);\n    }\n    return options;\n  }, {});\n};\nexport var normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\n  [options]: value\n};\nexport var deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\nexport var getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\nexport var getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\nexport var getNestedOptionValue = function (optionsObject, name) {\n  cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n  return cachedGetters[name](optionsObject, {\n    functionsAsIs: true\n  });\n};\nexport var createDefaultOptionRules = function () {\n  var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  return options;\n};","map":{"version":3,"names":["devices","isEmptyObject","isFunction","findBestMatches","extend","compileGetter","cachedGetters","convertRulesToOptions","rules","currentDevice","current","reduce","options","_ref","device","ruleOptions","deviceFilter","match","deviceMatch","normalizeOptions","value","filter","length","getFieldName","fullName","substr","lastIndexOf","getParentName","getNestedOptionValue","optionsObject","name","functionsAsIs","createDefaultOptionRules","arguments"],"sources":["C:/Users/ninad/OneDrive/Radna povrÅ¡ina/zavrsni/client/node_modules/devextreme/esm/core/options/utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 22.2.6\r\n * Build date: Tue Apr 18 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport devices from \"../devices\";\r\nimport {\r\n    isEmptyObject,\r\n    isFunction\r\n} from \"../utils/type\";\r\nimport {\r\n    findBestMatches\r\n} from \"../utils/common\";\r\nimport {\r\n    extend\r\n} from \"../utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../utils/data\";\r\nvar cachedGetters = {};\r\nexport var convertRulesToOptions = rules => {\r\n    var currentDevice = devices.current();\r\n    return rules.reduce((options, _ref) => {\r\n        var {\r\n            device: device,\r\n            options: ruleOptions\r\n        } = _ref;\r\n        var deviceFilter = device || {};\r\n        var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\r\n        if (match) {\r\n            extend(true, options, ruleOptions)\r\n        }\r\n        return options\r\n    }, {})\r\n};\r\nexport var normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\r\n    [options]: value\r\n};\r\nexport var deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\r\nexport var getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\r\nexport var getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\r\nexport var getNestedOptionValue = function(optionsObject, name) {\r\n    cachedGetters[name] = cachedGetters[name] || compileGetter(name);\r\n    return cachedGetters[name](optionsObject, {\r\n        functionsAsIs: true\r\n    })\r\n};\r\nexport var createDefaultOptionRules = function() {\r\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    return options\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,YAAY;AAChC,SACIC,aAAa,EACbC,UAAU,QACP,eAAe;AACtB,SACIC,eAAe,QACZ,iBAAiB;AACxB,SACIC,MAAM,QACH,iBAAiB;AACxB,SACIC,aAAa,QACV,eAAe;AACtB,IAAIC,aAAa,GAAG,CAAC,CAAC;AACtB,OAAO,IAAIC,qBAAqB,GAAGC,KAAK,IAAI;EACxC,IAAIC,aAAa,GAAGT,OAAO,CAACU,OAAO,CAAC,CAAC;EACrC,OAAOF,KAAK,CAACG,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnC,IAAI;MACAC,MAAM,EAAEA,MAAM;MACdF,OAAO,EAAEG;IACb,CAAC,GAAGF,IAAI;IACR,IAAIG,YAAY,GAAGF,MAAM,IAAI,CAAC,CAAC;IAC/B,IAAIG,KAAK,GAAGf,UAAU,CAACc,YAAY,CAAC,GAAGA,YAAY,CAACP,aAAa,CAAC,GAAGS,WAAW,CAACT,aAAa,EAAEO,YAAY,CAAC;IAC7G,IAAIC,KAAK,EAAE;MACPb,MAAM,CAAC,IAAI,EAAEQ,OAAO,EAAEG,WAAW,CAAC;IACtC;IACA,OAAOH,OAAO;EAClB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AACD,OAAO,IAAIO,gBAAgB,GAAGA,CAACP,OAAO,EAAEQ,KAAK,KAAK,QAAQ,KAAK,OAAOR,OAAO,GAAGA,OAAO,GAAG;EACtF,CAACA,OAAO,GAAGQ;AACf,CAAC;AACD,OAAO,IAAIF,WAAW,GAAGA,CAACJ,MAAM,EAAEO,MAAM,KAAKpB,aAAa,CAACoB,MAAM,CAAC,IAAIlB,eAAe,CAACW,MAAM,EAAE,CAACO,MAAM,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC;AAClH,OAAO,IAAIC,YAAY,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACD,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpF,OAAO,IAAIC,aAAa,GAAGH,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAED,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,CAAC;AACpF,OAAO,IAAIE,oBAAoB,GAAG,SAAAA,CAASC,aAAa,EAAEC,IAAI,EAAE;EAC5DxB,aAAa,CAACwB,IAAI,CAAC,GAAGxB,aAAa,CAACwB,IAAI,CAAC,IAAIzB,aAAa,CAACyB,IAAI,CAAC;EAChE,OAAOxB,aAAa,CAACwB,IAAI,CAAC,CAACD,aAAa,EAAE;IACtCE,aAAa,EAAE;EACnB,CAAC,CAAC;AACN,CAAC;AACD,OAAO,IAAIC,wBAAwB,GAAG,SAAAA,CAAA,EAAW;EAC7C,IAAIpB,OAAO,GAAGqB,SAAS,CAACX,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKW,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACjF,OAAOrB,OAAO;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}