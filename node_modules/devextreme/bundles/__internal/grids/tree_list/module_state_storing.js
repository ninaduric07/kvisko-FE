/**
 * DevExtreme (bundles/__internal/grids/tree_list/module_state_storing.js)
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
var extend_1 = require("../../../core/utils/extend");
var ui_grid_core_state_storing_1 = require("../../../ui/grid_core/ui.grid_core.state_storing");
var module_core_1 = __importDefault(require("./module_core"));
var origApplyState = ui_grid_core_state_storing_1.stateStoringModule.extenders.controllers.stateStoring.applyState;
module_core_1.default.registerModule("stateStoring", extend_1.extend(true, {}, ui_grid_core_state_storing_1.stateStoringModule, {
    extenders: {
        controllers: {
            stateStoring: {
                applyState: function(state) {
                    origApplyState.apply(this, arguments);
                    this.option("expandedRowKeys", state.expandedRowKeys ? state.expandedRowKeys.slice() : [])
                }
            },
            data: {
                getUserState: function() {
                    var state = this.callBase.apply(this, arguments);
                    if (!this.option("autoExpandAll")) {
                        state.expandedRowKeys = this.option("expandedRowKeys")
                    }
                    return state
                }
            }
        }
    }
}));
